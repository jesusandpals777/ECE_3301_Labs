

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Apr 28 12:34:14 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           	psect	idataCOMRAM
    96  00257A                     __pidataCOMRAM:
    97                           	opt stack 0
    98                           
    99                           ;initializer for _setup_fan_temp
   100  00257A  4B                 	db	75
   101                           
   102                           ;initializer for _tempSecond
   103  00257B  FF                 	db	255
   104                           
   105                           ;initializer for _wrap
   106  00257C  01                 	db	1
   107                           
   108                           	psect	idataBANK0
   109  001DDC                     __pidataBANK0:
   110                           	opt stack 0
   111                           
   112                           ;initializer for _array1
   113  001DDC  A2                 	db	162
   114  001DDD  62                 	db	98
   115  001DDE  E2                 	db	226
   116  001DDF  22                 	db	34
   117  001DE0  02                 	db	2
   118  001DE1  C2                 	db	194
   119  001DE2  E0                 	db	224
   120  001DE3  A8                 	db	168
   121  001DE4  90                 	db	144
   122  001DE5  68                 	db	104
   123  001DE6  98                 	db	152
   124  001DE7  B0                 	db	176
   125  001DE8  30                 	db	48
   126  001DE9  18                 	db	24
   127  001DEA  7A                 	db	122
   128  001DEB  10                 	db	16
   129  001DEC  38                 	db	56
   130  001DED  5A                 	db	90
   131  001DEE  42                 	db	66
   132  001DEF  4A                 	db	74
   133  001DF0  52                 	db	82
   134                           
   135                           ;initializer for _alarm_time
   136  001DF1  30                 	db	48
   137  001DF2  30                 	db	48
   138  001DF3  3A                 	db	58
   139  001DF4  30                 	db	48
   140  001DF5  30                 	db	48
   141  001DF6  3A                 	db	58
   142  001DF7  30                 	db	48
   143  001DF8  30                 	db	48
   144  001DF9  00                 	db	0
   145                           
   146                           ;initializer for _setup_alarm_time
   147  001DFA  30                 	db	48
   148  001DFB  30                 	db	48
   149  001DFC  3A                 	db	58
   150  001DFD  30                 	db	48
   151  001DFE  30                 	db	48
   152  001DFF  3A                 	db	58
   153  001E00  30                 	db	48
   154  001E01  30                 	db	48
   155  001E02  00                 	db	0
   156                           
   157                           ;initializer for _setup_date
   158  001E03  30                 	db	48
   159  001E04  31                 	db	49
   160  001E05  2F                 	db	47
   161  001E06  30                 	db	48
   162  001E07  31                 	db	49
   163  001E08  2F                 	db	47
   164  001E09  30                 	db	48
   165  001E0A  30                 	db	48
   166  001E0B  00                 	db	0
   167                           
   168                           ;initializer for _setup_time
   169  001E0C  30                 	db	48
   170  001E0D  30                 	db	48
   171  001E0E  3A                 	db	58
   172  001E0F  30                 	db	48
   173  001E10  30                 	db	48
   174  001E11  3A                 	db	58
   175  001E12  30                 	db	48
   176  001E13  30                 	db	48
   177  001E14  00                 	db	0
   178                           
   179                           ;initializer for _setup_fan_text
   180  001E15  30                 	db	48
   181  001E16  37                 	db	55
   182  001E17  35                 	db	53
   183  001E18  46                 	db	70
   184  001E19  00                 	db	0
   185                           
   186                           ;initializer for _Alarm_SW_Txt
   187  001E1A  4F                 	db	79
   188  001E1B  46                 	db	70
   189  001E1C  46                 	db	70
   190  001E1D  00                 	db	0
   191                           
   192                           ;initializer for _RTC_ALARM_Txt
   193  001E1E  30                 	db	48
   194  001E1F  00                 	db	0
   195                           
   196                           ;initializer for _date
   197  001E20  30                 	db	48
   198  001E21  30                 	db	48
   199  001E22  2F                 	db	47
   200  001E23  30                 	db	48
   201  001E24  30                 	db	48
   202  001E25  2F                 	db	47
   203  001E26  30                 	db	48
   204  001E27  30                 	db	48
   205  001E28  00                 	db	0
   206                           
   207                           ;initializer for _time
   208  001E29  30                 	db	48
   209  001E2A  30                 	db	48
   210  001E2B  3A                 	db	58
   211  001E2C  30                 	db	48
   212  001E2D  30                 	db	48
   213  001E2E  3A                 	db	58
   214  001E2F  30                 	db	48
   215  001E30  30                 	db	48
   216  001E31  00                 	db	0
   217                           
   218                           ;initializer for _RPM_Txt
   219  001E32  30                 	db	48
   220  001E33  30                 	db	48
   221  001E34  30                 	db	48
   222  001E35  30                 	db	48
   223  001E36  00                 	db	0
   224                           
   225                           ;initializer for _DC_Txt
   226  001E37  30                 	db	48
   227  001E38  30                 	db	48
   228  001E39  30                 	db	48
   229  001E3A  00                 	db	0
   230                           
   231                           ;initializer for _Fan_SW_Txt
   232  001E3B  4F                 	db	79
   233  001E3C  46                 	db	70
   234  001E3D  46                 	db	70
   235  001E3E  00                 	db	0
   236                           
   237                           ;initializer for _tempC
   238  001E3F  2B                 	db	43
   239  001E40  32                 	db	50
   240  001E41  35                 	db	53
   241  001E42  00                 	db	0
   242                           
   243                           ;initializer for _tempF
   244  001E43  2B                 	db	43
   245  001E44  37                 	db	55
   246  001E45  37                 	db	55
   247  001E46  00                 	db	0
   248                           
   249                           	psect	idataBANK1
   250  001FB2                     __pidataBANK1:
   251                           	opt stack 0
   252                           
   253                           ;initializer for _color
   254  001FB2  F800               	dw	63488
   255  001FB4  F800               	dw	63488
   256  001FB6  F800               	dw	63488
   257  001FB8  001F               	dw	31
   258  001FBA  001F               	dw	31
   259  001FBC  07E0               	dw	2016
   260  001FBE  F81F               	dw	63519
   261  001FC0  F81F               	dw	63519
   262  001FC2  F81F               	dw	63519
   263  001FC4  0000               	dw	0
   264  001FC6  0000               	dw	0
   265  001FC8  0000               	dw	0
   266  001FCA  0000               	dw	0
   267  001FCC  0000               	dw	0
   268  001FCE  0000               	dw	0
   269  001FD0  0000               	dw	0
   270  001FD2  0000               	dw	0
   271  001FD4  0000               	dw	0
   272  001FD6  0000               	dw	0
   273  001FD8  0000               	dw	0
   274  001FDA  0000               	dw	0
   275                           
   276                           ;initializer for _buffer
   277  001FDC  20                 	db	32
   278  001FDD  45                 	db	69
   279  001FDE  43                 	db	67
   280  001FDF  45                 	db	69
   281  001FE0  33                 	db	51
   282  001FE1  33                 	db	51
   283  001FE2  30                 	db	48
   284  001FE3  31                 	db	49
   285  001FE4  4C                 	db	76
   286  001FE5  20                 	db	32
   287  001FE6  53                 	db	83
   288  001FE7  70                 	db	112
   289  001FE8  27                 	db	39
   290  001FE9  32                 	db	50
   291  001FEA  31                 	db	49
   292  001FEB  20                 	db	32
   293  001FEC  4C                 	db	76
   294  001FED  31                 	db	49
   295  001FEE  32                 	db	50
   296  001FEF  00                 	db	0
   297  001FF0  00                 	db	0
   298  001FF1  00                 	db	0
   299  001FF2  00                 	db	0
   300  001FF3  00                 	db	0
   301  001FF4  00                 	db	0
   302  001FF5  00                 	db	0
   303  001FF6  00                 	db	0
   304  001FF7  00                 	db	0
   305  001FF8  00                 	db	0
   306  001FF9  00                 	db	0
   307  001FFA  00                 	db	0
   308  001FFB  00                 	db	0
   309  001FFC  00                 	db	0
   310                           
   311                           	psect	mediumconst
   312  00FCBC                     __pmediumconst:
   313                           	opt stack 0
   314  00FCBC  00                 	db	0
   315  00FCBD                     _font:
   316                           	opt stack 0
   317  00FCBD  00                 	db	0
   318  00FCBE  00                 	db	0
   319  00FCBF  00                 	db	0
   320  00FCC0  00                 	db	0
   321  00FCC1  00                 	db	0
   322  00FCC2  00                 	db	0
   323  00FCC3  00                 	db	0
   324  00FCC4  5F                 	db	95
   325  00FCC5  00                 	db	0
   326  00FCC6  00                 	db	0
   327  00FCC7  00                 	db	0
   328  00FCC8  07                 	db	7
   329  00FCC9  00                 	db	0
   330  00FCCA  07                 	db	7
   331  00FCCB  00                 	db	0
   332  00FCCC  14                 	db	20
   333  00FCCD  7F                 	db	127
   334  00FCCE  14                 	db	20
   335  00FCCF  7F                 	db	127
   336  00FCD0  14                 	db	20
   337  00FCD1  24                 	db	36
   338  00FCD2  2A                 	db	42
   339  00FCD3  7F                 	db	127
   340  00FCD4  2A                 	db	42
   341  00FCD5  12                 	db	18
   342  00FCD6  23                 	db	35
   343  00FCD7  13                 	db	19
   344  00FCD8  08                 	db	8
   345  00FCD9  64                 	db	100
   346  00FCDA  62                 	db	98
   347  00FCDB  36                 	db	54
   348  00FCDC  49                 	db	73
   349  00FCDD  56                 	db	86
   350  00FCDE  20                 	db	32
   351  00FCDF  50                 	db	80
   352  00FCE0  00                 	db	0
   353  00FCE1  08                 	db	8
   354  00FCE2  07                 	db	7
   355  00FCE3  03                 	db	3
   356  00FCE4  00                 	db	0
   357  00FCE5  00                 	db	0
   358  00FCE6  1C                 	db	28
   359  00FCE7  22                 	db	34
   360  00FCE8  41                 	db	65
   361  00FCE9  00                 	db	0
   362  00FCEA  00                 	db	0
   363  00FCEB  41                 	db	65
   364  00FCEC  22                 	db	34
   365  00FCED  1C                 	db	28
   366  00FCEE  00                 	db	0
   367  00FCEF  2A                 	db	42
   368  00FCF0  1C                 	db	28
   369  00FCF1  7F                 	db	127
   370  00FCF2  1C                 	db	28
   371  00FCF3  2A                 	db	42
   372  00FCF4  08                 	db	8
   373  00FCF5  08                 	db	8
   374  00FCF6  3E                 	db	62
   375  00FCF7  08                 	db	8
   376  00FCF8  08                 	db	8
   377  00FCF9  00                 	db	0
   378  00FCFA  80                 	db	128
   379  00FCFB  70                 	db	112
   380  00FCFC  30                 	db	48
   381  00FCFD  00                 	db	0
   382  00FCFE  08                 	db	8
   383  00FCFF  08                 	db	8
   384  00FD00  08                 	db	8
   385  00FD01  08                 	db	8
   386  00FD02  08                 	db	8
   387  00FD03  00                 	db	0
   388  00FD04  00                 	db	0
   389  00FD05  60                 	db	96
   390  00FD06  60                 	db	96
   391  00FD07  00                 	db	0
   392  00FD08  20                 	db	32
   393  00FD09  10                 	db	16
   394  00FD0A  08                 	db	8
   395  00FD0B  04                 	db	4
   396  00FD0C  02                 	db	2
   397  00FD0D  3E                 	db	62
   398  00FD0E  51                 	db	81
   399  00FD0F  49                 	db	73
   400  00FD10  45                 	db	69
   401  00FD11  3E                 	db	62
   402  00FD12  00                 	db	0
   403  00FD13  42                 	db	66
   404  00FD14  7F                 	db	127
   405  00FD15  40                 	db	64
   406  00FD16  00                 	db	0
   407  00FD17  72                 	db	114
   408  00FD18  49                 	db	73
   409  00FD19  49                 	db	73
   410  00FD1A  49                 	db	73
   411  00FD1B  46                 	db	70
   412  00FD1C  21                 	db	33
   413  00FD1D  41                 	db	65
   414  00FD1E  49                 	db	73
   415  00FD1F  4D                 	db	77
   416  00FD20  33                 	db	51
   417  00FD21  18                 	db	24
   418  00FD22  14                 	db	20
   419  00FD23  12                 	db	18
   420  00FD24  7F                 	db	127
   421  00FD25  10                 	db	16
   422  00FD26  27                 	db	39
   423  00FD27  45                 	db	69
   424  00FD28  45                 	db	69
   425  00FD29  45                 	db	69
   426  00FD2A  39                 	db	57
   427  00FD2B  3C                 	db	60
   428  00FD2C  4A                 	db	74
   429  00FD2D  49                 	db	73
   430  00FD2E  49                 	db	73
   431  00FD2F  31                 	db	49
   432  00FD30  41                 	db	65
   433  00FD31  21                 	db	33
   434  00FD32  11                 	db	17
   435  00FD33  09                 	db	9
   436  00FD34  07                 	db	7
   437  00FD35  36                 	db	54
   438  00FD36  49                 	db	73
   439  00FD37  49                 	db	73
   440  00FD38  49                 	db	73
   441  00FD39  36                 	db	54
   442  00FD3A  46                 	db	70
   443  00FD3B  49                 	db	73
   444  00FD3C  49                 	db	73
   445  00FD3D  29                 	db	41
   446  00FD3E  1E                 	db	30
   447  00FD3F  00                 	db	0
   448  00FD40  00                 	db	0
   449  00FD41  14                 	db	20
   450  00FD42  00                 	db	0
   451  00FD43  00                 	db	0
   452  00FD44  00                 	db	0
   453  00FD45  40                 	db	64
   454  00FD46  34                 	db	52
   455  00FD47  00                 	db	0
   456  00FD48  00                 	db	0
   457  00FD49  00                 	db	0
   458  00FD4A  08                 	db	8
   459  00FD4B  14                 	db	20
   460  00FD4C  22                 	db	34
   461  00FD4D  41                 	db	65
   462  00FD4E  14                 	db	20
   463  00FD4F  14                 	db	20
   464  00FD50  14                 	db	20
   465  00FD51  14                 	db	20
   466  00FD52  14                 	db	20
   467  00FD53  00                 	db	0
   468  00FD54  41                 	db	65
   469  00FD55  22                 	db	34
   470  00FD56  14                 	db	20
   471  00FD57  08                 	db	8
   472  00FD58  02                 	db	2
   473  00FD59  01                 	db	1
   474  00FD5A  59                 	db	89
   475  00FD5B  09                 	db	9
   476  00FD5C  06                 	db	6
   477  00FD5D  3E                 	db	62
   478  00FD5E  41                 	db	65
   479  00FD5F  5D                 	db	93
   480  00FD60  59                 	db	89
   481  00FD61  4E                 	db	78
   482  00FD62  7C                 	db	124
   483  00FD63  12                 	db	18
   484  00FD64  11                 	db	17
   485  00FD65  12                 	db	18
   486  00FD66  7C                 	db	124
   487  00FD67  7F                 	db	127
   488  00FD68  49                 	db	73
   489  00FD69  49                 	db	73
   490  00FD6A  49                 	db	73
   491  00FD6B  36                 	db	54
   492  00FD6C  3E                 	db	62
   493  00FD6D  41                 	db	65
   494  00FD6E  41                 	db	65
   495  00FD6F  41                 	db	65
   496  00FD70  22                 	db	34
   497  00FD71  7F                 	db	127
   498  00FD72  41                 	db	65
   499  00FD73  41                 	db	65
   500  00FD74  41                 	db	65
   501  00FD75  3E                 	db	62
   502  00FD76  7F                 	db	127
   503  00FD77  49                 	db	73
   504  00FD78  49                 	db	73
   505  00FD79  49                 	db	73
   506  00FD7A  41                 	db	65
   507  00FD7B  7F                 	db	127
   508  00FD7C  09                 	db	9
   509  00FD7D  09                 	db	9
   510  00FD7E  09                 	db	9
   511  00FD7F  01                 	db	1
   512  00FD80  3E                 	db	62
   513  00FD81  41                 	db	65
   514  00FD82  41                 	db	65
   515  00FD83  51                 	db	81
   516  00FD84  73                 	db	115
   517  00FD85  7F                 	db	127
   518  00FD86  08                 	db	8
   519  00FD87  08                 	db	8
   520  00FD88  08                 	db	8
   521  00FD89  7F                 	db	127
   522  00FD8A  00                 	db	0
   523  00FD8B  41                 	db	65
   524  00FD8C  7F                 	db	127
   525  00FD8D  41                 	db	65
   526  00FD8E  00                 	db	0
   527  00FD8F  20                 	db	32
   528  00FD90  40                 	db	64
   529  00FD91  41                 	db	65
   530  00FD92  3F                 	db	63
   531  00FD93  01                 	db	1
   532  00FD94  7F                 	db	127
   533  00FD95  08                 	db	8
   534  00FD96  14                 	db	20
   535  00FD97  22                 	db	34
   536  00FD98  41                 	db	65
   537  00FD99  7F                 	db	127
   538  00FD9A  40                 	db	64
   539  00FD9B  40                 	db	64
   540  00FD9C  40                 	db	64
   541  00FD9D  40                 	db	64
   542  00FD9E  7F                 	db	127
   543  00FD9F  02                 	db	2
   544  00FDA0  1C                 	db	28
   545  00FDA1  02                 	db	2
   546  00FDA2  7F                 	db	127
   547  00FDA3  7F                 	db	127
   548  00FDA4  04                 	db	4
   549  00FDA5  08                 	db	8
   550  00FDA6  10                 	db	16
   551  00FDA7  7F                 	db	127
   552  00FDA8  3E                 	db	62
   553  00FDA9  41                 	db	65
   554  00FDAA  41                 	db	65
   555  00FDAB  41                 	db	65
   556  00FDAC  3E                 	db	62
   557  00FDAD  7F                 	db	127
   558  00FDAE  09                 	db	9
   559  00FDAF  09                 	db	9
   560  00FDB0  09                 	db	9
   561  00FDB1  06                 	db	6
   562  00FDB2  3E                 	db	62
   563  00FDB3  41                 	db	65
   564  00FDB4  51                 	db	81
   565  00FDB5  21                 	db	33
   566  00FDB6  5E                 	db	94
   567  00FDB7  7F                 	db	127
   568  00FDB8  09                 	db	9
   569  00FDB9  19                 	db	25
   570  00FDBA  29                 	db	41
   571  00FDBB  46                 	db	70
   572  00FDBC                     __end_of_font:
   573                           	opt stack 0
   574  00FDBC                     _font2:
   575                           	opt stack 0
   576  00FDBC  26                 	db	38
   577  00FDBD  49                 	db	73
   578  00FDBE  49                 	db	73
   579  00FDBF  49                 	db	73
   580  00FDC0  32                 	db	50
   581  00FDC1  03                 	db	3
   582  00FDC2  01                 	db	1
   583  00FDC3  7F                 	db	127
   584  00FDC4  01                 	db	1
   585  00FDC5  03                 	db	3
   586  00FDC6  3F                 	db	63
   587  00FDC7  40                 	db	64
   588  00FDC8  40                 	db	64
   589  00FDC9  40                 	db	64
   590  00FDCA  3F                 	db	63
   591  00FDCB  1F                 	db	31
   592  00FDCC  20                 	db	32
   593  00FDCD  40                 	db	64
   594  00FDCE  20                 	db	32
   595  00FDCF  1F                 	db	31
   596  00FDD0  3F                 	db	63
   597  00FDD1  40                 	db	64
   598  00FDD2  38                 	db	56
   599  00FDD3  40                 	db	64
   600  00FDD4  3F                 	db	63
   601  00FDD5  63                 	db	99
   602  00FDD6  14                 	db	20
   603  00FDD7  08                 	db	8
   604  00FDD8  14                 	db	20
   605  00FDD9  63                 	db	99
   606  00FDDA  03                 	db	3
   607  00FDDB  04                 	db	4
   608  00FDDC  78                 	db	120
   609  00FDDD  04                 	db	4
   610  00FDDE  03                 	db	3
   611  00FDDF  61                 	db	97
   612  00FDE0  59                 	db	89
   613  00FDE1  49                 	db	73
   614  00FDE2  4D                 	db	77
   615  00FDE3  43                 	db	67
   616  00FDE4  00                 	db	0
   617  00FDE5  7F                 	db	127
   618  00FDE6  41                 	db	65
   619  00FDE7  41                 	db	65
   620  00FDE8  41                 	db	65
   621  00FDE9  02                 	db	2
   622  00FDEA  04                 	db	4
   623  00FDEB  08                 	db	8
   624  00FDEC  10                 	db	16
   625  00FDED  20                 	db	32
   626  00FDEE  00                 	db	0
   627  00FDEF  41                 	db	65
   628  00FDF0  41                 	db	65
   629  00FDF1  41                 	db	65
   630  00FDF2  7F                 	db	127
   631  00FDF3  04                 	db	4
   632  00FDF4  02                 	db	2
   633  00FDF5  01                 	db	1
   634  00FDF6  02                 	db	2
   635  00FDF7  04                 	db	4
   636  00FDF8  40                 	db	64
   637  00FDF9  40                 	db	64
   638  00FDFA  40                 	db	64
   639  00FDFB  40                 	db	64
   640  00FDFC  40                 	db	64
   641  00FDFD  00                 	db	0
   642  00FDFE  03                 	db	3
   643  00FDFF  07                 	db	7
   644  00FE00  08                 	db	8
   645  00FE01  00                 	db	0
   646  00FE02  20                 	db	32
   647  00FE03  54                 	db	84
   648  00FE04  54                 	db	84
   649  00FE05  78                 	db	120
   650  00FE06  40                 	db	64
   651  00FE07  7F                 	db	127
   652  00FE08  28                 	db	40
   653  00FE09  44                 	db	68
   654  00FE0A  44                 	db	68
   655  00FE0B  38                 	db	56
   656  00FE0C  38                 	db	56
   657  00FE0D  44                 	db	68
   658  00FE0E  44                 	db	68
   659  00FE0F  44                 	db	68
   660  00FE10  28                 	db	40
   661  00FE11  38                 	db	56
   662  00FE12  44                 	db	68
   663  00FE13  44                 	db	68
   664  00FE14  28                 	db	40
   665  00FE15  7F                 	db	127
   666  00FE16  38                 	db	56
   667  00FE17  54                 	db	84
   668  00FE18  54                 	db	84
   669  00FE19  54                 	db	84
   670  00FE1A  18                 	db	24
   671  00FE1B  00                 	db	0
   672  00FE1C  08                 	db	8
   673  00FE1D  7E                 	db	126
   674  00FE1E  09                 	db	9
   675  00FE1F  02                 	db	2
   676  00FE20  18                 	db	24
   677  00FE21  A4                 	db	164
   678  00FE22  A4                 	db	164
   679  00FE23  9C                 	db	156
   680  00FE24  78                 	db	120
   681  00FE25  7F                 	db	127
   682  00FE26  08                 	db	8
   683  00FE27  04                 	db	4
   684  00FE28  04                 	db	4
   685  00FE29  78                 	db	120
   686  00FE2A  00                 	db	0
   687  00FE2B  44                 	db	68
   688  00FE2C  7D                 	db	125
   689  00FE2D  40                 	db	64
   690  00FE2E  00                 	db	0
   691  00FE2F  20                 	db	32
   692  00FE30  40                 	db	64
   693  00FE31  40                 	db	64
   694  00FE32  3D                 	db	61
   695  00FE33  00                 	db	0
   696  00FE34  7F                 	db	127
   697  00FE35  10                 	db	16
   698  00FE36  28                 	db	40
   699  00FE37  44                 	db	68
   700  00FE38  00                 	db	0
   701  00FE39  00                 	db	0
   702  00FE3A  41                 	db	65
   703  00FE3B  7F                 	db	127
   704  00FE3C  40                 	db	64
   705  00FE3D  00                 	db	0
   706  00FE3E  7C                 	db	124
   707  00FE3F  04                 	db	4
   708  00FE40  78                 	db	120
   709  00FE41  04                 	db	4
   710  00FE42  78                 	db	120
   711  00FE43  7C                 	db	124
   712  00FE44  08                 	db	8
   713  00FE45  04                 	db	4
   714  00FE46  04                 	db	4
   715  00FE47  78                 	db	120
   716  00FE48  38                 	db	56
   717  00FE49  44                 	db	68
   718  00FE4A  44                 	db	68
   719  00FE4B  44                 	db	68
   720  00FE4C  38                 	db	56
   721  00FE4D  FC                 	db	252
   722  00FE4E  18                 	db	24
   723  00FE4F  24                 	db	36
   724  00FE50  24                 	db	36
   725  00FE51  18                 	db	24
   726  00FE52  18                 	db	24
   727  00FE53  24                 	db	36
   728  00FE54  24                 	db	36
   729  00FE55  18                 	db	24
   730  00FE56  FC                 	db	252
   731  00FE57  7C                 	db	124
   732  00FE58  08                 	db	8
   733  00FE59  04                 	db	4
   734  00FE5A  04                 	db	4
   735  00FE5B  08                 	db	8
   736  00FE5C  48                 	db	72
   737  00FE5D  54                 	db	84
   738  00FE5E  54                 	db	84
   739  00FE5F  54                 	db	84
   740  00FE60  24                 	db	36
   741  00FE61  04                 	db	4
   742  00FE62  04                 	db	4
   743  00FE63  3F                 	db	63
   744  00FE64  44                 	db	68
   745  00FE65  24                 	db	36
   746  00FE66  3C                 	db	60
   747  00FE67  40                 	db	64
   748  00FE68  40                 	db	64
   749  00FE69  20                 	db	32
   750  00FE6A  7C                 	db	124
   751  00FE6B  1C                 	db	28
   752  00FE6C  20                 	db	32
   753  00FE6D  40                 	db	64
   754  00FE6E  20                 	db	32
   755  00FE6F  1C                 	db	28
   756  00FE70  3C                 	db	60
   757  00FE71  40                 	db	64
   758  00FE72  30                 	db	48
   759  00FE73  40                 	db	64
   760  00FE74  3C                 	db	60
   761  00FE75  44                 	db	68
   762  00FE76  28                 	db	40
   763  00FE77  10                 	db	16
   764  00FE78  28                 	db	40
   765  00FE79  44                 	db	68
   766  00FE7A  4C                 	db	76
   767  00FE7B  90                 	db	144
   768  00FE7C  90                 	db	144
   769  00FE7D  90                 	db	144
   770  00FE7E  7C                 	db	124
   771  00FE7F  44                 	db	68
   772  00FE80  64                 	db	100
   773  00FE81  54                 	db	84
   774  00FE82  4C                 	db	76
   775  00FE83  44                 	db	68
   776  00FE84  00                 	db	0
   777  00FE85  08                 	db	8
   778  00FE86  36                 	db	54
   779  00FE87  41                 	db	65
   780  00FE88  00                 	db	0
   781  00FE89  00                 	db	0
   782  00FE8A  00                 	db	0
   783  00FE8B  77                 	db	119
   784  00FE8C  00                 	db	0
   785  00FE8D  00                 	db	0
   786  00FE8E  00                 	db	0
   787  00FE8F  41                 	db	65
   788  00FE90  36                 	db	54
   789  00FE91  08                 	db	8
   790  00FE92  00                 	db	0
   791  00FE93  02                 	db	2
   792  00FE94  01                 	db	1
   793  00FE95  02                 	db	2
   794  00FE96  04                 	db	4
   795  00FE97  02                 	db	2
   796  00FE98                     __end_of_font2:
   797                           	opt stack 0
   798  00FE98                     _dpowers:
   799                           	opt stack 0
   800  00FE98  0001               	dw	1
   801  00FE9A  0000               	dw	0
   802  00FE9C  000A               	dw	10
   803  00FE9E  0000               	dw	0
   804  00FEA0  0064               	dw	100
   805  00FEA2  0000               	dw	0
   806  00FEA4  03E8               	dw	1000
   807  00FEA6  0000               	dw	0
   808  00FEA8  2710               	dw	10000
   809  00FEAA  0000               	dw	0
   810  00FEAC  86A0               	dw	34464
   811  00FEAE  0001               	dw	1
   812  00FEB0  4240               	dw	16960
   813  00FEB2  000F               	dw	15
   814  00FEB4  9680               	dw	38528
   815  00FEB6  0098               	dw	152
   816  00FEB8  E100               	dw	57600
   817  00FEBA  05F5               	dw	1525
   818  00FEBC  CA00               	dw	51712
   819  00FEBE  3B9A               	dw	15258
   820  00FEC0                     __end_of_dpowers:
   821                           	opt stack 0
   822  00FEC0                     _hexpowers:
   823                           	opt stack 0
   824  00FEC0  0001               	dw	1
   825  00FEC2  0000               	dw	0
   826  00FEC4  0010               	dw	16
   827  00FEC6  0000               	dw	0
   828  00FEC8  0100               	dw	256
   829  00FECA  0000               	dw	0
   830  00FECC  1000               	dw	4096
   831  00FECE  0000               	dw	0
   832  00FED0  0000               	dw	0
   833  00FED2  0001               	dw	1
   834  00FED4  0000               	dw	0
   835  00FED6  0010               	dw	16
   836  00FED8  0000               	dw	0
   837  00FEDA  0100               	dw	256
   838  00FEDC  0000               	dw	0
   839  00FEDE  1000               	dw	4096
   840  00FEE0                     __end_of_hexpowers:
   841                           	opt stack 0
   842  0000                     _ADCON1	set	4033
   843  0000                     _CCP1CON	set	4029
   844  0000                     _CCP2CON	set	4026
   845  0000                     _CCPR1L	set	4030
   846  0000                     _CCPR2L	set	4027
   847  0000                     _INTCON2bits	set	4081
   848  0000                     _INTCONbits	set	4082
   849  0000                     _OSCCON	set	4051
   850  0000                     _PIE1bits	set	3997
   851  0000                     _PIR1bits	set	3998
   852  0000                     _PORTAbits	set	3968
   853  0000                     _PORTBbits	set	3969
   854  0000                     _PORTCbits	set	3970
   855  0000                     _PORTDbits	set	3971
   856  0000                     _PORTEbits	set	3972
   857  0000                     _PR2	set	4043
   858  0000                     _RCSTA	set	4011
   859  0000                     _RCSTAbits	set	4011
   860  0000                     _SPBRG	set	4015
   861  0000                     _SPBRGH	set	4016
   862  0000                     _SSPBUF	set	4041
   863  0000                     _SSPCON1	set	4038
   864  0000                     _SSPSTAT	set	4039
   865  0000                     _SSPSTATbits	set	4039
   866  0000                     _T0CON	set	4053
   867  0000                     _T0CONbits	set	4053
   868  0000                     _T1CON	set	4045
   869  0000                     _T1CONbits	set	4045
   870  0000                     _T2CON	set	4042
   871  0000                     _T3CON	set	4017
   872  0000                     _TMR0H	set	4055
   873  0000                     _TMR0L	set	4054
   874  0000                     _TMR1H	set	4047
   875  0000                     _TMR1L	set	4046
   876  0000                     _TMR3L	set	4018
   877  0000                     _TRISA	set	3986
   878  0000                     _TRISB	set	3987
   879  0000                     _TRISBbits	set	3987
   880  0000                     _TRISC	set	3988
   881  0000                     _TRISCbits	set	3988
   882  0000                     _TRISD	set	3989
   883  0000                     _TRISDbits	set	3989
   884  0000                     _TXREG	set	4013
   885  0000                     _TXSTA	set	4012
   886  0000                     _TXSTAbits	set	4012
   887  0000                     _RBPU	set	32655
   888  0000                     _TRMT	set	32097
   889  0000                     _nRBPU	set	32655
   890  00FEE0                     STR_8:
   891  00FEE0  4E                 	db	78	;'N'
   892  00FEE1  45                 	db	69	;'E'
   893  00FEE2  43                 	db	67	;'C'
   894  00FEE3  5F                 	db	95	;'_'
   895  00FEE4  43                 	db	67	;'C'
   896  00FEE5  6F                 	db	111	;'o'
   897  00FEE6  64                 	db	100	;'d'
   898  00FEE7  65                 	db	101	;'e'
   899  00FEE8  20                 	db	32
   900  00FEE9  3D                 	db	61	;'='
   901  00FEEA  20                 	db	32
   902  00FEEB  25                 	db	37
   903  00FEEC  30                 	db	48	;'0'
   904  00FEED  38                 	db	56	;'8'
   905  00FEEE  6C                 	db	108	;'l'
   906  00FEEF  78                 	db	120	;'x'
   907  00FEF0  20                 	db	32
   908  00FEF1  25                 	db	37
   909  00FEF2  78                 	db	120	;'x'
   910  00FEF3  20                 	db	32
   911  00FEF4  66                 	db	102	;'f'
   912  00FEF5  6F                 	db	111	;'o'
   913  00FEF6  75                 	db	117	;'u'
   914  00FEF7  6E                 	db	110	;'n'
   915  00FEF8  64                 	db	100	;'d'
   916  00FEF9  20                 	db	32
   917  00FEFA  3D                 	db	61	;'='
   918  00FEFB  20                 	db	32
   919  00FEFC  25                 	db	37
   920  00FEFD  64                 	db	100	;'d'
   921  00FEFE  0D                 	db	13
   922  00FEFF  0A                 	db	10
   923  00FF00  00                 	db	0
   924  00FF01                     STR_4:
   925  00FF01  25                 	db	37
   926  00FF02  30                 	db	48	;'0'
   927  00FF03  32                 	db	50	;'2'
   928  00FF04  78                 	db	120	;'x'
   929  00FF05  3A                 	db	58	;':'
   930  00FF06  25                 	db	37
   931  00FF07  30                 	db	48	;'0'
   932  00FF08  32                 	db	50	;'2'
   933  00FF09  78                 	db	120	;'x'
   934  00FF0A  3A                 	db	58	;':'
   935  00FF0B  25                 	db	37
   936  00FF0C  30                 	db	48	;'0'
   937  00FF0D  32                 	db	50	;'2'
   938  00FF0E  78                 	db	120	;'x'
   939  00FF0F  20                 	db	32
   940  00FF10  25                 	db	37
   941  00FF11  30                 	db	48	;'0'
   942  00FF12  32                 	db	50	;'2'
   943  00FF13  78                 	db	120	;'x'
   944  00FF14  2F                 	db	47
   945  00FF15  25                 	db	37
   946  00FF16  30                 	db	48	;'0'
   947  00FF17  32                 	db	50	;'2'
   948  00FF18  78                 	db	120	;'x'
   949  00FF19  2F                 	db	47
   950  00FF1A  25                 	db	37
   951  00FF1B  30                 	db	48	;'0'
   952  00FF1C  32                 	db	50	;'2'
   953  00FF1D  78                 	db	120	;'x'
   954  00FF1E  00                 	db	0
   955  00FF1F                     STR_11:
   956  00FF1F  45                 	db	69	;'E'
   957  00FF20  43                 	db	67	;'C'
   958  00FF21  45                 	db	69	;'E'
   959  00FF22  33                 	db	51	;'3'
   960  00FF23  33                 	db	51	;'3'
   961  00FF24  30                 	db	48	;'0'
   962  00FF25  31                 	db	49	;'1'
   963  00FF26  4C                 	db	76	;'L'
   964  00FF27  20                 	db	32
   965  00FF28  53                 	db	83	;'S'
   966  00FF29  70                 	db	112	;'p'
   967  00FF2A  72                 	db	114	;'r'
   968  00FF2B  69                 	db	105	;'i'
   969  00FF2C  6E                 	db	110	;'n'
   970  00FF2D  67                 	db	103	;'g'
   971  00FF2E  20                 	db	32
   972  00FF2F  32                 	db	50	;'2'
   973  00FF30  31                 	db	49	;'1'
   974  00FF31  2D                 	db	45
   975  00FF32  53                 	db	83	;'S'
   976  00FF33  31                 	db	49	;'1'
   977  00FF34  00                 	db	0
   978  00FF35                     STR_9:
   979  00FF35  43                 	db	67	;'C'
   980  00FF36  61                 	db	97	;'a'
   981  00FF37  6E                 	db	110	;'n'
   982  00FF38  6E                 	db	110	;'n'
   983  00FF39  6F                 	db	111	;'o'
   984  00FF3A  74                 	db	116	;'t'
   985  00FF3B  20                 	db	32
   986  00FF3C  66                 	db	102	;'f'
   987  00FF3D  69                 	db	105	;'i'
   988  00FF3E  6E                 	db	110	;'n'
   989  00FF3F  64                 	db	100	;'d'
   990  00FF40  20                 	db	32
   991  00FF41  62                 	db	98	;'b'
   992  00FF42  75                 	db	117	;'u'
   993  00FF43  74                 	db	116	;'t'
   994  00FF44  74                 	db	116	;'t'
   995  00FF45  6F                 	db	111	;'o'
   996  00FF46  6E                 	db	110	;'n'
   997  00FF47  20                 	db	32
   998  00FF48  0D                 	db	13
   999  00FF49  0A                 	db	10
  1000  00FF4A  00                 	db	0
  1001  00FF4B                     STR_5:
  1002  00FF4B  20                 	db	32
  1003  00FF4C  54                 	db	84	;'T'
  1004  00FF4D  65                 	db	101	;'e'
  1005  00FF4E  6D                 	db	109	;'m'
  1006  00FF4F  70                 	db	112	;'p'
  1007  00FF50  20                 	db	32
  1008  00FF51  3D                 	db	61	;'='
  1009  00FF52  20                 	db	32
  1010  00FF53  25                 	db	37
  1011  00FF54  64                 	db	100	;'d'
  1012  00FF55  20                 	db	32
  1013  00FF56  43                 	db	67	;'C'
  1014  00FF57  20                 	db	32
  1015  00FF58  3D                 	db	61	;'='
  1016  00FF59  20                 	db	32
  1017  00FF5A  25                 	db	37
  1018  00FF5B  64                 	db	100	;'d'
  1019  00FF5C  20                 	db	32
  1020  00FF5D  46                 	db	70	;'F'
  1021  00FF5E  20                 	db	32
  1022  00FF5F  00                 	db	0
  1023  00FF60                     STR_6:
  1024  00FF60  52                 	db	82	;'R'
  1025  00FF61  50                 	db	80	;'P'
  1026  00FF62  4D                 	db	77	;'M'
  1027  00FF63  20                 	db	32
  1028  00FF64  3D                 	db	61	;'='
  1029  00FF65  20                 	db	32
  1030  00FF66  25                 	db	37
  1031  00FF67  64                 	db	100	;'d'
  1032  00FF68  20                 	db	32
  1033  00FF69  20                 	db	32
  1034  00FF6A  64                 	db	100	;'d'
  1035  00FF6B  63                 	db	99	;'c'
  1036  00FF6C  20                 	db	32
  1037  00FF6D  3D                 	db	61	;'='
  1038  00FF6E  20                 	db	32
  1039  00FF6F  25                 	db	37
  1040  00FF70  64                 	db	100	;'d'
  1041  00FF71  0D                 	db	13
  1042  00FF72  0A                 	db	10
  1043  00FF73  00                 	db	0
  1044  00FF74                     STR_22:
  1045  00FF74  30                 	db	48	;'0'
  1046  00FF75  31                 	db	49	;'1'
  1047  00FF76  32                 	db	50	;'2'
  1048  00FF77  33                 	db	51	;'3'
  1049  00FF78  34                 	db	52	;'4'
  1050  00FF79  35                 	db	53	;'5'
  1051  00FF7A  36                 	db	54	;'6'
  1052  00FF7B  37                 	db	55	;'7'
  1053  00FF7C  38                 	db	56	;'8'
  1054  00FF7D  39                 	db	57	;'9'
  1055  00FF7E  61                 	db	97	;'a'
  1056  00FF7F  62                 	db	98	;'b'
  1057  00FF80  63                 	db	99	;'c'
  1058  00FF81  64                 	db	100	;'d'
  1059  00FF82  65                 	db	101	;'e'
  1060  00FF83  66                 	db	102	;'f'
  1061  00FF84  00                 	db	0
  1062  00FF85                     STR_7:
  1063  00FF85  4E                 	db	78	;'N'
  1064  00FF86  45                 	db	69	;'E'
  1065  00FF87  43                 	db	67	;'C'
  1066  00FF88  5F                 	db	95	;'_'
  1067  00FF89  43                 	db	67	;'C'
  1068  00FF8A  6F                 	db	111	;'o'
  1069  00FF8B  64                 	db	100	;'d'
  1070  00FF8C  65                 	db	101	;'e'
  1071  00FF8D  20                 	db	32
  1072  00FF8E  3D                 	db	61	;'='
  1073  00FF8F  20                 	db	32
  1074  00FF90  25                 	db	37
  1075  00FF91  78                 	db	120	;'x'
  1076  00FF92  0D                 	db	13
  1077  00FF93  0A                 	db	10
  1078  00FF94  00                 	db	0
  1079  00FF95                     STR_2:
  1080  00FF95  46                 	db	70	;'F'
  1081  00FF96  61                 	db	97	;'a'
  1082  00FF97  6E                 	db	110	;'n'
  1083  00FF98  20                 	db	32
  1084  00FF99  54                 	db	84	;'T'
  1085  00FF9A  75                 	db	117	;'u'
  1086  00FF9B  72                 	db	114	;'r'
  1087  00FF9C  6E                 	db	110	;'n'
  1088  00FF9D  65                 	db	101	;'e'
  1089  00FF9E  64                 	db	100	;'d'
  1090  00FF9F  20                 	db	32
  1091  00FFA0  4F                 	db	79	;'O'
  1092  00FFA1  66                 	db	102	;'f'
  1093  00FFA2  66                 	db	102	;'f'
  1094  00FFA3  0A                 	db	10
  1095  00FFA4  00                 	db	0
  1096  00FFA5                     STR_10:
  1097  00FFA5  62                 	db	98	;'b'
  1098  00FFA6  75                 	db	117	;'u'
  1099  00FFA7  74                 	db	116	;'t'
  1100  00FFA8  74                 	db	116	;'t'
  1101  00FFA9  6F                 	db	111	;'o'
  1102  00FFAA  6E                 	db	110	;'n'
  1103  00FFAB  20                 	db	32
  1104  00FFAC  3D                 	db	61	;'='
  1105  00FFAD  20                 	db	32
  1106  00FFAE  25                 	db	37
  1107  00FFAF  64                 	db	100	;'d'
  1108  00FFB0  20                 	db	32
  1109  00FFB1  0D                 	db	13
  1110  00FFB2  0A                 	db	10
  1111  00FFB3  00                 	db	0
  1112  00FFB4                     STR_3:
  1113  00FFB4  46                 	db	70	;'F'
  1114  00FFB5  61                 	db	97	;'a'
  1115  00FFB6  6E                 	db	110	;'n'
  1116  00FFB7  20                 	db	32
  1117  00FFB8  54                 	db	84	;'T'
  1118  00FFB9  75                 	db	117	;'u'
  1119  00FFBA  72                 	db	114	;'r'
  1120  00FFBB  6E                 	db	110	;'n'
  1121  00FFBC  65                 	db	101	;'e'
  1122  00FFBD  64                 	db	100	;'d'
  1123  00FFBE  20                 	db	32
  1124  00FFBF  4F                 	db	79	;'O'
  1125  00FFC0  6E                 	db	110	;'n'
  1126  00FFC1  0A                 	db	10
  1127  00FFC2  00                 	db	0
  1128  00FFC3                     STR_12:
  1129  00FFC3  54                 	db	84	;'T'
  1130  00FFC4  65                 	db	101	;'e'
  1131  00FFC5  6D                 	db	109	;'m'
  1132  00FFC6  70                 	db	112	;'p'
  1133  00FFC7  65                 	db	101	;'e'
  1134  00FFC8  72                 	db	114	;'r'
  1135  00FFC9  61                 	db	97	;'a'
  1136  00FFCA  74                 	db	116	;'t'
  1137  00FFCB  75                 	db	117	;'u'
  1138  00FFCC  72                 	db	114	;'r'
  1139  00FFCD  65                 	db	101	;'e'
  1140  00FFCE  3A                 	db	58	;':'
  1141  00FFCF  00                 	db	0
  1142  00FFD0                     STR_1:
  1143  00FFD0  46                 	db	70	;'F'
  1144  00FFD1  61                 	db	97	;'a'
  1145  00FFD2  6E                 	db	110	;'n'
  1146  00FFD3  20                 	db	32
  1147  00FFD4  54                 	db	84	;'T'
  1148  00FFD5  6F                 	db	111	;'o'
  1149  00FFD6  67                 	db	103	;'g'
  1150  00FFD7  67                 	db	103	;'g'
  1151  00FFD8  6C                 	db	108	;'l'
  1152  00FFD9  65                 	db	101	;'e'
  1153  00FFDA  64                 	db	100	;'d'
  1154  00FFDB  0A                 	db	10
  1155  00FFDC  00                 	db	0
  1156  00FFDD                     STR_17:
  1157  00FFDD  20                 	db	32
  1158  00FFDE  20                 	db	32
  1159  00FFDF  46                 	db	70	;'F'
  1160  00FFE0  41                 	db	65	;'A'
  1161  00FFE1  4E                 	db	78	;'N'
  1162  00FFE2  00                 	db	0
  1163  00FFE3                     STR_15:
  1164  00FFE3  54                 	db	84	;'T'
  1165  00FFE4  69                 	db	105	;'i'
  1166  00FFE5  6D                 	db	109	;'m'
  1167  00FFE6  65                 	db	101	;'e'
  1168  00FFE7  00                 	db	0
  1169  00FFE8                     STR_16:
  1170  00FFE8  44                 	db	68	;'D'
  1171  00FFE9  61                 	db	97	;'a'
  1172  00FFEA  74                 	db	116	;'t'
  1173  00FFEB  65                 	db	101	;'e'
  1174  00FFEC  00                 	db	0
  1175  00FFED                     STR_20:
  1176  00FFED  4F                 	db	79	;'O'
  1177  00FFEE  4E                 	db	78	;'N'
  1178  00FFEF  20                 	db	32
  1179  00FFF0  00                 	db	0
  1180  00FFF1                     STR_21:
  1181  00FFF1  4F                 	db	79	;'O'
  1182  00FFF2  46                 	db	70	;'F'
  1183  00FFF3  46                 	db	70	;'F'
  1184  00FFF4  00                 	db	0
  1185  00FFF5                     STR_19:
  1186  00FFF5  52                 	db	82	;'R'
  1187  00FFF6  50                 	db	80	;'P'
  1188  00FFF7  4D                 	db	77	;'M'
  1189  00FFF8  00                 	db	0
  1190  00FFF9                     STR_13:
  1191  00FFF9  43                 	db	67	;'C'
  1192  00FFFA  2F                 	db	47
  1193  00FFFB  00                 	db	0
  1194  00FFFC                     STR_18:
  1195  00FFFC  44                 	db	68	;'D'
  1196  00FFFD  43                 	db	67	;'C'
  1197  00FFFE  00                 	db	0
  1198  0000                     
  1199                           ; #config settings
  1200  00FFFF  00                 	db	0	; dummy byte at the end
  1201  0000                     
  1202                           	psect	cinit
  1203  001C00                     __pcinit:
  1204                           	opt stack 0
  1205  001C00                     start_initialization:
  1206                           	opt stack 0
  1207  001C00                     __initialization:
  1208                           	opt stack 0
  1209                           
  1210                           ; Clear objects allocated to BANK0 (10 bytes)
  1211  001C00  EE00  F0F6         	lfsr	0,__pbssBANK0
  1212  001C04  0E0A               	movlw	10
  1213  001C06                     clear_0:
  1214  001C06  6AEE               	clrf	postinc0,c
  1215  001C08  06E8               	decf	wreg,f,c
  1216  001C0A  E1FD               	bnz	clear_0
  1217                           
  1218                           ; Clear objects allocated to COMRAM (41 bytes)
  1219  001C0C  EE00  F044         	lfsr	0,__pbssCOMRAM
  1220  001C10  0E29               	movlw	41
  1221  001C12                     clear_1:
  1222  001C12  6AEE               	clrf	postinc0,c
  1223  001C14  06E8               	decf	wreg,f,c
  1224  001C16  E1FD               	bnz	clear_1
  1225                           
  1226                           ; Initialize objects allocated to BANK1 (75 bytes)
  1227                           ; load TBLPTR registers with __pidataBANK1
  1228  001C18  0EB2               	movlw	low __pidataBANK1
  1229  001C1A  6EF6               	movwf	tblptrl,c
  1230  001C1C  0E1F               	movlw	high __pidataBANK1
  1231  001C1E  6EF7               	movwf	tblptrh,c
  1232  001C20  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1233  001C22  6EF8               	movwf	tblptru,c
  1234  001C24  EE01  F000         	lfsr	0,__pdataBANK1
  1235  001C28  EE10 F04B          	lfsr	1,75
  1236  001C2C                     copy_data0:
  1237  001C2C  0009               	tblrd		*+
  1238  001C2E  CFF5 FFEE          	movff	tablat,postinc0
  1239  001C32  50E5               	movf	postdec1,w,c
  1240  001C34  50E1               	movf	fsr1l,w,c
  1241  001C36  E1FA               	bnz	copy_data0
  1242                           
  1243                           ; Initialize objects allocated to BANK0 (107 bytes)
  1244                           ; load TBLPTR registers with __pidataBANK0
  1245  001C38  0EDC               	movlw	low __pidataBANK0
  1246  001C3A  6EF6               	movwf	tblptrl,c
  1247  001C3C  0E1D               	movlw	high __pidataBANK0
  1248  001C3E  6EF7               	movwf	tblptrh,c
  1249  001C40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1250  001C42  6EF8               	movwf	tblptru,c
  1251  001C44  EE00  F080         	lfsr	0,__pdataBANK0
  1252  001C48  EE10 F06B          	lfsr	1,107
  1253  001C4C                     copy_data1:
  1254  001C4C  0009               	tblrd		*+
  1255  001C4E  CFF5 FFEE          	movff	tablat,postinc0
  1256  001C52  50E5               	movf	postdec1,w,c
  1257  001C54  50E1               	movf	fsr1l,w,c
  1258  001C56  E1FA               	bnz	copy_data1
  1259                           
  1260                           ; Initialize objects allocated to COMRAM (3 bytes)
  1261                           ; load TBLPTR registers with __pidataCOMRAM
  1262  001C58  0E7A               	movlw	low __pidataCOMRAM
  1263  001C5A  6EF6               	movwf	tblptrl,c
  1264  001C5C  0E25               	movlw	high __pidataCOMRAM
  1265  001C5E  6EF7               	movwf	tblptrh,c
  1266  001C60  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1267  001C62  6EF8               	movwf	tblptru,c
  1268  001C64  0009               	tblrd		*+	;fetch initializer
  1269  001C66  CFF5 F06D          	movff	tablat,__pdataCOMRAM
  1270  001C6A  0009               	tblrd		*+	;fetch initializer
  1271  001C6C  CFF5 F06E          	movff	tablat,__pdataCOMRAM+1
  1272  001C70  0009               	tblrd		*+	;fetch initializer
  1273  001C72  CFF5 F06F          	movff	tablat,__pdataCOMRAM+2
  1274  001C76                     end_of_initialization:
  1275                           	opt stack 0
  1276  001C76                     __end_of__initialization:
  1277                           	opt stack 0
  1278  001C76  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1279  001C78  6EF8               	movwf	tblptru,c
  1280  001C7A  0100               	movlb	0
  1281  001C7C  EF83  F005         	goto	_main	;jump to C main() function
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1l	equ	0xFE1
  1290                           
  1291                           	psect	bssCOMRAM
  1292  000044                     __pbssCOMRAM:
  1293                           	opt stack 0
  1294  000044                     _DS1621_tempC:
  1295                           	opt stack 0
  1296  000044                     	ds	2
  1297  000046                     _DS1621_tempF:
  1298                           	opt stack 0
  1299  000046                     	ds	2
  1300  000048                     _Time_Elapsed:
  1301                           	opt stack 0
  1302  000048                     	ds	2
  1303  00004A                     _nec_ok:
  1304                           	opt stack 0
  1305  00004A                     	ds	2
  1306  00004C                     _rpm:
  1307                           	opt stack 0
  1308  00004C                     	ds	2
  1309  00004E                     _txt:
  1310                           	opt stack 0
  1311  00004E                     	ds	2
  1312  000050                     _FAN:
  1313                           	opt stack 0
  1314  000050                     	ds	1
  1315  000051                     _Nec_code1:
  1316                           	opt stack 0
  1317  000051                     	ds	1
  1318  000052                     _Nec_state:
  1319                           	opt stack 0
  1320  000052                     	ds	1
  1321  000053                     __tft_type:
  1322                           	opt stack 0
  1323  000053                     	ds	1
  1324  000054                     _alarm_date:
  1325                           	opt stack 0
  1326  000054                     	ds	1
  1327  000055                     _alarm_hour:
  1328                           	opt stack 0
  1329  000055                     	ds	1
  1330  000056                     _alarm_minute:
  1331                           	opt stack 0
  1332  000056                     	ds	1
  1333  000057                     _alarm_second:
  1334                           	opt stack 0
  1335  000057                     	ds	1
  1336  000058                     _bit_count:
  1337                           	opt stack 0
  1338  000058                     	ds	1
  1339  000059                     _colstart:
  1340                           	opt stack 0
  1341  000059                     	ds	1
  1342  00005A                     _day:
  1343                           	opt stack 0
  1344  00005A                     	ds	1
  1345  00005B                     _dow:
  1346                           	opt stack 0
  1347  00005B                     	ds	1
  1348  00005C                     _duty_cycle:
  1349                           	opt stack 0
  1350  00005C                     	ds	1
  1351  00005D                     _found:
  1352                           	opt stack 0
  1353  00005D                     	ds	1
  1354  00005E                     _hour:
  1355                           	opt stack 0
  1356  00005E                     	ds	1
  1357  00005F                     _minute:
  1358                           	opt stack 0
  1359  00005F                     	ds	1
  1360  000060                     _month:
  1361                           	opt stack 0
  1362  000060                     	ds	1
  1363  000061                     _rowstart:
  1364                           	opt stack 0
  1365  000061                     	ds	1
  1366  000062                     _second:
  1367                           	opt stack 0
  1368  000062                     	ds	1
  1369  000063                     _setup_alarm_hour:
  1370                           	opt stack 0
  1371  000063                     	ds	1
  1372  000064                     _setup_alarm_minute:
  1373                           	opt stack 0
  1374  000064                     	ds	1
  1375  000065                     _setup_alarm_second:
  1376                           	opt stack 0
  1377  000065                     	ds	1
  1378  000066                     _setup_day:
  1379                           	opt stack 0
  1380  000066                     	ds	1
  1381  000067                     _setup_hour:
  1382                           	opt stack 0
  1383  000067                     	ds	1
  1384  000068                     _setup_minute:
  1385                           	opt stack 0
  1386  000068                     	ds	1
  1387  000069                     _setup_month:
  1388                           	opt stack 0
  1389  000069                     	ds	1
  1390  00006A                     _setup_second:
  1391                           	opt stack 0
  1392  00006A                     	ds	1
  1393  00006B                     _setup_year:
  1394                           	opt stack 0
  1395  00006B                     	ds	1
  1396  00006C                     _year:
  1397                           	opt stack 0
  1398  00006C                     	ds	1
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           postdec1	equ	0xFE5
  1406                           fsr1l	equ	0xFE1
  1407                           
  1408                           	psect	dataCOMRAM
  1409  00006D                     __pdataCOMRAM:
  1410                           	opt stack 0
  1411  00006D                     _setup_fan_temp:
  1412                           	opt stack 0
  1413  00006D                     	ds	1
  1414  00006E                     _tempSecond:
  1415                           	opt stack 0
  1416  00006E                     	ds	1
  1417  00006F                     _wrap:
  1418                           	opt stack 0
  1419  00006F                     	ds	1
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           postinc0	equ	0xFEE
  1425                           wreg	equ	0xFE8
  1426                           postdec1	equ	0xFE5
  1427                           fsr1l	equ	0xFE1
  1428                           
  1429                           	psect	bssBANK0
  1430  0000F6                     __pbssBANK0:
  1431                           	opt stack 0
  1432  0000F6                     _Nec_code:
  1433                           	opt stack 0
  1434  0000F6                     	ds	4
  1435  0000FA                     _ALARMEN:
  1436                           	opt stack 0
  1437  0000FA                     	ds	2
  1438  0000FC                     _nbr:
  1439                           	opt stack 0
  1440  0000FC                     	ds	2
  1441  0000FE                     _rps:
  1442                           	opt stack 0
  1443  0000FE                     	ds	2
  1444                           tblptru	equ	0xFF8
  1445                           tblptrh	equ	0xFF7
  1446                           tblptrl	equ	0xFF6
  1447                           tablat	equ	0xFF5
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           postdec1	equ	0xFE5
  1451                           fsr1l	equ	0xFE1
  1452                           
  1453                           	psect	dataBANK0
  1454  000080                     __pdataBANK0:
  1455                           	opt stack 0
  1456  000080                     _array1:
  1457                           	opt stack 0
  1458  000080                     	ds	21
  1459  000095                     _alarm_time:
  1460                           	opt stack 0
  1461  000095                     	ds	9
  1462  00009E                     _setup_alarm_time:
  1463                           	opt stack 0
  1464  00009E                     	ds	9
  1465  0000A7                     _setup_date:
  1466                           	opt stack 0
  1467  0000A7                     	ds	9
  1468  0000B0                     _setup_time:
  1469                           	opt stack 0
  1470  0000B0                     	ds	9
  1471  0000B9                     _setup_fan_text:
  1472                           	opt stack 0
  1473  0000B9                     	ds	5
  1474  0000BE                     _Alarm_SW_Txt:
  1475                           	opt stack 0
  1476  0000BE                     	ds	4
  1477  0000C2                     _RTC_ALARM_Txt:
  1478                           	opt stack 0
  1479  0000C2                     	ds	2
  1480  0000C4                     _date:
  1481                           	opt stack 0
  1482  0000C4                     	ds	9
  1483  0000CD                     _time:
  1484                           	opt stack 0
  1485  0000CD                     	ds	9
  1486  0000D6                     _RPM_Txt:
  1487                           	opt stack 0
  1488  0000D6                     	ds	5
  1489  0000DB                     _DC_Txt:
  1490                           	opt stack 0
  1491  0000DB                     	ds	4
  1492  0000DF                     _Fan_SW_Txt:
  1493                           	opt stack 0
  1494  0000DF                     	ds	4
  1495  0000E3                     _tempC:
  1496                           	opt stack 0
  1497  0000E3                     	ds	4
  1498  0000E7                     _tempF:
  1499                           	opt stack 0
  1500  0000E7                     	ds	4
  1501                           tblptru	equ	0xFF8
  1502                           tblptrh	equ	0xFF7
  1503                           tblptrl	equ	0xFF6
  1504                           tablat	equ	0xFF5
  1505                           postinc0	equ	0xFEE
  1506                           wreg	equ	0xFE8
  1507                           postdec1	equ	0xFE5
  1508                           fsr1l	equ	0xFE1
  1509                           
  1510                           	psect	dataBANK1
  1511  000100                     __pdataBANK1:
  1512                           	opt stack 0
  1513  000100                     _color:
  1514                           	opt stack 0
  1515  000100                     	ds	42
  1516  00012A                     _buffer:
  1517                           	opt stack 0
  1518  00012A                     	ds	33
  1519                           tblptru	equ	0xFF8
  1520                           tblptrh	equ	0xFF7
  1521                           tblptrl	equ	0xFF6
  1522                           tablat	equ	0xFF5
  1523                           postinc0	equ	0xFEE
  1524                           wreg	equ	0xFE8
  1525                           postdec1	equ	0xFE5
  1526                           fsr1l	equ	0xFE1
  1527                           
  1528                           	psect	cstackBANK1
  1529  00014B                     __pcstackBANK1:
  1530                           	opt stack 0
  1531  00014B                     printf@idx:
  1532                           	opt stack 0
  1533                           
  1534                           ; 1 bytes @ 0x0
  1535  00014B                     	ds	1
  1536  00014C                     printf@prec:
  1537                           	opt stack 0
  1538                           
  1539                           ; 2 bytes @ 0x1
  1540  00014C                     	ds	2
  1541  00014E                     printf@ap:
  1542                           	opt stack 0
  1543                           
  1544                           ; 2 bytes @ 0x3
  1545  00014E                     	ds	2
  1546  000150                     printf@val:
  1547                           	opt stack 0
  1548                           
  1549                           ; 4 bytes @ 0x5
  1550  000150                     	ds	4
  1551  000154                     printf@width:
  1552                           	opt stack 0
  1553                           
  1554                           ; 2 bytes @ 0x9
  1555  000154                     	ds	2
  1556  000156                     printf@flag:
  1557                           	opt stack 0
  1558                           
  1559                           ; 1 bytes @ 0xB
  1560  000156                     	ds	1
  1561  000157                     printf@c:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0xC
  1565  000157                     	ds	1
  1566  000158                     
  1567                           ; 0 bytes @ 0xD
  1568  000158                     	ds	1
  1569  000159                     main@i:
  1570                           	opt stack 0
  1571                           
  1572                           ; 2 bytes @ 0xE
  1573  000159                     	ds	2
  1574  00015B                     main@j:
  1575                           	opt stack 0
  1576                           
  1577                           ; 2 bytes @ 0x10
  1578  00015B                     	ds	2
  1579                           tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           postinc0	equ	0xFEE
  1584                           wreg	equ	0xFE8
  1585                           postdec1	equ	0xFE5
  1586                           fsr1l	equ	0xFE1
  1587                           
  1588                           	psect	cstackBANK0
  1589  0000EB                     __pcstackBANK0:
  1590                           	opt stack 0
  1591  0000EB                     ?_get_RPM:
  1592                           	opt stack 0
  1593  0000EB                     drawtext@x:
  1594                           	opt stack 0
  1595                           
  1596                           ; 1 bytes @ 0x0
  1597  0000EB                     	ds	1
  1598  0000EC                     drawtext@textsize:
  1599                           	opt stack 0
  1600                           
  1601                           ; 2 bytes @ 0x1
  1602  0000EC                     	ds	1
  1603  0000ED                     get_RPM@RPS:
  1604                           	opt stack 0
  1605                           
  1606                           ; 2 bytes @ 0x2
  1607  0000ED                     	ds	1
  1608  0000EE                     drawtext@i:
  1609                           	opt stack 0
  1610                           
  1611                           ; 2 bytes @ 0x3
  1612  0000EE                     	ds	2
  1613  0000F0                     drawtext@cursor_y:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0x5
  1617  0000F0                     	ds	1
  1618  0000F1                     drawtext@cursor_x:
  1619                           	opt stack 0
  1620                           
  1621                           ; 1 bytes @ 0x6
  1622  0000F1                     	ds	1
  1623  0000F2                     ??_Update_Screen:
  1624                           
  1625                           ; 0 bytes @ 0x7
  1626  0000F2                     	ds	2
  1627  0000F4                     Update_Screen@neg_tempF:
  1628                           	opt stack 0
  1629                           
  1630                           ; 2 bytes @ 0x9
  1631  0000F4                     	ds	2
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           postinc0	equ	0xFEE
  1637                           wreg	equ	0xFE8
  1638                           postdec1	equ	0xFE5
  1639                           fsr1l	equ	0xFE1
  1640                           
  1641                           	psect	cstackCOMRAM
  1642  000001                     __pcstackCOMRAM:
  1643                           	opt stack 0
  1644  000001                     ??_INT0_isr:
  1645  000001                     
  1646                           ; 2 bytes @ 0x0
  1647  000001                     	ds	2
  1648  000003                     ??_chkisr:
  1649                           
  1650                           ; 0 bytes @ 0x2
  1651  000003                     	ds	14
  1652  000011                     ??_isdigit:
  1653  000011                     ?_strlen:
  1654                           	opt stack 0
  1655  000011                     ?___wmul:
  1656                           	opt stack 0
  1657  000011                     ?___ftpack:
  1658                           	opt stack 0
  1659  000011                     ?___fttol:
  1660                           	opt stack 0
  1661  000011                     ?___lldiv:
  1662                           	opt stack 0
  1663  000011                     I2C_Read@ack:
  1664                           	opt stack 0
  1665  000011                     I2C_Write@outByte:
  1666                           	opt stack 0
  1667  000011                     spiwrite@x:
  1668                           	opt stack 0
  1669  000011                     putch@c:
  1670                           	opt stack 0
  1671  000011                     OpenUSART@spbrg:
  1672                           	opt stack 0
  1673  000011                     ___wmul@multiplier:
  1674                           	opt stack 0
  1675  000011                     strcpy@to:
  1676                           	opt stack 0
  1677  000011                     strlen@s:
  1678                           	opt stack 0
  1679  000011                     ___ftpack@arg:
  1680                           	opt stack 0
  1681  000011                     ___fttol@f1:
  1682                           	opt stack 0
  1683  000011                     I2C_Init@c:
  1684                           	opt stack 0
  1685  000011                     ___lldiv@dividend:
  1686                           	opt stack 0
  1687                           
  1688                           ; 4 bytes @ 0x10
  1689  000011                     	ds	1
  1690  000012                     I2C_Read@n:
  1691                           	opt stack 0
  1692  000012                     I2C_Write@n:
  1693                           	opt stack 0
  1694  000012                     spiwrite@spidata:
  1695                           	opt stack 0
  1696  000012                     _isdigit$2552:
  1697                           	opt stack 0
  1698                           
  1699                           ; 1 bytes @ 0x11
  1700  000012                     	ds	1
  1701  000013                     ??_strlen:
  1702  000013                     I2C_Read@inByte:
  1703                           	opt stack 0
  1704  000013                     I2C_Write_Cmd_Only@Cmd:
  1705                           	opt stack 0
  1706  000013                     I2C_Write_Cmd_Write_Data@Cmd:
  1707                           	opt stack 0
  1708  000013                     DS3231_Setup_Time@Device:
  1709                           	opt stack 0
  1710  000013                     write_command@cmd_:
  1711                           	opt stack 0
  1712  000013                     write_data@data_:
  1713                           	opt stack 0
  1714  000013                     OpenUSART@config:
  1715                           	opt stack 0
  1716  000013                     isdigit@c:
  1717                           	opt stack 0
  1718  000013                     ___wmul@multiplicand:
  1719                           	opt stack 0
  1720  000013                     strcpy@from:
  1721                           	opt stack 0
  1722                           
  1723                           ; 2 bytes @ 0x12
  1724  000013                     	ds	1
  1725  000014                     ?_DS1621_Read_Temp:
  1726                           	opt stack 0
  1727  000014                     I2C_Write_Cmd_Only@Device:
  1728                           	opt stack 0
  1729  000014                     I2C_Write_Cmd_Write_Data@Data_Out:
  1730                           	opt stack 0
  1731  000014                     DS3231_Read_Time@Address:
  1732                           	opt stack 0
  1733  000014                     DS3231_Setup_Time@Address:
  1734                           	opt stack 0
  1735  000014                     setAddrWindow@y0:
  1736                           	opt stack 0
  1737  000014                     ___ftpack@exp:
  1738                           	opt stack 0
  1739                           
  1740                           ; 1 bytes @ 0x13
  1741  000014                     	ds	1
  1742  000015                     ??___fttol:
  1743  000015                     I2C_Write_Cmd_Write_Data@Device:
  1744                           	opt stack 0
  1745  000015                     DS3231_Read_Time@Device:
  1746                           	opt stack 0
  1747  000015                     setAddrWindow@x1:
  1748                           	opt stack 0
  1749  000015                     ___ftpack@sign:
  1750                           	opt stack 0
  1751  000015                     ___wmul@product:
  1752                           	opt stack 0
  1753  000015                     strcpy@cp:
  1754                           	opt stack 0
  1755  000015                     strlen@cp:
  1756                           	opt stack 0
  1757  000015                     ___lldiv@divisor:
  1758                           	opt stack 0
  1759                           
  1760                           ; 4 bytes @ 0x14
  1761  000015                     	ds	1
  1762  000016                     ??___ftpack:
  1763  000016                     DS1621_Init@Device:
  1764                           	opt stack 0
  1765  000016                     DS1621_Read_Temp@Cmd:
  1766                           	opt stack 0
  1767  000016                     setAddrWindow@y1:
  1768                           	opt stack 0
  1769                           
  1770                           ; 1 bytes @ 0x15
  1771  000016                     	ds	1
  1772  000017                     ?___awdiv:
  1773                           	opt stack 0
  1774  000017                     DS1621_Read_Temp@Data_Ret:
  1775                           	opt stack 0
  1776  000017                     setAddrWindow@x0:
  1777                           	opt stack 0
  1778  000017                     delay_ms@ms:
  1779                           	opt stack 0
  1780  000017                     ___awdiv@dividend:
  1781                           	opt stack 0
  1782                           
  1783                           ; 2 bytes @ 0x16
  1784  000017                     	ds	1
  1785  000018                     DS1621_Read_Temp@Device:
  1786                           	opt stack 0
  1787  000018                     drawPixel@y:
  1788                           	opt stack 0
  1789  000018                     drawFastVLine@y:
  1790                           	opt stack 0
  1791  000018                     fillRectangle@y:
  1792                           	opt stack 0
  1793                           
  1794                           ; 1 bytes @ 0x17
  1795  000018                     	ds	1
  1796  000019                     ??_delay_ms:
  1797  000019                     ?___lbtoft:
  1798                           	opt stack 0
  1799  000019                     drawFastVLine@h:
  1800                           	opt stack 0
  1801  000019                     fillRectangle@w:
  1802                           	opt stack 0
  1803  000019                     drawPixel@color:
  1804                           	opt stack 0
  1805  000019                     ___awdiv@divisor:
  1806                           	opt stack 0
  1807  000019                     ___lldiv@quotient:
  1808                           	opt stack 0
  1809                           
  1810                           ; 4 bytes @ 0x18
  1811  000019                     	ds	1
  1812  00001A                     fillRectangle@h:
  1813                           	opt stack 0
  1814  00001A                     ___fttol@sign1:
  1815                           	opt stack 0
  1816  00001A                     drawFastVLine@color:
  1817                           	opt stack 0
  1818                           
  1819                           ; 2 bytes @ 0x19
  1820  00001A                     	ds	1
  1821  00001B                     drawPixel@x:
  1822                           	opt stack 0
  1823  00001B                     ___awdiv@counter:
  1824                           	opt stack 0
  1825  00001B                     delay_ms@count:
  1826                           	opt stack 0
  1827  00001B                     fillRectangle@color:
  1828                           	opt stack 0
  1829  00001B                     ___fttol@lval:
  1830                           	opt stack 0
  1831                           
  1832                           ; 4 bytes @ 0x1A
  1833  00001B                     	ds	1
  1834  00001C                     ??_drawFastVLine:
  1835  00001C                     ___awdiv@sign:
  1836                           	opt stack 0
  1837  00001C                     ___lbtoft@c:
  1838                           	opt stack 0
  1839  00001C                     drawCircle@x0:
  1840                           	opt stack 0
  1841                           
  1842                           ; 2 bytes @ 0x1B
  1843  00001C                     	ds	1
  1844  00001D                     ??_fillRectangle:
  1845  00001D                     ?___ftmul:
  1846                           	opt stack 0
  1847  00001D                     ___lldiv@counter:
  1848                           	opt stack 0
  1849  00001D                     ___awdiv@quotient:
  1850                           	opt stack 0
  1851  00001D                     ___ftmul@f1:
  1852                           	opt stack 0
  1853                           
  1854                           ; 3 bytes @ 0x1C
  1855  00001D                     	ds	1
  1856  00001E                     ?___llmod:
  1857                           	opt stack 0
  1858  00001E                     drawCircle@y0:
  1859                           	opt stack 0
  1860  00001E                     ___llmod@dividend:
  1861                           	opt stack 0
  1862                           
  1863                           ; 4 bytes @ 0x1D
  1864  00001E                     	ds	1
  1865  00001F                     ?___awmod:
  1866                           	opt stack 0
  1867  00001F                     ___fttol@exp1:
  1868                           	opt stack 0
  1869  00001F                     ___awmod@dividend:
  1870                           	opt stack 0
  1871                           
  1872                           ; 2 bytes @ 0x1E
  1873  00001F                     	ds	1
  1874  000020                     drawFastVLine@hi:
  1875                           	opt stack 0
  1876  000020                     drawCircle@r:
  1877                           	opt stack 0
  1878  000020                     ___ftmul@f2:
  1879                           	opt stack 0
  1880                           
  1881                           ; 3 bytes @ 0x1F
  1882  000020                     	ds	1
  1883  000021                     drawFastVLine@lo:
  1884                           	opt stack 0
  1885  000021                     fillRectangle@hi:
  1886                           	opt stack 0
  1887  000021                     ___awmod@divisor:
  1888                           	opt stack 0
  1889                           
  1890                           ; 2 bytes @ 0x20
  1891  000021                     	ds	1
  1892  000022                     drawFastVLine@x:
  1893                           	opt stack 0
  1894  000022                     fillRectangle@lo:
  1895                           	opt stack 0
  1896  000022                     drawCircle@color:
  1897                           	opt stack 0
  1898  000022                     ___llmod@divisor:
  1899                           	opt stack 0
  1900                           
  1901                           ; 4 bytes @ 0x21
  1902  000022                     	ds	1
  1903  000023                     ??___ftmul:
  1904  000023                     fillRect@y:
  1905                           	opt stack 0
  1906  000023                     fillRectangle@x:
  1907                           	opt stack 0
  1908  000023                     ___awmod@counter:
  1909                           	opt stack 0
  1910                           
  1911                           ; 1 bytes @ 0x22
  1912  000023                     	ds	1
  1913  000024                     ??_drawCircle:
  1914  000024                     fillRect@w:
  1915                           	opt stack 0
  1916  000024                     ___awmod@sign:
  1917                           	opt stack 0
  1918  000024                     fillScreen@color:
  1919                           	opt stack 0
  1920                           
  1921                           ; 2 bytes @ 0x23
  1922  000024                     	ds	1
  1923  000025                     fillRect@h:
  1924                           	opt stack 0
  1925                           
  1926                           ; 1 bytes @ 0x24
  1927  000025                     	ds	1
  1928  000026                     ___ftmul@exp:
  1929                           	opt stack 0
  1930  000026                     ___llmod@counter:
  1931                           	opt stack 0
  1932  000026                     fillRect@color:
  1933                           	opt stack 0
  1934  000026                     drawCircle@ddF_x:
  1935                           	opt stack 0
  1936                           
  1937                           ; 2 bytes @ 0x25
  1938  000026                     	ds	1
  1939  000027                     ?_printf:
  1940                           	opt stack 0
  1941  000027                     printf@f:
  1942                           	opt stack 0
  1943  000027                     ___ftmul@f3_as_product:
  1944                           	opt stack 0
  1945                           
  1946                           ; 3 bytes @ 0x26
  1947  000027                     	ds	1
  1948  000028                     ??_fillRect:
  1949  000028                     drawCircle@ddF_y:
  1950                           	opt stack 0
  1951                           
  1952                           ; 2 bytes @ 0x27
  1953  000028                     	ds	2
  1954  00002A                     ___ftmul@cntr:
  1955                           	opt stack 0
  1956  00002A                     drawCircle@f:
  1957                           	opt stack 0
  1958                           
  1959                           ; 2 bytes @ 0x29
  1960  00002A                     	ds	1
  1961  00002B                     fillRect@x:
  1962                           	opt stack 0
  1963  00002B                     ___ftmul@sign:
  1964                           	opt stack 0
  1965                           
  1966                           ; 1 bytes @ 0x2A
  1967  00002B                     	ds	1
  1968  00002C                     ?___ftdiv:
  1969                           	opt stack 0
  1970  00002C                     fillRect@i:
  1971                           	opt stack 0
  1972  00002C                     drawCircle@x:
  1973                           	opt stack 0
  1974  00002C                     ___ftdiv@f1:
  1975                           	opt stack 0
  1976                           
  1977                           ; 3 bytes @ 0x2B
  1978  00002C                     	ds	2
  1979  00002E                     drawChar@y:
  1980                           	opt stack 0
  1981  00002E                     drawCircle@y:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x2D
  1985  00002E                     	ds	1
  1986  00002F                     drawChar@c:
  1987                           	opt stack 0
  1988  00002F                     ___ftdiv@f2:
  1989                           	opt stack 0
  1990                           
  1991                           ; 3 bytes @ 0x2E
  1992  00002F                     	ds	1
  1993  000030                     drawChar@color:
  1994                           	opt stack 0
  1995                           
  1996                           ; 2 bytes @ 0x2F
  1997  000030                     	ds	2
  1998  000032                     ??___ftdiv:
  1999  000032                     drawChar@bg:
  2000                           	opt stack 0
  2001                           
  2002                           ; 2 bytes @ 0x31
  2003  000032                     	ds	2
  2004  000034                     drawChar@size:
  2005                           	opt stack 0
  2006                           
  2007                           ; 1 bytes @ 0x33
  2008  000034                     	ds	1
  2009  000035                     ??_printf:
  2010  000035                     drawChar@line:
  2011                           	opt stack 0
  2012  000035                     ___ftdiv@cntr:
  2013                           	opt stack 0
  2014                           
  2015                           ; 1 bytes @ 0x34
  2016  000035                     	ds	1
  2017  000036                     drawChar@x:
  2018                           	opt stack 0
  2019  000036                     ___ftdiv@f3:
  2020                           	opt stack 0
  2021                           
  2022                           ; 3 bytes @ 0x35
  2023  000036                     	ds	1
  2024  000037                     drawChar@j:
  2025                           	opt stack 0
  2026                           
  2027                           ; 1 bytes @ 0x36
  2028  000037                     	ds	1
  2029  000038                     drawChar@i:
  2030                           	opt stack 0
  2031                           
  2032                           ; 1 bytes @ 0x37
  2033  000038                     	ds	1
  2034  000039                     drawtext@y:
  2035                           	opt stack 0
  2036  000039                     ___ftdiv@exp:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0x38
  2040  000039                     	ds	1
  2041  00003A                     ___ftdiv@sign:
  2042                           	opt stack 0
  2043  00003A                     drawtext@_text:
  2044                           	opt stack 0
  2045                           
  2046                           ; 2 bytes @ 0x39
  2047  00003A                     	ds	1
  2048  00003B                     ??_do_update_pwm:
  2049                           
  2050                           ; 0 bytes @ 0x3A
  2051  00003B                     	ds	1
  2052  00003C                     drawtext@color:
  2053                           	opt stack 0
  2054                           
  2055                           ; 2 bytes @ 0x3B
  2056  00003C                     	ds	2
  2057  00003E                     drawtext@bg:
  2058                           	opt stack 0
  2059  00003E                     do_update_pwm@dc_f:
  2060                           	opt stack 0
  2061                           
  2062                           ; 3 bytes @ 0x3D
  2063  00003E                     	ds	2
  2064  000040                     drawtext@size:
  2065                           	opt stack 0
  2066                           
  2067                           ; 1 bytes @ 0x3F
  2068  000040                     	ds	1
  2069  000041                     ??_drawtext:
  2070  000041                     do_update_pwm@duty_cycle:
  2071                           	opt stack 0
  2072                           
  2073                           ; 1 bytes @ 0x40
  2074  000041                     	ds	1
  2075  000042                     do_update_pwm@dc_I:
  2076                           	opt stack 0
  2077                           
  2078                           ; 2 bytes @ 0x41
  2079  000042                     	ds	1
  2080  000043                     
  2081                           ; 0 bytes @ 0x42
  2082  000043                     	ds	1
  2083  000044                     tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           postinc0	equ	0xFEE
  2088                           wreg	equ	0xFE8
  2089                           postdec1	equ	0xFE5
  2090                           fsr1l	equ	0xFE1
  2091                           
  2092                           ; 0 bytes @ 0x43
  2093 ;;
  2094 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2095 ;;
  2096 ;; *************** function _main *****************
  2097 ;; Defined at:
  2098 ;;		line 138 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Lab12_ex.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  i               2   14[BANK1 ] int 
  2103 ;;  j               2   16[BANK1 ] int 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;		None               void
  2106 ;; Registers used:
  2107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;Total ram usage:        5 bytes
  2118 ;; Hardware stack levels required when called:   11
  2119 ;; This function calls:
  2120 ;;		_DS1621_Read_Temp
  2121 ;;		_DS3231_Read_Time
  2122 ;;		_DS3231_Setup_Time
  2123 ;;		_Decrease_Speed
  2124 ;;		_Do_Beep
  2125 ;;		_Do_Init
  2126 ;;		_Increase_Speed
  2127 ;;		_Initialize_Screen
  2128 ;;		_Toggle_Fan
  2129 ;;		_Update_Screen
  2130 ;;		___awdiv
  2131 ;;		___wmul
  2132 ;;		_get_RPM
  2133 ;;		_printf
  2134 ;; This function is called by:
  2135 ;;		Startup code after reset
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text0
  2140  000B06                     __ptext0:
  2141                           	opt stack 0
  2142  000B06                     _main:
  2143                           	opt stack 20
  2144                           
  2145                           ;Lab12_ex.c: 140: Do_Init();
  2146                           
  2147                           ;incstack = 0
  2148  000B06  EC48  F010         	call	_Do_Init	;wreg free
  2149                           
  2150                           ;Lab12_ex.c: 141: Initialize_Screen();
  2151  000B0A  EC4E  F004         	call	_Initialize_Screen	;wreg free
  2152                           
  2153                           ;Lab12_ex.c: 202: PORTAbits.RA4 = 0;
  2154  000B0E  9880               	bcf	3968,4,c	;volatile
  2155                           
  2156                           ;Lab12_ex.c: 204: duty_cycle = 50;
  2157  000B10  0E32               	movlw	50
  2158  000B12  6E5C               	movwf	_duty_cycle,c
  2159  000B14  D000               	goto	l7102
  2160  000B16                     l7102:
  2161                           
  2162                           ;Lab12_ex.c: 206: {
  2163                           ;Lab12_ex.c: 208: DS3231_Read_Time();
  2164  000B16  EC57  F00F         	call	_DS3231_Read_Time	;wreg free
  2165                           
  2166                           ;Lab12_ex.c: 210: if(tempSecond != second)
  2167  000B1A  5062               	movf	_second,w,c
  2168  000B1C  186E               	xorwf	_tempSecond,w,c
  2169  000B1E  B4D8               	btfsc	status,2,c
  2170  000B20  D05E               	goto	l7122
  2171                           
  2172                           ;Lab12_ex.c: 211: {
  2173                           ;Lab12_ex.c: 212: tempSecond = second;
  2174  000B22  C062  F06E         	movff	_second,_tempSecond
  2175                           
  2176                           ;Lab12_ex.c: 213: DS1621_tempC = DS1621_Read_Temp();
  2177  000B26  ECED  F010         	call	_DS1621_Read_Temp	;wreg free
  2178  000B2A  C014  F044         	movff	?_DS1621_Read_Temp,_DS1621_tempC
  2179  000B2E  C015  F045         	movff	?_DS1621_Read_Temp+1,_DS1621_tempC+1
  2180                           
  2181                           ;Lab12_ex.c: 214: DS1621_tempF = (DS1621_tempC * 9 / 5) + 32;
  2182  000B32  C044  F011         	movff	_DS1621_tempC,___wmul@multiplier
  2183  000B36  C045  F012         	movff	_DS1621_tempC+1,___wmul@multiplier+1
  2184  000B3A  0E00               	movlw	0
  2185  000B3C  6E14               	movwf	___wmul@multiplicand+1,c
  2186  000B3E  0E09               	movlw	9
  2187  000B40  6E13               	movwf	___wmul@multiplicand,c
  2188  000B42  EC51  F011         	call	___wmul	;wreg free
  2189  000B46  C011  F017         	movff	?___wmul,___awdiv@dividend
  2190  000B4A  C012  F018         	movff	?___wmul+1,___awdiv@dividend+1
  2191  000B4E  0E00               	movlw	0
  2192  000B50  6E1A               	movwf	___awdiv@divisor+1,c
  2193  000B52  0E05               	movlw	5
  2194  000B54  6E19               	movwf	___awdiv@divisor,c
  2195  000B56  ECEA  F00C         	call	___awdiv	;wreg free
  2196  000B5A  0E20               	movlw	32
  2197  000B5C  2417               	addwf	?___awdiv,w,c
  2198  000B5E  6E46               	movwf	_DS1621_tempF,c
  2199  000B60  0E00               	movlw	0
  2200  000B62  2018               	addwfc	?___awdiv+1,w,c
  2201  000B64  6E47               	movwf	_DS1621_tempF+1,c
  2202                           
  2203                           ;Lab12_ex.c: 215: rpm = get_RPM();
  2204  000B66  EC24  F010         	call	_get_RPM	;wreg free
  2205  000B6A  C0EB  F04C         	movff	?_get_RPM,_rpm
  2206  000B6E  C0EC  F04D         	movff	?_get_RPM+1,_rpm+1
  2207                           
  2208                           ;Lab12_ex.c: 216: printf ("%02x:%02x:%02x %02x/%02x/%02x",hour,minute,second,month,day,y
      +                          ear);
  2209  000B72  0E01               	movlw	low STR_4
  2210  000B74  6E27               	movwf	printf@f,c
  2211  000B76  0EFF               	movlw	high STR_4
  2212  000B78  6E28               	movwf	printf@f+1,c
  2213  000B7A  C05E  F029         	movff	_hour,?_printf+2
  2214  000B7E  6A2A               	clrf	?_printf+3,c
  2215  000B80  C05F  F02B         	movff	_minute,?_printf+4
  2216  000B84  6A2C               	clrf	?_printf+5,c
  2217  000B86  C062  F02D         	movff	_second,?_printf+6
  2218  000B8A  6A2E               	clrf	?_printf+7,c
  2219  000B8C  C060  F02F         	movff	_month,?_printf+8
  2220  000B90  6A30               	clrf	?_printf+9,c
  2221  000B92  C05A  F031         	movff	_day,?_printf+10
  2222  000B96  6A32               	clrf	?_printf+11,c
  2223  000B98  C06C  F033         	movff	_year,?_printf+12
  2224  000B9C  6A34               	clrf	?_printf+13,c
  2225  000B9E  EC0E  F000         	call	_printf	;wreg free
  2226                           
  2227                           ;Lab12_ex.c: 217: printf (" Temp = %d C = %d F ", DS1621_tempC, DS1621_tempF);
  2228  000BA2  0E4B               	movlw	low STR_5
  2229  000BA4  6E27               	movwf	printf@f,c
  2230  000BA6  0EFF               	movlw	high STR_5
  2231  000BA8  6E28               	movwf	printf@f+1,c
  2232  000BAA  C044  F029         	movff	_DS1621_tempC,?_printf+2
  2233  000BAE  C045  F02A         	movff	_DS1621_tempC+1,?_printf+3
  2234  000BB2  C046  F02B         	movff	_DS1621_tempF,?_printf+4
  2235  000BB6  C047  F02C         	movff	_DS1621_tempF+1,?_printf+5
  2236  000BBA  EC0E  F000         	call	_printf	;wreg free
  2237                           
  2238                           ;Lab12_ex.c: 218: printf ("RPM = %d  dc = %d\r\n", rpm, duty_cycle);
  2239  000BBE  0E60               	movlw	low STR_6
  2240  000BC0  6E27               	movwf	printf@f,c
  2241  000BC2  0EFF               	movlw	high STR_6
  2242  000BC4  6E28               	movwf	printf@f+1,c
  2243  000BC6  C04C  F029         	movff	_rpm,?_printf+2
  2244  000BCA  C04D  F02A         	movff	_rpm+1,?_printf+3
  2245  000BCE  C05C  F02B         	movff	_duty_cycle,?_printf+4
  2246  000BD2  6A2C               	clrf	?_printf+5,c
  2247  000BD4  EC0E  F000         	call	_printf	;wreg free
  2248                           
  2249                           ;Lab12_ex.c: 219: Update_Screen();
  2250  000BD8  EC79  F002         	call	_Update_Screen	;wreg free
  2251  000BDC  D000               	goto	l7122
  2252  000BDE                     l7122:
  2253                           
  2254                           ;Lab12_ex.c: 220: }
  2255                           ;Lab12_ex.c: 223: if (nec_ok == 1)
  2256  000BDE  044A               	decf	_nec_ok,w,c
  2257  000BE0  104B               	iorwf	_nec_ok+1,w,c
  2258  000BE2  A4D8               	btfss	status,2,c
  2259  000BE4  D798               	goto	l7102
  2260                           
  2261                           ;Lab12_ex.c: 224: {
  2262                           ;Lab12_ex.c: 225: nec_ok = 0;
  2263  000BE6  0E00               	movlw	0
  2264  000BE8  6E4B               	movwf	_nec_ok+1,c
  2265  000BEA  0E00               	movlw	0
  2266  000BEC  6E4A               	movwf	_nec_ok,c
  2267                           
  2268                           ;Lab12_ex.c: 227: printf ("NEC_Code = %x\r\n", Nec_code1);
  2269  000BEE  0E85               	movlw	low STR_7
  2270  000BF0  6E27               	movwf	printf@f,c
  2271  000BF2  0EFF               	movlw	high STR_7
  2272  000BF4  6E28               	movwf	printf@f+1,c
  2273  000BF6  C051  F029         	movff	_Nec_code1,?_printf+2
  2274  000BFA  6A2A               	clrf	?_printf+3,c
  2275  000BFC  EC0E  F000         	call	_printf	;wreg free
  2276                           
  2277                           ;Lab12_ex.c: 229: INTCONbits.INT0IE = 1;
  2278  000C00  88F2               	bsf	intcon,4,c	;volatile
  2279                           
  2280                           ;Lab12_ex.c: 230: INTCON2bits.INTEDG0 = 0;
  2281  000C02  9CF1               	bcf	intcon2,6,c	;volatile
  2282                           
  2283                           ;Lab12_ex.c: 232: found = 0xff;
  2284  000C04  685D               	setf	_found,c
  2285                           
  2286                           ;Lab12_ex.c: 233: for (int j=0; j< 21; j++)
  2287  000C06  0E00               	movlw	0
  2288  000C08  0101               	movlb	1	; () banked
  2289  000C0A  6F5C               	movwf	(main@j+1)& (0+255),b
  2290  000C0C  0E00               	movlw	0
  2291  000C0E  6F5B               	movwf	main@j& (0+255),b
  2292                           
  2293                           ; BSR set to: 1
  2294  000C10  0101               	movlb	1	; () banked
  2295  000C12  BF5C               	btfsc	(main@j+1)& (0+255),7,b
  2296  000C14  D00A               	goto	l7140
  2297  000C16  0101               	movlb	1	; () banked
  2298  000C18  515C               	movf	(main@j+1)& (0+255),w,b
  2299  000C1A  E125               	bnz	l686
  2300  000C1C  0E15               	movlw	21
  2301  000C1E  0101               	movlb	1	; () banked
  2302  000C20  5D5B               	subwf	main@j& (0+255),w,b
  2303  000C22  B0D8               	btfsc	status,0,c
  2304  000C24  D020               	goto	l686
  2305  000C26  D001               	goto	l7140
  2306                           
  2307                           ; BSR set to: 1
  2308  000C28  D01E               	goto	l686
  2309  000C2A                     l7140:
  2310                           
  2311                           ; BSR set to: 1
  2312                           ;Lab12_ex.c: 234: {
  2313                           ;Lab12_ex.c: 235: if (Nec_code1 == array1[j])
  2314  000C2A  0E80               	movlw	low _array1
  2315  000C2C  0101               	movlb	1	; () banked
  2316  000C2E  255B               	addwf	main@j& (0+255),w,b
  2317  000C30  6ED9               	movwf	fsr2l,c
  2318  000C32  0E00               	movlw	high _array1
  2319  000C34  0101               	movlb	1	; () banked
  2320  000C36  215C               	addwfc	(main@j+1)& (0+255),w,b
  2321  000C38  6EDA               	movwf	fsr2h,c
  2322  000C3A  5051               	movf	_Nec_code1,w,c
  2323  000C3C  18DE               	xorwf	postinc2,w,c
  2324  000C3E  A4D8               	btfss	status,2,c
  2325  000C40  D008               	goto	l7146
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;Lab12_ex.c: 236: {
  2329                           ;Lab12_ex.c: 237: found = j;
  2330  000C42  C15B  F05D         	movff	main@j,_found
  2331                           
  2332                           ; BSR set to: 1
  2333                           ;Lab12_ex.c: 238: j = 21;
  2334  000C46  0E00               	movlw	0
  2335  000C48  0101               	movlb	1	; () banked
  2336  000C4A  6F5C               	movwf	(main@j+1)& (0+255),b
  2337  000C4C  0E15               	movlw	21
  2338  000C4E  6F5B               	movwf	main@j& (0+255),b
  2339  000C50  D000               	goto	l7146
  2340  000C52                     l7146:
  2341                           
  2342                           ; BSR set to: 1
  2343  000C52  0101               	movlb	1	; () banked
  2344  000C54  4B5B               	infsnz	main@j& (0+255),f,b
  2345  000C56  2B5C               	incf	(main@j+1)& (0+255),f,b
  2346                           
  2347                           ; BSR set to: 1
  2348  000C58  0101               	movlb	1	; () banked
  2349  000C5A  BF5C               	btfsc	(main@j+1)& (0+255),7,b
  2350  000C5C  D7E6               	goto	l7140
  2351  000C5E  0101               	movlb	1	; () banked
  2352  000C60  515C               	movf	(main@j+1)& (0+255),w,b
  2353  000C62  E101               	bnz	u5430
  2354  000C64  D7DB               	goto	L1
  2355  000C66                     u5430:
  2356  000C66                     l686:
  2357                           
  2358                           ; BSR set to: 1
  2359                           ;Lab12_ex.c: 239: }
  2360                           ;Lab12_ex.c: 240: }
  2361                           ;Lab12_ex.c: 243: Nec_code1 = (char) ((Nec_code >> 8));
  2362  000C66  C0F7  F051         	movff	_Nec_code+1,_Nec_code1
  2363                           
  2364                           ; BSR set to: 1
  2365                           ;Lab12_ex.c: 244: for(int i = 0; i < 21; i++)
  2366  000C6A  0E00               	movlw	0
  2367  000C6C  0101               	movlb	1	; () banked
  2368  000C6E  6F5A               	movwf	(main@i+1)& (0+255),b
  2369  000C70  0E00               	movlw	0
  2370  000C72  6F59               	movwf	main@i& (0+255),b
  2371  000C74                     l7152:
  2372                           
  2373                           ; BSR set to: 1
  2374  000C74  0101               	movlb	1	; () banked
  2375  000C76  BF5A               	btfsc	(main@i+1)& (0+255),7,b
  2376  000C78  D00A               	goto	l7156
  2377  000C7A  0101               	movlb	1	; () banked
  2378  000C7C  515A               	movf	(main@i+1)& (0+255),w,b
  2379  000C7E  E12F               	bnz	l7166
  2380  000C80  0E15               	movlw	21
  2381  000C82  0101               	movlb	1	; () banked
  2382  000C84  5D59               	subwf	main@i& (0+255),w,b
  2383  000C86  B0D8               	btfsc	status,0,c
  2384  000C88  D02A               	goto	l7166
  2385  000C8A  D001               	goto	l7156
  2386                           
  2387                           ; BSR set to: 1
  2388  000C8C  D028               	goto	l7166
  2389  000C8E                     l7156:
  2390                           
  2391                           ; BSR set to: 1
  2392                           ;Lab12_ex.c: 245: {
  2393                           ;Lab12_ex.c: 246: if (Nec_code1 == array1[i])
  2394  000C8E  0E80               	movlw	low _array1
  2395  000C90  0101               	movlb	1	; () banked
  2396  000C92  2559               	addwf	main@i& (0+255),w,b
  2397  000C94  6ED9               	movwf	fsr2l,c
  2398  000C96  0E00               	movlw	high _array1
  2399  000C98  0101               	movlb	1	; () banked
  2400  000C9A  215A               	addwfc	(main@i+1)& (0+255),w,b
  2401  000C9C  6EDA               	movwf	fsr2h,c
  2402  000C9E  5051               	movf	_Nec_code1,w,c
  2403  000CA0  18DE               	xorwf	postinc2,w,c
  2404  000CA2  A4D8               	btfss	status,2,c
  2405  000CA4  D017               	goto	l7162
  2406                           
  2407                           ; BSR set to: 1
  2408                           ;Lab12_ex.c: 247: {
  2409                           ;Lab12_ex.c: 248: found = i;
  2410  000CA6  C159  F05D         	movff	main@i,_found
  2411                           
  2412                           ; BSR set to: 1
  2413                           ;Lab12_ex.c: 249: printf("NEC_Code = %08lx %x found = %d\r\n", Nec_code, Nec_code1, foun
      +                          d);
  2414  000CAA  0EE0               	movlw	low STR_8
  2415  000CAC  6E27               	movwf	printf@f,c
  2416  000CAE  0EFE               	movlw	high STR_8
  2417  000CB0  6E28               	movwf	printf@f+1,c
  2418  000CB2  C0F6  F029         	movff	_Nec_code,?_printf+2
  2419  000CB6  C0F7  F02A         	movff	_Nec_code+1,?_printf+3
  2420  000CBA  C0F8  F02B         	movff	_Nec_code+2,?_printf+4
  2421  000CBE  C0F9  F02C         	movff	_Nec_code+3,?_printf+5
  2422  000CC2  C051  F02D         	movff	_Nec_code1,?_printf+6
  2423  000CC6  6A2E               	clrf	?_printf+7,c
  2424  000CC8  C05D  F02F         	movff	_found,?_printf+8
  2425  000CCC  6A30               	clrf	?_printf+9,c
  2426  000CCE  EC0E  F000         	call	_printf	;wreg free
  2427  000CD2  D000               	goto	l7162
  2428  000CD4                     l7162:
  2429  000CD4  0101               	movlb	1	; () banked
  2430  000CD6  4B59               	infsnz	main@i& (0+255),f,b
  2431  000CD8  2B5A               	incf	(main@i+1)& (0+255),f,b
  2432  000CDA  D7CC               	goto	l7152
  2433                           
  2434                           ; BSR set to: 1
  2435  000CDC  D000               	goto	l7166
  2436  000CDE                     l7166:
  2437                           
  2438                           ; BSR set to: 1
  2439                           ;Lab12_ex.c: 250: }
  2440                           ;Lab12_ex.c: 251: }
  2441                           ;Lab12_ex.c: 253: if (found == 0xff)
  2442  000CDE  285D               	incf	_found,w,c
  2443  000CE0  A4D8               	btfss	status,2,c
  2444  000CE2  D007               	goto	l7170
  2445                           
  2446                           ; BSR set to: 1
  2447                           ;Lab12_ex.c: 254: {
  2448                           ;Lab12_ex.c: 255: printf ("Cannot find button \r\n");
  2449  000CE4  0E35               	movlw	low STR_9
  2450  000CE6  6E27               	movwf	printf@f,c
  2451  000CE8  0EFF               	movlw	high STR_9
  2452  000CEA  6E28               	movwf	printf@f+1,c
  2453  000CEC  EC0E  F000         	call	_printf	;wreg free
  2454                           
  2455                           ;Lab12_ex.c: 256: }
  2456  000CF0  D712               	goto	l7102
  2457  000CF2                     l7170:
  2458                           
  2459                           ;Lab12_ex.c: 257: else
  2460                           ;Lab12_ex.c: 258: {
  2461                           ;Lab12_ex.c: 259: Do_Beep();
  2462  000CF2  EC24  F012         	call	_Do_Beep	;wreg free
  2463                           
  2464                           ;Lab12_ex.c: 263: printf ("button = %d \r\n", found);
  2465  000CF6  0EA5               	movlw	low STR_10
  2466  000CF8  6E27               	movwf	printf@f,c
  2467  000CFA  0EFF               	movlw	high STR_10
  2468  000CFC  6E28               	movwf	printf@f+1,c
  2469  000CFE  C05D  F029         	movff	_found,?_printf+2
  2470  000D02  6A2A               	clrf	?_printf+3,c
  2471  000D04  EC0E  F000         	call	_printf	;wreg free
  2472                           
  2473                           ;Lab12_ex.c: 264: if(found == 5)
  2474  000D08  0E05               	movlw	5
  2475  000D0A  185D               	xorwf	_found,w,c
  2476  000D0C  A4D8               	btfss	status,2,c
  2477  000D0E  D003               	goto	l7178
  2478                           
  2479                           ;Lab12_ex.c: 265: {
  2480                           ;Lab12_ex.c: 266: Toggle_Fan();
  2481  000D10  EC89  F011         	call	_Toggle_Fan	;wreg free
  2482  000D14  D000               	goto	l7178
  2483  000D16                     l7178:
  2484                           
  2485                           ;Lab12_ex.c: 267: }
  2486                           ;Lab12_ex.c: 268: if(found == 6)
  2487  000D16  0E06               	movlw	6
  2488  000D18  185D               	xorwf	_found,w,c
  2489  000D1A  A4D8               	btfss	status,2,c
  2490  000D1C  D003               	goto	l7182
  2491                           
  2492                           ;Lab12_ex.c: 269: {
  2493                           ;Lab12_ex.c: 270: Decrease_Speed();
  2494  000D1E  ECF1  F011         	call	_Decrease_Speed	;wreg free
  2495  000D22  D000               	goto	l7182
  2496  000D24                     l7182:
  2497                           
  2498                           ;Lab12_ex.c: 271: }
  2499                           ;Lab12_ex.c: 272: if(found == 7)
  2500  000D24  0E07               	movlw	7
  2501  000D26  185D               	xorwf	_found,w,c
  2502  000D28  A4D8               	btfss	status,2,c
  2503  000D2A  D003               	goto	l7186
  2504                           
  2505                           ;Lab12_ex.c: 273: {
  2506                           ;Lab12_ex.c: 274: Increase_Speed();
  2507  000D2C  ECE3  F011         	call	_Increase_Speed	;wreg free
  2508  000D30  D000               	goto	l7186
  2509  000D32                     l7186:
  2510                           
  2511                           ;Lab12_ex.c: 275: }
  2512                           ;Lab12_ex.c: 276: if(found == 8)
  2513  000D32  0E08               	movlw	8
  2514  000D34  185D               	xorwf	_found,w,c
  2515  000D36  A4D8               	btfss	status,2,c
  2516  000D38  D6EE               	goto	l7102
  2517                           
  2518                           ;Lab12_ex.c: 277: {
  2519                           ;Lab12_ex.c: 278: DS3231_Setup_Time();
  2520  000D3A  EC24  F00F         	call	_DS3231_Setup_Time	;wreg free
  2521  000D3E  D6EB               	goto	l7102
  2522  000D40  EF0C  F000         	goto	start
  2523  000D44                     __end_of_main:
  2524                           	opt stack 0
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           intcon	equ	0xFF2
  2530                           intcon2	equ	0xFF1
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           postdec1	equ	0xFE5
  2534                           fsr1l	equ	0xFE1
  2535                           postinc2	equ	0xFDE
  2536                           fsr2h	equ	0xFDA
  2537                           fsr2l	equ	0xFD9
  2538                           status	equ	0xFD8
  2539                           
  2540 ;; *************** function _get_RPM *****************
  2541 ;; Defined at:
  2542 ;;		line 10 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Fan_Support.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;  RPS             2    2[BANK0 ] int 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  2    0[BANK0 ] int 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2556 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;Total ram usage:        4 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    6
  2563 ;; This function calls:
  2564 ;;		___awdiv
  2565 ;;		___wmul
  2566 ;;		_do_update_pwm
  2567 ;; This function is called by:
  2568 ;;		_main
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text1
  2573  002048                     __ptext1:
  2574                           	opt stack 0
  2575  002048                     _get_RPM:
  2576                           	opt stack 24
  2577                           
  2578                           ;Fan_Support.c: 12: int RPS = TMR3L / 2;
  2579                           
  2580                           ;incstack = 0
  2581  002048  CFB2 F017          	movff	4018,___awdiv@dividend	;volatile
  2582  00204C  6A18               	clrf	___awdiv@dividend+1,c
  2583  00204E  0E00               	movlw	0
  2584  002050  6E1A               	movwf	___awdiv@divisor+1,c
  2585  002052  0E02               	movlw	2
  2586  002054  6E19               	movwf	___awdiv@divisor,c
  2587  002056  ECEA  F00C         	call	___awdiv	;wreg free
  2588  00205A  C017  F0ED         	movff	?___awdiv,get_RPM@RPS
  2589  00205E  C018  F0EE         	movff	?___awdiv+1,get_RPM@RPS+1
  2590                           
  2591                           ;Fan_Support.c: 14: TMR3L = 0;
  2592  002062  0E00               	movlw	0
  2593  002064  6EB2               	movwf	4018,c	;volatile
  2594                           
  2595                           ;Fan_Support.c: 15: return (RPS * 60);
  2596  002066  C0ED  F011         	movff	get_RPM@RPS,___wmul@multiplier
  2597  00206A  C0EE  F012         	movff	get_RPM@RPS+1,___wmul@multiplier+1
  2598  00206E  0E00               	movlw	0
  2599  002070  6E14               	movwf	___wmul@multiplicand+1,c
  2600  002072  0E3C               	movlw	60
  2601  002074  6E13               	movwf	___wmul@multiplicand,c
  2602  002076  EC51  F011         	call	___wmul	;wreg free
  2603  00207A  C011  F0EB         	movff	?___wmul,?_get_RPM
  2604  00207E  C012  F0EC         	movff	?___wmul+1,?_get_RPM+1
  2605  002082  D005               	goto	l33
  2606                           
  2607                           ;Fan_Support.c: 16: duty_cycle = 50;
  2608  002084  0E32               	movlw	50
  2609  002086  6E5C               	movwf	_duty_cycle,c
  2610                           
  2611                           ;Fan_Support.c: 17: do_update_pwm(duty_cycle) ;
  2612  002088  505C               	movf	_duty_cycle,w,c
  2613  00208A  EC8F  F00C         	call	_do_update_pwm
  2614  00208E                     l33:
  2615  00208E  0012               	return		;funcret
  2616  002090                     __end_of_get_RPM:
  2617                           	opt stack 0
  2618                           tblptru	equ	0xFF8
  2619                           tblptrh	equ	0xFF7
  2620                           tblptrl	equ	0xFF6
  2621                           tablat	equ	0xFF5
  2622                           intcon	equ	0xFF2
  2623                           intcon2	equ	0xFF1
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1l	equ	0xFE1
  2628                           postinc2	equ	0xFDE
  2629                           fsr2h	equ	0xFDA
  2630                           fsr2l	equ	0xFD9
  2631                           status	equ	0xFD8
  2632                           
  2633 ;; *************** function _Update_Screen *****************
  2634 ;; Defined at:
  2635 ;;		line 69 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Main_Screen.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  neg_tempF       2    9[BANK0 ] int 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;		None               void
  2642 ;; Registers used:
  2643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        4 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:   10
  2656 ;; This function calls:
  2657 ;;		___awdiv
  2658 ;;		___awmod
  2659 ;;		_drawtext
  2660 ;;		_strcpy
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text2
  2667  0004F2                     __ptext2:
  2668                           	opt stack 0
  2669  0004F2                     _Update_Screen:
  2670                           	opt stack 20
  2671                           
  2672                           ;Main_Screen.c: 71: if ((DS1621_tempC & 0x80) == 0x80)
  2673                           
  2674                           ;incstack = 0
  2675  0004F2  AE44               	btfss	_DS1621_tempC,7,c
  2676  0004F4  D01C               	goto	l6718
  2677                           
  2678                           ;Main_Screen.c: 72: {
  2679                           ;Main_Screen.c: 73: tempC[0] = '-';
  2680  0004F6  0E2D               	movlw	45
  2681  0004F8  0100               	movlb	0	; () banked
  2682  0004FA  6FE3               	movwf	_tempC& (0+255),b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;Main_Screen.c: 74: tempC[1] = (DS1621_tempC & 0x7f)/10 + '0';
  2686  0004FC  0E7F               	movlw	127
  2687  0004FE  1444               	andwf	_DS1621_tempC,w,c
  2688  000500  6E17               	movwf	___awdiv@dividend,c
  2689  000502  6A18               	clrf	___awdiv@dividend+1,c
  2690  000504  0E00               	movlw	0
  2691  000506  6E1A               	movwf	___awdiv@divisor+1,c
  2692  000508  0E0A               	movlw	10
  2693  00050A  6E19               	movwf	___awdiv@divisor,c
  2694  00050C  ECEA  F00C         	call	___awdiv	;wreg free
  2695  000510  5017               	movf	?___awdiv,w,c
  2696  000512  0F30               	addlw	48
  2697  000514  0100               	movlb	0	; () banked
  2698  000516  6FE4               	movwf	(_tempC+1)& (0+255),b
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;Main_Screen.c: 75: tempC[2] = (DS1621_tempC & 0x7f)%10 + '0';
  2702  000518  0E7F               	movlw	127
  2703  00051A  1444               	andwf	_DS1621_tempC,w,c
  2704  00051C  6E1F               	movwf	___awmod@dividend,c
  2705  00051E  6A20               	clrf	___awmod@dividend+1,c
  2706  000520  0E00               	movlw	0
  2707  000522  6E22               	movwf	___awmod@divisor+1,c
  2708  000524  0E0A               	movlw	10
  2709  000526  6E21               	movwf	___awmod@divisor,c
  2710  000528  ECBF  F00D         	call	___awmod	;wreg free
  2711  00052C  D01B               	goto	L2
  2712  00052E                     l6718:
  2713                           
  2714                           ;Main_Screen.c: 77: else
  2715                           ;Main_Screen.c: 78: {
  2716                           ;Main_Screen.c: 79: tempC[0] = '+';
  2717  00052E  0E2B               	movlw	43
  2718  000530  0100               	movlb	0	; () banked
  2719  000532  6FE3               	movwf	_tempC& (0+255),b
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;Main_Screen.c: 80: tempC[1] = DS1621_tempC/10 + '0';
  2723  000534  C044  F017         	movff	_DS1621_tempC,___awdiv@dividend
  2724  000538  C045  F018         	movff	_DS1621_tempC+1,___awdiv@dividend+1
  2725  00053C  0E00               	movlw	0
  2726  00053E  6E1A               	movwf	___awdiv@divisor+1,c
  2727  000540  0E0A               	movlw	10
  2728  000542  6E19               	movwf	___awdiv@divisor,c
  2729  000544  ECEA  F00C         	call	___awdiv	;wreg free
  2730  000548  5017               	movf	?___awdiv,w,c
  2731  00054A  0F30               	addlw	48
  2732  00054C  0100               	movlb	0	; () banked
  2733  00054E  6FE4               	movwf	(_tempC+1)& (0+255),b
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;Main_Screen.c: 81: tempC[2] = DS1621_tempC%10 + '0';
  2737  000550  C044  F01F         	movff	_DS1621_tempC,___awmod@dividend
  2738  000554  C045  F020         	movff	_DS1621_tempC+1,___awmod@dividend+1
  2739  000558  0E00               	movlw	0
  2740  00055A  6E22               	movwf	___awmod@divisor+1,c
  2741  00055C  0E0A               	movlw	10
  2742  00055E  6E21               	movwf	___awmod@divisor,c
  2743  000560  ECBF  F00D         	call	___awmod	;wreg free
  2744  000564                     L2:
  2745  000564  501F               	movf	?___awmod,w,c
  2746  000566  0F30               	addlw	48
  2747  000568  0100               	movlb	0	; () banked
  2748  00056A  6FE5               	movwf	(_tempC+2)& (0+255),b
  2749  00056C  D000               	goto	l6724
  2750  00056E                     l6724:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;Main_Screen.c: 82: }
  2754                           ;Main_Screen.c: 84: if (DS1621_tempF < 0)
  2755  00056E  AE47               	btfss	_DS1621_tempF+1,7,c
  2756  000570  D029               	goto	l6734
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;Main_Screen.c: 85: {
  2760                           ;Main_Screen.c: 86: tempF[0] = '-';
  2761  000572  0E2D               	movlw	45
  2762  000574  0100               	movlb	0	; () banked
  2763  000576  6FE7               	movwf	_tempF& (0+255),b
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;Main_Screen.c: 87: int neg_tempF = -DS1621_tempF;
  2767  000578  C046  F0F2         	movff	_DS1621_tempF,??_Update_Screen
  2768  00057C  C047  F0F3         	movff	_DS1621_tempF+1,??_Update_Screen+1
  2769  000580  0100               	movlb	0	; () banked
  2770  000582  1FF2               	comf	??_Update_Screen& (0+255),f,b
  2771  000584  1FF3               	comf	(??_Update_Screen+1)& (0+255),f,b
  2772  000586  4BF2               	infsnz	??_Update_Screen& (0+255),f,b
  2773  000588  2BF3               	incf	(??_Update_Screen+1)& (0+255),f,b
  2774  00058A  C0F2  F0F4         	movff	??_Update_Screen,Update_Screen@neg_tempF
  2775  00058E  C0F3  F0F5         	movff	??_Update_Screen+1,Update_Screen@neg_tempF+1
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;Main_Screen.c: 88: tempF[1] = neg_tempF/10 + '0';
  2779  000592  C0F4  F017         	movff	Update_Screen@neg_tempF,___awdiv@dividend
  2780  000596  C0F5  F018         	movff	Update_Screen@neg_tempF+1,___awdiv@dividend+1
  2781  00059A  0E00               	movlw	0
  2782  00059C  6E1A               	movwf	___awdiv@divisor+1,c
  2783  00059E  0E0A               	movlw	10
  2784  0005A0  6E19               	movwf	___awdiv@divisor,c
  2785  0005A2  ECEA  F00C         	call	___awdiv	;wreg free
  2786  0005A6  5017               	movf	?___awdiv,w,c
  2787  0005A8  0F30               	addlw	48
  2788  0005AA  0100               	movlb	0	; () banked
  2789  0005AC  6FE8               	movwf	(_tempF+1)& (0+255),b
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;Main_Screen.c: 89: tempF[2] = neg_tempF%10 + '0';
  2793  0005AE  C0F4  F01F         	movff	Update_Screen@neg_tempF,___awmod@dividend
  2794  0005B2  C0F5  F020         	movff	Update_Screen@neg_tempF+1,___awmod@dividend+1
  2795  0005B6  0E00               	movlw	0
  2796  0005B8  6E22               	movwf	___awmod@divisor+1,c
  2797  0005BA  0E0A               	movlw	10
  2798  0005BC  6E21               	movwf	___awmod@divisor,c
  2799  0005BE  ECBF  F00D         	call	___awmod	;wreg free
  2800  0005C2  D01B               	goto	L3
  2801  0005C4                     l6734:
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;Main_Screen.c: 91: else
  2805                           ;Main_Screen.c: 92: {
  2806                           ;Main_Screen.c: 93: tempF[0] = '+';
  2807  0005C4  0E2B               	movlw	43
  2808  0005C6  0100               	movlb	0	; () banked
  2809  0005C8  6FE7               	movwf	_tempF& (0+255),b
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;Main_Screen.c: 94: tempF[1] = DS1621_tempF/10 + '0';
  2813  0005CA  C046  F017         	movff	_DS1621_tempF,___awdiv@dividend
  2814  0005CE  C047  F018         	movff	_DS1621_tempF+1,___awdiv@dividend+1
  2815  0005D2  0E00               	movlw	0
  2816  0005D4  6E1A               	movwf	___awdiv@divisor+1,c
  2817  0005D6  0E0A               	movlw	10
  2818  0005D8  6E19               	movwf	___awdiv@divisor,c
  2819  0005DA  ECEA  F00C         	call	___awdiv	;wreg free
  2820  0005DE  5017               	movf	?___awdiv,w,c
  2821  0005E0  0F30               	addlw	48
  2822  0005E2  0100               	movlb	0	; () banked
  2823  0005E4  6FE8               	movwf	(_tempF+1)& (0+255),b
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;Main_Screen.c: 95: tempF[2] = DS1621_tempF%10 + '0';
  2827  0005E6  C046  F01F         	movff	_DS1621_tempF,___awmod@dividend
  2828  0005EA  C047  F020         	movff	_DS1621_tempF+1,___awmod@dividend+1
  2829  0005EE  0E00               	movlw	0
  2830  0005F0  6E22               	movwf	___awmod@divisor+1,c
  2831  0005F2  0E0A               	movlw	10
  2832  0005F4  6E21               	movwf	___awmod@divisor,c
  2833  0005F6  ECBF  F00D         	call	___awmod	;wreg free
  2834  0005FA                     L3:
  2835  0005FA  501F               	movf	?___awmod,w,c
  2836  0005FC  0F30               	addlw	48
  2837  0005FE  0100               	movlb	0	; () banked
  2838  000600  6FE9               	movwf	(_tempF+2)& (0+255),b
  2839  000602  D000               	goto	l6740
  2840  000604                     l6740:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;Main_Screen.c: 96: }
  2844                           ;Main_Screen.c: 97: time[0] = (hour>>4) + '0';
  2845  000604  385E               	swapf	_hour,w,c
  2846  000606  0B0F               	andlw	15
  2847  000608  0F30               	addlw	48
  2848  00060A  0100               	movlb	0	; () banked
  2849  00060C  6FCD               	movwf	_time& (0+255),b
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;Main_Screen.c: 98: time[1] = (hour & 0x0f)+ '0';
  2853  00060E  505E               	movf	_hour,w,c
  2854  000610  0B0F               	andlw	15
  2855  000612  0F30               	addlw	48
  2856  000614  0100               	movlb	0	; () banked
  2857  000616  6FCE               	movwf	(_time+1)& (0+255),b
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;Main_Screen.c: 101: time[3] = (minute)>>4 + '0';
  2861  000618  C05F  F0D0         	movff	_minute,_time+3
  2862                           
  2863                           ; BSR set to: 0
  2864                           ;Main_Screen.c: 102: time[4] = (minute & 0x0F) + '0';
  2865  00061C  505F               	movf	_minute,w,c
  2866  00061E  0B0F               	andlw	15
  2867  000620  0F30               	addlw	48
  2868  000622  0100               	movlb	0	; () banked
  2869  000624  6FD1               	movwf	(_time+4)& (0+255),b
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;Main_Screen.c: 104: time[6] = (second)>>4 +'0';
  2873  000626  C062  F0D3         	movff	_second,_time+6
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;Main_Screen.c: 105: time[7] = (second & 0x0F) + '0';
  2877  00062A  5062               	movf	_second,w,c
  2878  00062C  0B0F               	andlw	15
  2879  00062E  0F30               	addlw	48
  2880  000630  0100               	movlb	0	; () banked
  2881  000632  6FD4               	movwf	(_time+7)& (0+255),b
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;Main_Screen.c: 107: date[0] = (month)>>4 +'0';
  2885  000634  C060  F0C4         	movff	_month,_date
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;Main_Screen.c: 108: date[1] = (month & 0x0F) + '0';
  2889  000638  5060               	movf	_month,w,c
  2890  00063A  0B0F               	andlw	15
  2891  00063C  0F30               	addlw	48
  2892  00063E  0100               	movlb	0	; () banked
  2893  000640  6FC5               	movwf	(_date+1)& (0+255),b
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;Main_Screen.c: 110: date[3] = (day) + '0';
  2897  000642  505A               	movf	_day,w,c
  2898  000644  0F30               	addlw	48
  2899  000646  0100               	movlb	0	; () banked
  2900  000648  6FC7               	movwf	(_date+3)& (0+255),b
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;Main_Screen.c: 111: date[4] = (day & 0x0F) + '0';
  2904  00064A  505A               	movf	_day,w,c
  2905  00064C  0B0F               	andlw	15
  2906  00064E  0F30               	addlw	48
  2907  000650  0100               	movlb	0	; () banked
  2908  000652  6FC8               	movwf	(_date+4)& (0+255),b
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;Main_Screen.c: 113: date[6] = (year) + '0';
  2912  000654  506C               	movf	_year,w,c
  2913  000656  0F30               	addlw	48
  2914  000658  0100               	movlb	0	; () banked
  2915  00065A  6FCA               	movwf	(_date+6)& (0+255),b
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;Main_Screen.c: 114: date[7] = (year & 0x0F) + '0';
  2919  00065C  506C               	movf	_year,w,c
  2920  00065E  0B0F               	andlw	15
  2921  000660  0F30               	addlw	48
  2922  000662  0100               	movlb	0	; () banked
  2923  000664  6FCB               	movwf	(_date+7)& (0+255),b
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;Main_Screen.c: 117: if (FAN == 1) strcpy(Fan_SW_Txt, "ON ");
  2927  000666  0450               	decf	_FAN,w,c
  2928  000668  A4D8               	btfss	status,2,c
  2929  00066A  D00B               	goto	l6768
  2930                           
  2931                           ; BSR set to: 0
  2932  00066C  0EDF               	movlw	low _Fan_SW_Txt
  2933  00066E  6E11               	movwf	strcpy@to,c
  2934  000670  0E00               	movlw	high _Fan_SW_Txt
  2935  000672  6E12               	movwf	strcpy@to+1,c
  2936  000674  0EED               	movlw	low STR_20
  2937  000676  6E13               	movwf	strcpy@from,c
  2938  000678  0EFF               	movlw	high STR_20
  2939  00067A  6E14               	movwf	strcpy@from+1,c
  2940  00067C  EC0B  F011         	call	_strcpy	;wreg free
  2941  000680  D00B               	goto	l6770
  2942  000682                     l6768:
  2943                           
  2944                           ;Main_Screen.c: 118: else strcpy(Fan_SW_Txt, "OFF");
  2945  000682  0EDF               	movlw	low _Fan_SW_Txt
  2946  000684  6E11               	movwf	strcpy@to,c
  2947  000686  0E00               	movlw	high _Fan_SW_Txt
  2948  000688  6E12               	movwf	strcpy@to+1,c
  2949  00068A  0EF1               	movlw	low STR_21
  2950  00068C  6E13               	movwf	strcpy@from,c
  2951  00068E  0EFF               	movlw	high STR_21
  2952  000690  6E14               	movwf	strcpy@from+1,c
  2953  000692  EC0B  F011         	call	_strcpy	;wreg free
  2954  000696  D000               	goto	l6770
  2955  000698                     l6770:
  2956                           
  2957                           ;Main_Screen.c: 121: DC_Txt[0] = duty_cycle/100 + '0';
  2958  000698  C05C  F017         	movff	_duty_cycle,___awdiv@dividend
  2959  00069C  6A18               	clrf	___awdiv@dividend+1,c
  2960  00069E  0E00               	movlw	0
  2961  0006A0  6E1A               	movwf	___awdiv@divisor+1,c
  2962  0006A2  0E64               	movlw	100
  2963  0006A4  6E19               	movwf	___awdiv@divisor,c
  2964  0006A6  ECEA  F00C         	call	___awdiv	;wreg free
  2965  0006AA  5017               	movf	?___awdiv,w,c
  2966  0006AC  0F30               	addlw	48
  2967  0006AE  0100               	movlb	0	; () banked
  2968  0006B0  6FDB               	movwf	_DC_Txt& (0+255),b
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;Main_Screen.c: 123: DC_Txt[1] = (duty_cycle/10) % 10 + '0';
  2972  0006B2  0E00               	movlw	0
  2973  0006B4  6E1A               	movwf	___awdiv@divisor+1,c
  2974  0006B6  0E0A               	movlw	10
  2975  0006B8  6E19               	movwf	___awdiv@divisor,c
  2976  0006BA  C05C  F017         	movff	_duty_cycle,___awdiv@dividend
  2977  0006BE  6A18               	clrf	___awdiv@dividend+1,c
  2978  0006C0  ECEA  F00C         	call	___awdiv	;wreg free
  2979  0006C4  C017  F01F         	movff	?___awdiv,___awmod@dividend
  2980  0006C8  C018  F020         	movff	?___awdiv+1,___awmod@dividend+1
  2981  0006CC  0E00               	movlw	0
  2982  0006CE  6E22               	movwf	___awmod@divisor+1,c
  2983  0006D0  0E0A               	movlw	10
  2984  0006D2  6E21               	movwf	___awmod@divisor,c
  2985  0006D4  ECBF  F00D         	call	___awmod	;wreg free
  2986  0006D8  501F               	movf	?___awmod,w,c
  2987  0006DA  0F30               	addlw	48
  2988  0006DC  0100               	movlb	0	; () banked
  2989  0006DE  6FDC               	movwf	(_DC_Txt+1)& (0+255),b
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;Main_Screen.c: 124: DC_Txt[2] = duty_cycle % 25 + '0';
  2993  0006E0  C05C  F01F         	movff	_duty_cycle,___awmod@dividend
  2994  0006E4  6A20               	clrf	___awmod@dividend+1,c
  2995  0006E6  0E00               	movlw	0
  2996  0006E8  6E22               	movwf	___awmod@divisor+1,c
  2997  0006EA  0E19               	movlw	25
  2998  0006EC  6E21               	movwf	___awmod@divisor,c
  2999  0006EE  ECBF  F00D         	call	___awmod	;wreg free
  3000  0006F2  501F               	movf	?___awmod,w,c
  3001  0006F4  0F30               	addlw	48
  3002  0006F6  0100               	movlb	0	; () banked
  3003  0006F8  6FDD               	movwf	(_DC_Txt+2)& (0+255),b
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;Main_Screen.c: 127: RPM_Txt[0] = rpm/1000 + '0';
  3007  0006FA  C04C  F017         	movff	_rpm,___awdiv@dividend
  3008  0006FE  C04D  F018         	movff	_rpm+1,___awdiv@dividend+1
  3009  000702  0E03               	movlw	3
  3010  000704  6E1A               	movwf	___awdiv@divisor+1,c
  3011  000706  0EE8               	movlw	232
  3012  000708  6E19               	movwf	___awdiv@divisor,c
  3013  00070A  ECEA  F00C         	call	___awdiv	;wreg free
  3014  00070E  5017               	movf	?___awdiv,w,c
  3015  000710  0F30               	addlw	48
  3016  000712  0100               	movlb	0	; () banked
  3017  000714  6FD6               	movwf	_RPM_Txt& (0+255),b
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;Main_Screen.c: 129: RPM_Txt[1] = (rpm / 100) % 10 + '0';
  3021  000716  0E00               	movlw	0
  3022  000718  6E1A               	movwf	___awdiv@divisor+1,c
  3023  00071A  0E64               	movlw	100
  3024  00071C  6E19               	movwf	___awdiv@divisor,c
  3025  00071E  C04C  F017         	movff	_rpm,___awdiv@dividend
  3026  000722  C04D  F018         	movff	_rpm+1,___awdiv@dividend+1
  3027  000726  ECEA  F00C         	call	___awdiv	;wreg free
  3028  00072A  C017  F01F         	movff	?___awdiv,___awmod@dividend
  3029  00072E  C018  F020         	movff	?___awdiv+1,___awmod@dividend+1
  3030  000732  0E00               	movlw	0
  3031  000734  6E22               	movwf	___awmod@divisor+1,c
  3032  000736  0E0A               	movlw	10
  3033  000738  6E21               	movwf	___awmod@divisor,c
  3034  00073A  ECBF  F00D         	call	___awmod	;wreg free
  3035  00073E  501F               	movf	?___awmod,w,c
  3036  000740  0F30               	addlw	48
  3037  000742  0100               	movlb	0	; () banked
  3038  000744  6FD7               	movwf	(_RPM_Txt+1)& (0+255),b
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;Main_Screen.c: 130: RPM_Txt[2] = (rpm / 10) % 10 +'0';
  3042  000746  0E00               	movlw	0
  3043  000748  6E1A               	movwf	___awdiv@divisor+1,c
  3044  00074A  0E0A               	movlw	10
  3045  00074C  6E19               	movwf	___awdiv@divisor,c
  3046  00074E  C04C  F017         	movff	_rpm,___awdiv@dividend
  3047  000752  C04D  F018         	movff	_rpm+1,___awdiv@dividend+1
  3048  000756  ECEA  F00C         	call	___awdiv	;wreg free
  3049  00075A  C017  F01F         	movff	?___awdiv,___awmod@dividend
  3050  00075E  C018  F020         	movff	?___awdiv+1,___awmod@dividend+1
  3051  000762  0E00               	movlw	0
  3052  000764  6E22               	movwf	___awmod@divisor+1,c
  3053  000766  0E0A               	movlw	10
  3054  000768  6E21               	movwf	___awmod@divisor,c
  3055  00076A  ECBF  F00D         	call	___awmod	;wreg free
  3056  00076E  501F               	movf	?___awmod,w,c
  3057  000770  0F30               	addlw	48
  3058  000772  0100               	movlb	0	; () banked
  3059  000774  6FD8               	movwf	(_RPM_Txt+2)& (0+255),b
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;Main_Screen.c: 131: RPM_Txt[3] = rpm % 10 + '0';
  3063  000776  C04C  F01F         	movff	_rpm,___awmod@dividend
  3064  00077A  C04D  F020         	movff	_rpm+1,___awmod@dividend+1
  3065  00077E  0E00               	movlw	0
  3066  000780  6E22               	movwf	___awmod@divisor+1,c
  3067  000782  0E0A               	movlw	10
  3068  000784  6E21               	movwf	___awmod@divisor,c
  3069  000786  ECBF  F00D         	call	___awmod	;wreg free
  3070  00078A  501F               	movf	?___awmod,w,c
  3071  00078C  0F30               	addlw	48
  3072  00078E  0100               	movlb	0	; () banked
  3073  000790  6FD9               	movwf	(_RPM_Txt+3)& (0+255),b
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;Main_Screen.c: 133: drawtext(1, 23, tempC , 0xFFE0 , 0x0000 , 2);
  3077  000792  0E17               	movlw	23
  3078  000794  6E39               	movwf	drawtext@y,c
  3079  000796  0EE3               	movlw	low _tempC
  3080  000798  6E3A               	movwf	drawtext@_text,c
  3081  00079A  0E00               	movlw	high _tempC
  3082  00079C  6E3B               	movwf	drawtext@_text+1,c
  3083  00079E  0EFF               	movlw	255
  3084  0007A0  6E3D               	movwf	drawtext@color+1,c
  3085  0007A2  0EE0               	movlw	224
  3086  0007A4  6E3C               	movwf	drawtext@color,c
  3087  0007A6  0E00               	movlw	0
  3088  0007A8  6E3F               	movwf	drawtext@bg+1,c
  3089  0007AA  0E00               	movlw	0
  3090  0007AC  6E3E               	movwf	drawtext@bg,c
  3091  0007AE  0E02               	movlw	2
  3092  0007B0  6E40               	movwf	drawtext@size,c
  3093  0007B2  0E01               	movlw	1
  3094  0007B4  EC60  F009         	call	_drawtext
  3095                           
  3096                           ;Main_Screen.c: 134: drawtext(70, 23, tempF , 0xFFE0 , 0x0000 , 2);
  3097  0007B8  0E17               	movlw	23
  3098  0007BA  6E39               	movwf	drawtext@y,c
  3099  0007BC  0EE7               	movlw	low _tempF
  3100  0007BE  6E3A               	movwf	drawtext@_text,c
  3101  0007C0  0E00               	movlw	high _tempF
  3102  0007C2  6E3B               	movwf	drawtext@_text+1,c
  3103  0007C4  0EFF               	movlw	255
  3104  0007C6  6E3D               	movwf	drawtext@color+1,c
  3105  0007C8  0EE0               	movlw	224
  3106  0007CA  6E3C               	movwf	drawtext@color,c
  3107  0007CC  0E00               	movlw	0
  3108  0007CE  6E3F               	movwf	drawtext@bg+1,c
  3109  0007D0  0E00               	movlw	0
  3110  0007D2  6E3E               	movwf	drawtext@bg,c
  3111  0007D4  0E02               	movlw	2
  3112  0007D6  6E40               	movwf	drawtext@size,c
  3113  0007D8  0E46               	movlw	70
  3114  0007DA  EC60  F009         	call	_drawtext
  3115                           
  3116                           ;Main_Screen.c: 135: drawtext(15 , 52 , time , 0x07FF , 0x0000 , 2);
  3117  0007DE  0E34               	movlw	52
  3118  0007E0  6E39               	movwf	drawtext@y,c
  3119  0007E2  0ECD               	movlw	low _time
  3120  0007E4  6E3A               	movwf	drawtext@_text,c
  3121  0007E6  0E00               	movlw	high _time
  3122  0007E8  6E3B               	movwf	drawtext@_text+1,c
  3123  0007EA  0E07               	movlw	7
  3124  0007EC  6E3D               	movwf	drawtext@color+1,c
  3125  0007EE  683C               	setf	drawtext@color,c
  3126  0007F0  0E00               	movlw	0
  3127  0007F2  6E3F               	movwf	drawtext@bg+1,c
  3128  0007F4  0E00               	movlw	0
  3129  0007F6  6E3E               	movwf	drawtext@bg,c
  3130  0007F8  0E02               	movlw	2
  3131  0007FA  6E40               	movwf	drawtext@size,c
  3132  0007FC  0E0F               	movlw	15
  3133  0007FE  EC60  F009         	call	_drawtext
  3134                           
  3135                           ;Main_Screen.c: 136: drawtext(15 , 82 , date , 0x07E0 , 0x0000 , 2);
  3136  000802  0E52               	movlw	82
  3137  000804  6E39               	movwf	drawtext@y,c
  3138  000806  0EC4               	movlw	low _date
  3139  000808  6E3A               	movwf	drawtext@_text,c
  3140  00080A  0E00               	movlw	high _date
  3141  00080C  6E3B               	movwf	drawtext@_text+1,c
  3142  00080E  0E07               	movlw	7
  3143  000810  6E3D               	movwf	drawtext@color+1,c
  3144  000812  0EE0               	movlw	224
  3145  000814  6E3C               	movwf	drawtext@color,c
  3146  000816  0E00               	movlw	0
  3147  000818  6E3F               	movwf	drawtext@bg+1,c
  3148  00081A  0E00               	movlw	0
  3149  00081C  6E3E               	movwf	drawtext@bg,c
  3150  00081E  0E02               	movlw	2
  3151  000820  6E40               	movwf	drawtext@size,c
  3152  000822  0E0F               	movlw	15
  3153  000824  EC60  F009         	call	_drawtext
  3154                           
  3155                           ;Main_Screen.c: 138: drawtext(95, 130, Fan_SW_Txt, 0xF800 , 0x0000 , 1);
  3156  000828  0E82               	movlw	130
  3157  00082A  6E39               	movwf	drawtext@y,c
  3158  00082C  0EDF               	movlw	low _Fan_SW_Txt
  3159  00082E  6E3A               	movwf	drawtext@_text,c
  3160  000830  0E00               	movlw	high _Fan_SW_Txt
  3161  000832  6E3B               	movwf	drawtext@_text+1,c
  3162  000834  0EF8               	movlw	248
  3163  000836  6E3D               	movwf	drawtext@color+1,c
  3164  000838  0E00               	movlw	0
  3165  00083A  6E3C               	movwf	drawtext@color,c
  3166  00083C  0E00               	movlw	0
  3167  00083E  6E3F               	movwf	drawtext@bg+1,c
  3168  000840  0E00               	movlw	0
  3169  000842  6E3E               	movwf	drawtext@bg,c
  3170  000844  0E01               	movlw	1
  3171  000846  6E40               	movwf	drawtext@size,c
  3172  000848  0E5F               	movlw	95
  3173  00084A  EC60  F009         	call	_drawtext
  3174                           
  3175                           ;Main_Screen.c: 139: drawtext(10, 150, DC_Txt, 0x07E0, 0x0000, 1);
  3176  00084E  0E96               	movlw	150
  3177  000850  6E39               	movwf	drawtext@y,c
  3178  000852  0EDB               	movlw	low _DC_Txt
  3179  000854  6E3A               	movwf	drawtext@_text,c
  3180  000856  0E00               	movlw	high _DC_Txt
  3181  000858  6E3B               	movwf	drawtext@_text+1,c
  3182  00085A  0E07               	movlw	7
  3183  00085C  6E3D               	movwf	drawtext@color+1,c
  3184  00085E  0EE0               	movlw	224
  3185  000860  6E3C               	movwf	drawtext@color,c
  3186  000862  0E00               	movlw	0
  3187  000864  6E3F               	movwf	drawtext@bg+1,c
  3188  000866  0E00               	movlw	0
  3189  000868  6E3E               	movwf	drawtext@bg,c
  3190  00086A  0E01               	movlw	1
  3191  00086C  6E40               	movwf	drawtext@size,c
  3192  00086E  0E0A               	movlw	10
  3193  000870  EC60  F009         	call	_drawtext
  3194                           
  3195                           ;Main_Screen.c: 140: drawtext(93, 150, RPM_Txt, 0x07E0, 0x0000, 1);
  3196  000874  0E96               	movlw	150
  3197  000876  6E39               	movwf	drawtext@y,c
  3198  000878  0ED6               	movlw	low _RPM_Txt
  3199  00087A  6E3A               	movwf	drawtext@_text,c
  3200  00087C  0E00               	movlw	high _RPM_Txt
  3201  00087E  6E3B               	movwf	drawtext@_text+1,c
  3202  000880  0E07               	movlw	7
  3203  000882  6E3D               	movwf	drawtext@color+1,c
  3204  000884  0EE0               	movlw	224
  3205  000886  6E3C               	movwf	drawtext@color,c
  3206  000888  0E00               	movlw	0
  3207  00088A  6E3F               	movwf	drawtext@bg+1,c
  3208  00088C  0E00               	movlw	0
  3209  00088E  6E3E               	movwf	drawtext@bg,c
  3210  000890  0E01               	movlw	1
  3211  000892  6E40               	movwf	drawtext@size,c
  3212  000894  0E5D               	movlw	93
  3213  000896  EC60  F009         	call	_drawtext
  3214  00089A  0012               	return		;funcret
  3215  00089C                     __end_of_Update_Screen:
  3216                           	opt stack 0
  3217                           tblptru	equ	0xFF8
  3218                           tblptrh	equ	0xFF7
  3219                           tblptrl	equ	0xFF6
  3220                           tablat	equ	0xFF5
  3221                           intcon	equ	0xFF2
  3222                           intcon2	equ	0xFF1
  3223                           postinc0	equ	0xFEE
  3224                           wreg	equ	0xFE8
  3225                           postdec1	equ	0xFE5
  3226                           fsr1l	equ	0xFE1
  3227                           postinc2	equ	0xFDE
  3228                           fsr2h	equ	0xFDA
  3229                           fsr2l	equ	0xFD9
  3230                           status	equ	0xFD8
  3231                           
  3232 ;; *************** function ___awmod *****************
  3233 ;; Defined at:
  3234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  dividend        2   30[COMRAM] int 
  3237 ;;  divisor         2   32[COMRAM] int 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  sign            1   35[COMRAM] unsigned char 
  3240 ;;  counter         1   34[COMRAM] unsigned char 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  2   30[COMRAM] int 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;Total ram usage:        6 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    3
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_Update_Screen
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text3
  3265  001B7E                     __ptext3:
  3266                           	opt stack 0
  3267  001B7E                     ___awmod:
  3268                           	opt stack 26
  3269                           
  3270                           ;incstack = 0
  3271  001B7E  0E00               	movlw	0
  3272  001B80  6E24               	movwf	___awmod@sign,c
  3273  001B82  AE20               	btfss	___awmod@dividend+1,7,c
  3274  001B84  D007               	goto	l6432
  3275  001B86  6C1F               	negf	___awmod@dividend,c
  3276  001B88  1E20               	comf	___awmod@dividend+1,f,c
  3277  001B8A  B0D8               	btfsc	status,0,c
  3278  001B8C  2A20               	incf	___awmod@dividend+1,f,c
  3279  001B8E  0E01               	movlw	1
  3280  001B90  6E24               	movwf	___awmod@sign,c
  3281  001B92  D000               	goto	l6432
  3282  001B94                     l6432:
  3283  001B94  AE22               	btfss	___awmod@divisor+1,7,c
  3284  001B96  D005               	goto	l6436
  3285  001B98  6C21               	negf	___awmod@divisor,c
  3286  001B9A  1E22               	comf	___awmod@divisor+1,f,c
  3287  001B9C  B0D8               	btfsc	status,0,c
  3288  001B9E  2A22               	incf	___awmod@divisor+1,f,c
  3289  001BA0  D000               	goto	l6436
  3290  001BA2                     l6436:
  3291  001BA2  5021               	movf	___awmod@divisor,w,c
  3292  001BA4  1022               	iorwf	___awmod@divisor+1,w,c
  3293  001BA6  B4D8               	btfsc	status,2,c
  3294  001BA8  D01D               	goto	l6452
  3295  001BAA  0E01               	movlw	1
  3296  001BAC  6E23               	movwf	___awmod@counter,c
  3297  001BAE  D005               	goto	l6442
  3298  001BB0                     l6440:
  3299  001BB0  90D8               	bcf	status,0,c
  3300  001BB2  3621               	rlcf	___awmod@divisor,f,c
  3301  001BB4  3622               	rlcf	___awmod@divisor+1,f,c
  3302  001BB6  2A23               	incf	___awmod@counter,f,c
  3303  001BB8  D000               	goto	l6442
  3304  001BBA                     l6442:
  3305  001BBA  BE22               	btfsc	___awmod@divisor+1,7,c
  3306  001BBC  D002               	goto	l6444
  3307  001BBE  D7F8               	goto	l6440
  3308  001BC0  D000               	goto	l6444
  3309  001BC2                     l6444:
  3310  001BC2  5021               	movf	___awmod@divisor,w,c
  3311  001BC4  5C1F               	subwf	___awmod@dividend,w,c
  3312  001BC6  5022               	movf	___awmod@divisor+1,w,c
  3313  001BC8  5820               	subwfb	___awmod@dividend+1,w,c
  3314  001BCA  A0D8               	btfss	status,0,c
  3315  001BCC  D005               	goto	l6448
  3316  001BCE  5021               	movf	___awmod@divisor,w,c
  3317  001BD0  5E1F               	subwf	___awmod@dividend,f,c
  3318  001BD2  5022               	movf	___awmod@divisor+1,w,c
  3319  001BD4  5A20               	subwfb	___awmod@dividend+1,f,c
  3320  001BD6  D000               	goto	l6448
  3321  001BD8                     l6448:
  3322  001BD8  90D8               	bcf	status,0,c
  3323  001BDA  3222               	rrcf	___awmod@divisor+1,f,c
  3324  001BDC  3221               	rrcf	___awmod@divisor,f,c
  3325  001BDE  2E23               	decfsz	___awmod@counter,f,c
  3326  001BE0  D7F0               	goto	l6444
  3327  001BE2  D000               	goto	l6452
  3328  001BE4                     l6452:
  3329  001BE4  5024               	movf	___awmod@sign,w,c
  3330  001BE6  B4D8               	btfsc	status,2,c
  3331  001BE8  D005               	goto	l6456
  3332  001BEA  6C1F               	negf	___awmod@dividend,c
  3333  001BEC  1E20               	comf	___awmod@dividend+1,f,c
  3334  001BEE  B0D8               	btfsc	status,0,c
  3335  001BF0  2A20               	incf	___awmod@dividend+1,f,c
  3336  001BF2  D000               	goto	l6456
  3337  001BF4                     l6456:
  3338  001BF4  C01F  F01F         	movff	___awmod@dividend,?___awmod
  3339  001BF8  C020  F020         	movff	___awmod@dividend+1,?___awmod+1
  3340  001BFC  D000               	goto	l1080
  3341  001BFE                     l1080:
  3342  001BFE  0012               	return		;funcret
  3343  001C00                     __end_of___awmod:
  3344                           	opt stack 0
  3345                           tblptru	equ	0xFF8
  3346                           tblptrh	equ	0xFF7
  3347                           tblptrl	equ	0xFF6
  3348                           tablat	equ	0xFF5
  3349                           intcon	equ	0xFF2
  3350                           intcon2	equ	0xFF1
  3351                           postinc0	equ	0xFEE
  3352                           wreg	equ	0xFE8
  3353                           postdec1	equ	0xFE5
  3354                           fsr1l	equ	0xFE1
  3355                           postinc2	equ	0xFDE
  3356                           fsr2h	equ	0xFDA
  3357                           fsr2l	equ	0xFD9
  3358                           status	equ	0xFD8
  3359                           
  3360 ;; *************** function ___awdiv *****************
  3361 ;; Defined at:
  3362 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  dividend        2   22[COMRAM] int 
  3365 ;;  divisor         2   24[COMRAM] int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  quotient        2   28[COMRAM] int 
  3368 ;;  sign            1   27[COMRAM] unsigned char 
  3369 ;;  counter         1   26[COMRAM] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  2   22[COMRAM] int 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;Total ram usage:        8 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    3
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_get_RPM
  3390 ;;		_main
  3391 ;;		_Update_Screen
  3392 ;;		_Set_DC_RGB
  3393 ;;		_Set_RPM_RGB
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text4
  3398  0019D4                     __ptext4:
  3399                           	opt stack 0
  3400  0019D4                     ___awdiv:
  3401                           	opt stack 26
  3402                           
  3403                           ;incstack = 0
  3404  0019D4  0E00               	movlw	0
  3405  0019D6  6E1C               	movwf	___awdiv@sign,c
  3406  0019D8  AE1A               	btfss	___awdiv@divisor+1,7,c
  3407  0019DA  D007               	goto	l6388
  3408  0019DC  6C19               	negf	___awdiv@divisor,c
  3409  0019DE  1E1A               	comf	___awdiv@divisor+1,f,c
  3410  0019E0  B0D8               	btfsc	status,0,c
  3411  0019E2  2A1A               	incf	___awdiv@divisor+1,f,c
  3412  0019E4  0E01               	movlw	1
  3413  0019E6  6E1C               	movwf	___awdiv@sign,c
  3414  0019E8  D000               	goto	l6388
  3415  0019EA                     l6388:
  3416  0019EA  AE18               	btfss	___awdiv@dividend+1,7,c
  3417  0019EC  D007               	goto	l6394
  3418  0019EE  6C17               	negf	___awdiv@dividend,c
  3419  0019F0  1E18               	comf	___awdiv@dividend+1,f,c
  3420  0019F2  B0D8               	btfsc	status,0,c
  3421  0019F4  2A18               	incf	___awdiv@dividend+1,f,c
  3422  0019F6  0E01               	movlw	1
  3423  0019F8  1A1C               	xorwf	___awdiv@sign,f,c
  3424  0019FA  D000               	goto	l6394
  3425  0019FC                     l6394:
  3426  0019FC  0E00               	movlw	0
  3427  0019FE  6E1E               	movwf	___awdiv@quotient+1,c
  3428  001A00  0E00               	movlw	0
  3429  001A02  6E1D               	movwf	___awdiv@quotient,c
  3430  001A04  5019               	movf	___awdiv@divisor,w,c
  3431  001A06  101A               	iorwf	___awdiv@divisor+1,w,c
  3432  001A08  B4D8               	btfsc	status,2,c
  3433  001A0A  D021               	goto	l6416
  3434  001A0C  0E01               	movlw	1
  3435  001A0E  6E1B               	movwf	___awdiv@counter,c
  3436  001A10  D005               	goto	l6402
  3437  001A12                     l6400:
  3438  001A12  90D8               	bcf	status,0,c
  3439  001A14  3619               	rlcf	___awdiv@divisor,f,c
  3440  001A16  361A               	rlcf	___awdiv@divisor+1,f,c
  3441  001A18  2A1B               	incf	___awdiv@counter,f,c
  3442  001A1A  D000               	goto	l6402
  3443  001A1C                     l6402:
  3444  001A1C  BE1A               	btfsc	___awdiv@divisor+1,7,c
  3445  001A1E  D002               	goto	l6404
  3446  001A20  D7F8               	goto	l6400
  3447  001A22  D000               	goto	l6404
  3448  001A24                     l6404:
  3449  001A24  90D8               	bcf	status,0,c
  3450  001A26  361D               	rlcf	___awdiv@quotient,f,c
  3451  001A28  361E               	rlcf	___awdiv@quotient+1,f,c
  3452  001A2A  5019               	movf	___awdiv@divisor,w,c
  3453  001A2C  5C17               	subwf	___awdiv@dividend,w,c
  3454  001A2E  501A               	movf	___awdiv@divisor+1,w,c
  3455  001A30  5818               	subwfb	___awdiv@dividend+1,w,c
  3456  001A32  A0D8               	btfss	status,0,c
  3457  001A34  D006               	goto	l6412
  3458  001A36  5019               	movf	___awdiv@divisor,w,c
  3459  001A38  5E17               	subwf	___awdiv@dividend,f,c
  3460  001A3A  501A               	movf	___awdiv@divisor+1,w,c
  3461  001A3C  5A18               	subwfb	___awdiv@dividend+1,f,c
  3462  001A3E  801D               	bsf	___awdiv@quotient,0,c
  3463  001A40  D000               	goto	l6412
  3464  001A42                     l6412:
  3465  001A42  90D8               	bcf	status,0,c
  3466  001A44  321A               	rrcf	___awdiv@divisor+1,f,c
  3467  001A46  3219               	rrcf	___awdiv@divisor,f,c
  3468  001A48  2E1B               	decfsz	___awdiv@counter,f,c
  3469  001A4A  D7EC               	goto	l6404
  3470  001A4C  D000               	goto	l6416
  3471  001A4E                     l6416:
  3472  001A4E  501C               	movf	___awdiv@sign,w,c
  3473  001A50  B4D8               	btfsc	status,2,c
  3474  001A52  D005               	goto	l6420
  3475  001A54  6C1D               	negf	___awdiv@quotient,c
  3476  001A56  1E1E               	comf	___awdiv@quotient+1,f,c
  3477  001A58  B0D8               	btfsc	status,0,c
  3478  001A5A  2A1E               	incf	___awdiv@quotient+1,f,c
  3479  001A5C  D000               	goto	l6420
  3480  001A5E                     l6420:
  3481  001A5E  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  3482  001A62  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  3483  001A66  D000               	goto	l1067
  3484  001A68                     l1067:
  3485  001A68  0012               	return		;funcret
  3486  001A6A                     __end_of___awdiv:
  3487                           	opt stack 0
  3488                           tblptru	equ	0xFF8
  3489                           tblptrh	equ	0xFF7
  3490                           tblptrl	equ	0xFF6
  3491                           tablat	equ	0xFF5
  3492                           intcon	equ	0xFF2
  3493                           intcon2	equ	0xFF1
  3494                           postinc0	equ	0xFEE
  3495                           wreg	equ	0xFE8
  3496                           postdec1	equ	0xFE5
  3497                           fsr1l	equ	0xFE1
  3498                           postinc2	equ	0xFDE
  3499                           fsr2h	equ	0xFDA
  3500                           fsr2l	equ	0xFD9
  3501                           status	equ	0xFD8
  3502                           
  3503 ;; *************** function _Toggle_Fan *****************
  3504 ;; Defined at:
  3505 ;;		line 20 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Fan_Support.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;		None               void
  3512 ;; Registers used:
  3513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;Total ram usage:        0 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    7
  3526 ;; This function calls:
  3527 ;;		_Turn_Off_Fan
  3528 ;;		_Turn_On_Fan
  3529 ;;		_printf
  3530 ;; This function is called by:
  3531 ;;		_main
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text5
  3536  002312                     __ptext5:
  3537                           	opt stack 0
  3538  002312                     _Toggle_Fan:
  3539                           	opt stack 23
  3540                           
  3541                           ;Fan_Support.c: 22: printf("Fan Toggled\n");
  3542                           
  3543                           ;incstack = 0
  3544  002312  0ED0               	movlw	low STR_1
  3545  002314  6E27               	movwf	printf@f,c
  3546  002316  0EFF               	movlw	high STR_1
  3547  002318  6E28               	movwf	printf@f+1,c
  3548  00231A  EC0E  F000         	call	_printf	;wreg free
  3549                           
  3550                           ;Fan_Support.c: 23: if (FAN == 1) Turn_Off_Fan();
  3551  00231E  0450               	decf	_FAN,w,c
  3552  002320  A4D8               	btfss	status,2,c
  3553  002322  D003               	goto	l6478
  3554  002324  EC19  F012         	call	_Turn_Off_Fan	;wreg free
  3555  002328  D003               	goto	l38
  3556  00232A                     l6478:
  3557                           
  3558                           ;Fan_Support.c: 24: else Turn_On_Fan();
  3559  00232A  ECC7  F011         	call	_Turn_On_Fan	;wreg free
  3560  00232E  D000               	goto	l38
  3561  002330                     l38:
  3562  002330  0012               	return		;funcret
  3563  002332                     __end_of_Toggle_Fan:
  3564                           	opt stack 0
  3565                           tblptru	equ	0xFF8
  3566                           tblptrh	equ	0xFF7
  3567                           tblptrl	equ	0xFF6
  3568                           tablat	equ	0xFF5
  3569                           intcon	equ	0xFF2
  3570                           intcon2	equ	0xFF1
  3571                           postinc0	equ	0xFEE
  3572                           wreg	equ	0xFE8
  3573                           postdec1	equ	0xFE5
  3574                           fsr1l	equ	0xFE1
  3575                           postinc2	equ	0xFDE
  3576                           fsr2h	equ	0xFDA
  3577                           fsr2l	equ	0xFD9
  3578                           status	equ	0xFD8
  3579                           
  3580 ;; *************** function _Turn_On_Fan *****************
  3581 ;; Defined at:
  3582 ;;		line 35 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Fan_Support.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;		None
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;		None
  3587 ;; Return value:  Size  Location     Type
  3588 ;;		None               void
  3589 ;; Registers used:
  3590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;Total ram usage:        0 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    6
  3603 ;; This function calls:
  3604 ;;		_do_update_pwm
  3605 ;;		_printf
  3606 ;; This function is called by:
  3607 ;;		_Toggle_Fan
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text6
  3612  00238E                     __ptext6:
  3613                           	opt stack 0
  3614  00238E                     _Turn_On_Fan:
  3615                           	opt stack 23
  3616                           
  3617                           ;Fan_Support.c: 38: printf("Fan Turned On\n");
  3618                           
  3619                           ;incstack = 0
  3620  00238E  0EB4               	movlw	low STR_3
  3621  002390  6E27               	movwf	printf@f,c
  3622  002392  0EFF               	movlw	high STR_3
  3623  002394  6E28               	movwf	printf@f+1,c
  3624  002396  EC0E  F000         	call	_printf	;wreg free
  3625                           
  3626                           ;Fan_Support.c: 39: FAN = 1;
  3627  00239A  0E01               	movlw	1
  3628  00239C  6E50               	movwf	_FAN,c
  3629                           
  3630                           ;Fan_Support.c: 40: do_update_pwm(duty_cycle);
  3631  00239E  505C               	movf	_duty_cycle,w,c
  3632  0023A0  EC8F  F00C         	call	_do_update_pwm
  3633                           
  3634                           ;Fan_Support.c: 41: PORTAbits.RA4 = 1;
  3635  0023A4  8880               	bsf	3968,4,c	;volatile
  3636                           
  3637                           ;Fan_Support.c: 42: PORTEbits.RE2 = 1;
  3638  0023A6  8484               	bsf	3972,2,c	;volatile
  3639  0023A8  0012               	return		;funcret
  3640  0023AA                     __end_of_Turn_On_Fan:
  3641                           	opt stack 0
  3642                           tblptru	equ	0xFF8
  3643                           tblptrh	equ	0xFF7
  3644                           tblptrl	equ	0xFF6
  3645                           tablat	equ	0xFF5
  3646                           intcon	equ	0xFF2
  3647                           intcon2	equ	0xFF1
  3648                           postinc0	equ	0xFEE
  3649                           wreg	equ	0xFE8
  3650                           postdec1	equ	0xFE5
  3651                           fsr1l	equ	0xFE1
  3652                           postinc2	equ	0xFDE
  3653                           fsr2h	equ	0xFDA
  3654                           fsr2l	equ	0xFD9
  3655                           status	equ	0xFD8
  3656                           
  3657 ;; *************** function _Turn_Off_Fan *****************
  3658 ;; Defined at:
  3659 ;;		line 27 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Fan_Support.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;		None               void
  3666 ;; Registers used:
  3667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;Total ram usage:        0 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    5
  3680 ;; This function calls:
  3681 ;;		_printf
  3682 ;; This function is called by:
  3683 ;;		_Toggle_Fan
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text7
  3688  002432                     __ptext7:
  3689                           	opt stack 0
  3690  002432                     _Turn_Off_Fan:
  3691                           	opt stack 24
  3692                           
  3693                           ;Fan_Support.c: 29: printf("Fan Turned Off\n");
  3694                           
  3695                           ;incstack = 0
  3696  002432  0E95               	movlw	low STR_2
  3697  002434  6E27               	movwf	printf@f,c
  3698  002436  0EFF               	movlw	high STR_2
  3699  002438  6E28               	movwf	printf@f+1,c
  3700  00243A  EC0E  F000         	call	_printf	;wreg free
  3701                           
  3702                           ;Fan_Support.c: 30: FAN = 0;
  3703  00243E  0E00               	movlw	0
  3704  002440  6E50               	movwf	_FAN,c
  3705                           
  3706                           ;Fan_Support.c: 31: PORTAbits.RA4 = 0;
  3707  002442  9880               	bcf	3968,4,c	;volatile
  3708                           
  3709                           ;Fan_Support.c: 32: PORTEbits.RE2 = 0;
  3710  002444  9484               	bcf	3972,2,c	;volatile
  3711  002446  0012               	return		;funcret
  3712  002448                     __end_of_Turn_Off_Fan:
  3713                           	opt stack 0
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           intcon	equ	0xFF2
  3719                           intcon2	equ	0xFF1
  3720                           postinc0	equ	0xFEE
  3721                           wreg	equ	0xFE8
  3722                           postdec1	equ	0xFE5
  3723                           fsr1l	equ	0xFE1
  3724                           postinc2	equ	0xFDE
  3725                           fsr2h	equ	0xFDA
  3726                           fsr2l	equ	0xFD9
  3727                           status	equ	0xFD8
  3728                           
  3729 ;; *************** function _printf *****************
  3730 ;; Defined at:
  3731 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  f               2   38[COMRAM] PTR const unsigned char 
  3734 ;;		 -> STR_10(15), STR_9(22), STR_8(33), STR_7(16), 
  3735 ;;		 -> STR_6(20), STR_5(21), STR_4(30), STR_3(15), 
  3736 ;;		 -> STR_2(16), STR_1(13), 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  idx             1    0[BANK1 ] unsigned char 
  3739 ;;  val             4    5[BANK1 ] unsigned long 
  3740 ;;  tmpval          4    0        struct .
  3741 ;;  cp              3    0        PTR const unsigned char 
  3742 ;;  width           2    9[BANK1 ] int 
  3743 ;;  ap              2    3[BANK1 ] PTR void [1]
  3744 ;;		 -> ?_printf(2), 
  3745 ;;  prec            2    1[BANK1 ] int 
  3746 ;;  len             2    0        unsigned int 
  3747 ;;  c               1   12[BANK1 ] char 
  3748 ;;  flag            1   11[BANK1 ] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2   38[COMRAM] int 
  3751 ;; Registers used:
  3752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3758 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Totals:        18       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;Total ram usage:       31 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    4
  3765 ;; This function calls:
  3766 ;;		___lldiv
  3767 ;;		___llmod
  3768 ;;		___wmul
  3769 ;;		_isdigit
  3770 ;;		_putch
  3771 ;; This function is called by:
  3772 ;;		_Toggle_Fan
  3773 ;;		_Turn_Off_Fan
  3774 ;;		_Turn_On_Fan
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text8
  3780  00001C                     __ptext8:
  3781                           	opt stack 0
  3782  00001C                     _printf:
  3783                           	opt stack 26
  3784                           
  3785                           ;doprnt.c: 466: va_list ap;
  3786                           ;doprnt.c: 499: signed char c;
  3787                           ;doprnt.c: 501: int width;
  3788                           ;doprnt.c: 504: int prec;
  3789                           ;doprnt.c: 508: unsigned char flag;
  3790                           ;doprnt.c: 523: union {
  3791                           ;doprnt.c: 524: unsigned long vd;
  3792                           ;doprnt.c: 525: double integ;
  3793                           ;doprnt.c: 526: } tmpval;
  3794                           ;doprnt.c: 528: unsigned long val;
  3795                           ;doprnt.c: 529: unsigned len;
  3796                           ;doprnt.c: 530: const char * cp;
  3797                           ;doprnt.c: 533: *ap = __va_start();
  3798                           
  3799                           ;incstack = 0
  3800  00001C  0E29               	movlw	low (?_printf+2)
  3801  00001E  0101               	movlb	1	; () banked
  3802  000020  6F4E               	movwf	printf@ap& (0+255),b
  3803  000022  0E00               	movlw	high (?_printf+2)
  3804  000024  0101               	movlb	1	; () banked
  3805  000026  6F4F               	movwf	(printf@ap+1)& (0+255),b
  3806                           
  3807                           ;doprnt.c: 536: while(c = *f++) {
  3808  000028  D254               	goto	l5882
  3809  00002A                     l5744:
  3810                           
  3811                           ; BSR set to: 1
  3812                           ;doprnt.c: 538: if(c != '%')
  3813  00002A  0E25               	movlw	37
  3814  00002C  0101               	movlb	1	; () banked
  3815  00002E  1957               	xorwf	printf@c& (0+255),w,b
  3816  000030  B4D8               	btfsc	status,2,c
  3817  000032  D005               	goto	l5748
  3818                           
  3819                           ; BSR set to: 1
  3820                           ;doprnt.c: 540: {
  3821                           ;doprnt.c: 541: (putch(c) );
  3822  000034  0101               	movlb	1	; () banked
  3823  000036  5157               	movf	printf@c& (0+255),w,b
  3824  000038  EC8B  F012         	call	_putch
  3825                           
  3826                           ;doprnt.c: 542: continue;
  3827  00003C  D24A               	goto	l5882
  3828  00003E                     l5748:
  3829                           
  3830                           ;doprnt.c: 543: }
  3831                           ;doprnt.c: 546: width = 0;
  3832  00003E  0E00               	movlw	0
  3833  000040  0101               	movlb	1	; () banked
  3834  000042  6F55               	movwf	(printf@width+1)& (0+255),b
  3835  000044  0E00               	movlw	0
  3836  000046  6F54               	movwf	printf@width& (0+255),b
  3837                           
  3838                           ;doprnt.c: 548: flag = 0;
  3839  000048  0E00               	movlw	0
  3840  00004A  0101               	movlb	1	; () banked
  3841  00004C  6F56               	movwf	printf@flag& (0+255),b
  3842                           
  3843                           ; BSR set to: 1
  3844                           ;doprnt.c: 551: switch(*f) {
  3845                           
  3846                           ;doprnt.c: 550: for(;;) {
  3847  00004E  D006               	goto	l5754
  3848  000050                     l5750:
  3849                           
  3850                           ;doprnt.c: 580: flag |= 0x04;
  3851  000050  0101               	movlb	1	; () banked
  3852  000052  8556               	bsf	printf@flag& (0+255),2,b
  3853                           
  3854                           ;doprnt.c: 581: f++;
  3855  000054  4A27               	infsnz	printf@f,f,c
  3856  000056  2A28               	incf	printf@f+1,f,c
  3857                           
  3858                           ;doprnt.c: 582: continue;
  3859  000058  D001               	goto	l5754
  3860                           
  3861                           ; BSR set to: 1
  3862                           ;doprnt.c: 584: }
  3863  00005A  D00B               	goto	l5756
  3864  00005C                     l5754:
  3865  00005C  C027  FFF6         	movff	printf@f,tblptrl
  3866  000060  C028  FFF7         	movff	printf@f+1,tblptrh
  3867  000064                     	if	0	;tblptru may be non-zero
  3868  000064                     	endif
  3869  000064                     	if	0	;tblptru may be non-zero
  3870  000064                     	endif
  3871  000064  0008               	tblrd		*
  3872  000066  50F5               	movf	tablat,w,c
  3873                           
  3874                           ; Switch size 1, requested type "space"
  3875                           ; Number of cases is 1, Range of values is 48 to 48
  3876                           ; switch strategies available:
  3877                           ; Name         Instructions Cycles
  3878                           ; simple_byte            4     3 (average)
  3879                           ;	Chosen strategy is simple_byte
  3880  000068  0A30               	xorlw	48	; case 48
  3881  00006A  B4D8               	btfsc	status,2,c
  3882  00006C  D7F1               	goto	l5750
  3883                           
  3884                           ;doprnt.c: 585: break;
  3885  00006E  D001               	goto	l5756
  3886                           
  3887                           ;doprnt.c: 586: }
  3888  000070  D7F5               	goto	l5754
  3889  000072                     l5756:
  3890                           
  3891                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3892  000072  C027  FFF6         	movff	printf@f,tblptrl
  3893  000076  C028  FFF7         	movff	printf@f+1,tblptrh
  3894  00007A                     	if	0	;tblptru may be non-zero
  3895  00007A                     	endif
  3896  00007A                     	if	0	;tblptru may be non-zero
  3897  00007A                     	endif
  3898  00007A  0008               	tblrd		*
  3899  00007C  50F5               	movf	tablat,w,c
  3900  00007E  EC78  F011         	call	_isdigit
  3901  000082  A0D8               	btfss	status,0,c
  3902  000084  D042               	goto	l5774
  3903                           
  3904                           ;doprnt.c: 598: width = 0;
  3905  000086  0E00               	movlw	0
  3906  000088  0101               	movlb	1	; () banked
  3907  00008A  6F55               	movwf	(printf@width+1)& (0+255),b
  3908  00008C  0E00               	movlw	0
  3909  00008E  6F54               	movwf	printf@width& (0+255),b
  3910  000090  D000               	goto	l5760
  3911  000092                     l5760:
  3912                           
  3913                           ;doprnt.c: 600: width *= 10;
  3914  000092  C154  F011         	movff	printf@width,___wmul@multiplier
  3915  000096  C155  F012         	movff	printf@width+1,___wmul@multiplier+1
  3916  00009A  0E00               	movlw	0
  3917  00009C  6E14               	movwf	___wmul@multiplicand+1,c
  3918  00009E  0E0A               	movlw	10
  3919  0000A0  6E13               	movwf	___wmul@multiplicand,c
  3920  0000A2  EC51  F011         	call	___wmul	;wreg free
  3921  0000A6  C011  F154         	movff	?___wmul,printf@width
  3922  0000AA  C012  F155         	movff	?___wmul+1,printf@width+1
  3923                           
  3924                           ;doprnt.c: 601: width += *f++ - '0';
  3925  0000AE  0ED0               	movlw	208
  3926  0000B0  6E35               	movwf	??_printf& (0+255),c
  3927  0000B2  0EFF               	movlw	255
  3928  0000B4  6E36               	movwf	(??_printf+1)& (0+255),c
  3929  0000B6  C027  FFF6         	movff	printf@f,tblptrl
  3930  0000BA  C028  FFF7         	movff	printf@f+1,tblptrh
  3931  0000BE                     	if	0	;tblptru may be non-zero
  3932  0000BE                     	endif
  3933  0000BE                     	if	0	;tblptru may be non-zero
  3934  0000BE                     	endif
  3935  0000BE  0008               	tblrd		*
  3936  0000C0  50F5               	movf	tablat,w,c
  3937  0000C2  6E37               	movwf	(??_printf+2)& (0+255),c
  3938  0000C4  6A38               	clrf	(??_printf+3)& (0+255),c
  3939  0000C6  5035               	movf	??_printf,w,c
  3940  0000C8  2637               	addwf	??_printf+2,f,c
  3941  0000CA  5036               	movf	??_printf+1,w,c
  3942  0000CC  2238               	addwfc	??_printf+3,f,c
  3943  0000CE  5037               	movf	??_printf+2,w,c
  3944  0000D0  0101               	movlb	1	; () banked
  3945  0000D2  2754               	addwf	printf@width& (0+255),f,b
  3946  0000D4  5038               	movf	??_printf+3,w,c
  3947  0000D6  0101               	movlb	1	; () banked
  3948  0000D8  2355               	addwfc	(printf@width+1)& (0+255),f,b
  3949                           
  3950                           ; BSR set to: 1
  3951  0000DA  4A27               	infsnz	printf@f,f,c
  3952  0000DC  2A28               	incf	printf@f+1,f,c
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3956  0000DE  C027  FFF6         	movff	printf@f,tblptrl
  3957  0000E2  C028  FFF7         	movff	printf@f+1,tblptrh
  3958  0000E6                     	if	0	;tblptru may be non-zero
  3959  0000E6                     	endif
  3960  0000E6                     	if	0	;tblptru may be non-zero
  3961  0000E6                     	endif
  3962  0000E6  0008               	tblrd		*
  3963  0000E8  50F5               	movf	tablat,w,c
  3964  0000EA  EC78  F011         	call	_isdigit
  3965  0000EE  A0D8               	btfss	status,0,c
  3966  0000F0  D00C               	goto	l5774
  3967  0000F2  D7CF               	goto	l5760
  3968                           
  3969                           ;doprnt.c: 635: switch(c = *f++) {
  3970                           
  3971                           ;doprnt.c: 608: }
  3972                           ;doprnt.c: 633: loop:
  3973  0000F4  D00A               	goto	l5774
  3974                           
  3975                           ;doprnt.c: 638: goto alldone;
  3976                           
  3977                           ;doprnt.c: 637: case 0:
  3978  0000F6  D1FC               	goto	l838
  3979  0000F8                     l5768:
  3980                           
  3981                           ;doprnt.c: 643: flag |= 0x10;
  3982  0000F8  0101               	movlb	1	; () banked
  3983  0000FA  8956               	bsf	printf@flag& (0+255),4,b
  3984                           
  3985                           ;doprnt.c: 644: goto loop;
  3986  0000FC  D006               	goto	l5774
  3987                           
  3988                           ; BSR set to: 1
  3989                           ;doprnt.c: 698: case 'i':
  3990                           ;doprnt.c: 699: break;
  3991                           
  3992                           ; BSR set to: 1
  3993                           
  3994                           ;doprnt.c: 697: case 'd':
  3995  0000FE  D020               	goto	l797
  3996  000100                     l5770:
  3997                           
  3998                           ; BSR set to: 1
  3999                           ;doprnt.c: 721: flag |= 0x80;
  4000  000100  0101               	movlb	1	; () banked
  4001  000102  8F56               	bsf	printf@flag& (0+255),7,b
  4002                           
  4003                           ;doprnt.c: 723: break;
  4004  000104  D01D               	goto	l797
  4005                           
  4006                           ; BSR set to: 1
  4007                           ;doprnt.c: 813: continue;
  4008                           
  4009                           ;doprnt.c: 802: default:
  4010  000106  D1E5               	goto	l5882
  4011                           
  4012                           ; BSR set to: 1
  4013                           ;doprnt.c: 822: }
  4014  000108  D01B               	goto	l797
  4015  00010A                     l5774:
  4016  00010A  C027  FFF6         	movff	printf@f,tblptrl
  4017  00010E  C028  FFF7         	movff	printf@f+1,tblptrh
  4018  000112  4A27               	infsnz	printf@f,f,c
  4019  000114  2A28               	incf	printf@f+1,f,c
  4020  000116                     	if	0	;tblptru may be non-zero
  4021  000116                     	endif
  4022  000116                     	if	0	;tblptru may be non-zero
  4023  000116                     	endif
  4024  000116  0008               	tblrd		*
  4025  000118  CFF5 F157          	movff	tablat,printf@c
  4026  00011C  0101               	movlb	1	; () banked
  4027  00011E  5157               	movf	printf@c& (0+255),w,b
  4028                           
  4029                           ; Switch size 1, requested type "space"
  4030                           ; Number of cases is 5, Range of values is 0 to 120
  4031                           ; switch strategies available:
  4032                           ; Name         Instructions Cycles
  4033                           ; simple_byte           16     9 (average)
  4034                           ;	Chosen strategy is simple_byte
  4035  000120  0A00               	xorlw	0	; case 0
  4036  000122  B4D8               	btfsc	status,2,c
  4037  000124  D1E5               	goto	l838
  4038  000126  0A64               	xorlw	100	; case 100
  4039  000128  B4D8               	btfsc	status,2,c
  4040  00012A  D00A               	goto	l797
  4041  00012C  0A0D               	xorlw	13	; case 105
  4042  00012E  B4D8               	btfsc	status,2,c
  4043  000130  D007               	goto	l797
  4044  000132  0A05               	xorlw	5	; case 108
  4045  000134  B4D8               	btfsc	status,2,c
  4046  000136  D7E0               	goto	l5768
  4047  000138  0A14               	xorlw	20	; case 120
  4048  00013A  B4D8               	btfsc	status,2,c
  4049  00013C  D7E1               	goto	l5770
  4050  00013E  D1C9               	goto	l5882
  4051  000140                     l797:
  4052                           
  4053                           ; BSR set to: 1
  4054                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4055  000140  0101               	movlb	1	; () banked
  4056  000142  BF56               	btfsc	printf@flag& (0+255),7,b
  4057  000144  D035               	goto	l800
  4058                           
  4059                           ; BSR set to: 1
  4060                           ;doprnt.c: 1253: {
  4061                           ;doprnt.c: 1255: if(flag & 0x10)
  4062  000146  0101               	movlb	1	; () banked
  4063  000148  A956               	btfss	printf@flag& (0+255),4,b
  4064  00014A  D00E               	goto	l5782
  4065                           
  4066                           ; BSR set to: 1
  4067                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
  4068  00014C  C14E  FFD9         	movff	printf@ap,fsr2l
  4069  000150  C14F  FFDA         	movff	printf@ap+1,fsr2h
  4070  000154  CFDE F150          	movff	postinc2,printf@val
  4071  000158  CFDE F151          	movff	postinc2,printf@val+1
  4072  00015C  CFDE F152          	movff	postinc2,printf@val+2
  4073  000160  CFDE F153          	movff	postinc2,printf@val+3
  4074                           
  4075                           ; BSR set to: 1
  4076  000164  0E04               	movlw	4
  4077  000166  D00F               	goto	L4
  4078  000168                     l5782:
  4079                           
  4080                           ; BSR set to: 1
  4081                           ;doprnt.c: 1257: else
  4082                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  4083  000168  C14E  FFD9         	movff	printf@ap,fsr2l
  4084  00016C  C14F  FFDA         	movff	printf@ap+1,fsr2h
  4085  000170  CFDE F150          	movff	postinc2,printf@val
  4086  000174  CFDD F151          	movff	postdec2,printf@val+1
  4087  000178  0101               	movlb	1	; () banked
  4088  00017A  0E00               	movlw	0
  4089  00017C  BF51               	btfsc	(printf@val+1)& (0+255),7,b
  4090  00017E  0EFF               	movlw	-1
  4091  000180  6F52               	movwf	(printf@val+2)& (0+255),b
  4092  000182  6F53               	movwf	(printf@val+3)& (0+255),b
  4093                           
  4094                           ; BSR set to: 1
  4095  000184  0E02               	movlw	2
  4096  000186                     L4:
  4097  000186  0101               	movlb	1	; () banked
  4098  000188  274E               	addwf	printf@ap& (0+255),f,b
  4099  00018A  0E00               	movlw	0
  4100  00018C  234F               	addwfc	(printf@ap+1)& (0+255),f,b
  4101  00018E  D000               	goto	l5786
  4102  000190                     l5786:
  4103                           
  4104                           ; BSR set to: 1
  4105                           ;doprnt.c: 1261: if((long)val < 0) {
  4106  000190  0101               	movlb	1	; () banked
  4107  000192  AF53               	btfss	(printf@val+3)& (0+255),7,b
  4108  000194  D089               	goto	l5830
  4109                           
  4110                           ; BSR set to: 1
  4111                           ;doprnt.c: 1262: flag |= 0x03;
  4112  000196  0E03               	movlw	3
  4113  000198  0101               	movlb	1	; () banked
  4114  00019A  1356               	iorwf	printf@flag& (0+255),f,b
  4115                           
  4116                           ; BSR set to: 1
  4117                           ;doprnt.c: 1263: val = -val;
  4118  00019C  0101               	movlb	1	; () banked
  4119  00019E  1F53               	comf	(printf@val+3)& (0+255),f,b
  4120  0001A0  1F52               	comf	(printf@val+2)& (0+255),f,b
  4121  0001A2  1F51               	comf	(printf@val+1)& (0+255),f,b
  4122  0001A4  6D50               	negf	printf@val& (0+255),b
  4123  0001A6  0E00               	movlw	0
  4124  0001A8  2351               	addwfc	(printf@val+1)& (0+255),f,b
  4125  0001AA  2352               	addwfc	(printf@val+2)& (0+255),f,b
  4126  0001AC  2353               	addwfc	(printf@val+3)& (0+255),f,b
  4127                           
  4128                           ; BSR set to: 1
  4129                           ;doprnt.c: 1264: }
  4130                           ;doprnt.c: 1266: }
  4131  0001AE  D07C               	goto	l5830
  4132  0001B0                     l800:
  4133                           
  4134                           ; BSR set to: 1
  4135                           ;doprnt.c: 1268: else
  4136                           ;doprnt.c: 1273: {
  4137                           ;doprnt.c: 1281: if(flag & 0x10)
  4138  0001B0  0101               	movlb	1	; () banked
  4139  0001B2  A956               	btfss	printf@flag& (0+255),4,b
  4140  0001B4  D00E               	goto	l5796
  4141                           
  4142                           ; BSR set to: 1
  4143                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  4144  0001B6  C14E  FFD9         	movff	printf@ap,fsr2l
  4145  0001BA  C14F  FFDA         	movff	printf@ap+1,fsr2h
  4146  0001BE  CFDE F150          	movff	postinc2,printf@val
  4147  0001C2  CFDE F151          	movff	postinc2,printf@val+1
  4148  0001C6  CFDE F152          	movff	postinc2,printf@val+2
  4149  0001CA  CFDE F153          	movff	postinc2,printf@val+3
  4150                           
  4151                           ; BSR set to: 1
  4152  0001CE  0E04               	movlw	4
  4153  0001D0  D010               	goto	L5
  4154  0001D2                     l5796:
  4155                           
  4156                           ; BSR set to: 1
  4157                           ;doprnt.c: 1283: else
  4158                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4159  0001D2  C14E  FFD9         	movff	printf@ap,fsr2l
  4160  0001D6  C14F  FFDA         	movff	printf@ap+1,fsr2h
  4161  0001DA  CFDE F035          	movff	postinc2,??_printf
  4162  0001DE  CFDD F036          	movff	postdec2,??_printf+1
  4163  0001E2  C035  F150         	movff	??_printf,printf@val
  4164  0001E6  C036  F151         	movff	??_printf+1,printf@val+1
  4165  0001EA  0101               	movlb	1	; () banked
  4166  0001EC  6B52               	clrf	(printf@val+2)& (0+255),b
  4167  0001EE  6B53               	clrf	(printf@val+3)& (0+255),b
  4168                           
  4169                           ; BSR set to: 1
  4170  0001F0  0E02               	movlw	2
  4171  0001F2                     L5:
  4172  0001F2  0101               	movlb	1	; () banked
  4173  0001F4  274E               	addwf	printf@ap& (0+255),f,b
  4174  0001F6  0E00               	movlw	0
  4175  0001F8  234F               	addwfc	(printf@ap+1)& (0+255),f,b
  4176                           
  4177                           ; BSR set to: 1
  4178                           ;doprnt.c: 1287: }
  4179                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4180                           
  4181                           ; BSR set to: 1
  4182  0001FA  D056               	goto	l5830
  4183  0001FC                     l5800:
  4184                           
  4185                           ; BSR set to: 1
  4186                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4187  0001FC  0E01               	movlw	1
  4188  0001FE  0101               	movlb	1	; () banked
  4189  000200  6F57               	movwf	printf@c& (0+255),b
  4190  000202                     l5802:
  4191                           
  4192                           ; BSR set to: 1
  4193  000202  0E0A               	movlw	10
  4194  000204  0101               	movlb	1	; () banked
  4195  000206  1957               	xorwf	printf@c& (0+255),w,b
  4196  000208  B4D8               	btfsc	status,2,c
  4197  00020A  D058               	goto	l5832
  4198  00020C  D001               	goto	l5806
  4199                           
  4200                           ; BSR set to: 1
  4201  00020E  D056               	goto	l5832
  4202  000210                     l5806:
  4203                           
  4204                           ; BSR set to: 1
  4205                           ;doprnt.c: 1306: if(val < dpowers[c])
  4206  000210  0101               	movlb	1	; () banked
  4207  000212  5157               	movf	printf@c& (0+255),w,b
  4208  000214  0D04               	mullw	4
  4209  000216  0E98               	movlw	low _dpowers
  4210  000218  24F3               	addwf	prodl,w,c
  4211  00021A  6EF6               	movwf	tblptrl,c
  4212  00021C  0EFE               	movlw	high _dpowers
  4213  00021E  20F4               	addwfc	prodh,w,c
  4214  000220  6EF7               	movwf	tblptrh,c
  4215  000222                     	if	0	;There are less than 3 active tblptr bytes
  4216  000222                     	endif
  4217  000222  0009               	tblrd		*+
  4218  000224  50F5               	movf	tablat,w,c
  4219  000226  0101               	movlb	1	; () banked
  4220  000228  5D50               	subwf	printf@val& (0+255),w,b
  4221  00022A  0009               	tblrd		*+
  4222  00022C  50F5               	movf	tablat,w,c
  4223  00022E  0101               	movlb	1	; () banked
  4224  000230  5951               	subwfb	(printf@val+1)& (0+255),w,b
  4225  000232  0009               	tblrd		*+
  4226  000234  50F5               	movf	tablat,w,c
  4227  000236  0101               	movlb	1	; () banked
  4228  000238  5952               	subwfb	(printf@val+2)& (0+255),w,b
  4229  00023A  0009               	tblrd		*+
  4230  00023C  50F5               	movf	tablat,w,c
  4231  00023E  0101               	movlb	1	; () banked
  4232  000240  5953               	subwfb	(printf@val+3)& (0+255),w,b
  4233  000242  A0D8               	btfss	status,0,c
  4234  000244  D03B               	goto	l5832
  4235  000246  D001               	goto	l5810
  4236                           
  4237                           ; BSR set to: 1
  4238                           ;doprnt.c: 1307: break;
  4239  000248  D039               	goto	l5832
  4240  00024A                     l5810:
  4241                           
  4242                           ; BSR set to: 1
  4243  00024A  0101               	movlb	1	; () banked
  4244  00024C  2B57               	incf	printf@c& (0+255),f,b
  4245  00024E  D7D9               	goto	l5802
  4246                           
  4247                           ; BSR set to: 1
  4248                           ;doprnt.c: 1309: break;
  4249                           
  4250                           ; BSR set to: 1
  4251  000250  D035               	goto	l5832
  4252  000252                     l5814:
  4253                           
  4254                           ; BSR set to: 1
  4255                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4256  000252  0E01               	movlw	1
  4257  000254  0101               	movlb	1	; () banked
  4258  000256  6F57               	movwf	printf@c& (0+255),b
  4259  000258                     l5816:
  4260                           
  4261                           ; BSR set to: 1
  4262  000258  0E08               	movlw	8
  4263  00025A  0101               	movlb	1	; () banked
  4264  00025C  1957               	xorwf	printf@c& (0+255),w,b
  4265  00025E  B4D8               	btfsc	status,2,c
  4266  000260  D02D               	goto	l5832
  4267  000262  D001               	goto	l5820
  4268                           
  4269                           ; BSR set to: 1
  4270  000264  D02B               	goto	l5832
  4271  000266                     l5820:
  4272                           
  4273                           ; BSR set to: 1
  4274                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4275  000266  0101               	movlb	1	; () banked
  4276  000268  5157               	movf	printf@c& (0+255),w,b
  4277  00026A  0D04               	mullw	4
  4278  00026C  0EC0               	movlw	low _hexpowers
  4279  00026E  24F3               	addwf	prodl,w,c
  4280  000270  6EF6               	movwf	tblptrl,c
  4281  000272  0EFE               	movlw	high _hexpowers
  4282  000274  20F4               	addwfc	prodh,w,c
  4283  000276  6EF7               	movwf	tblptrh,c
  4284  000278                     	if	0	;There are less than 3 active tblptr bytes
  4285  000278                     	endif
  4286  000278  0009               	tblrd		*+
  4287  00027A  50F5               	movf	tablat,w,c
  4288  00027C  0101               	movlb	1	; () banked
  4289  00027E  5D50               	subwf	printf@val& (0+255),w,b
  4290  000280  0009               	tblrd		*+
  4291  000282  50F5               	movf	tablat,w,c
  4292  000284  0101               	movlb	1	; () banked
  4293  000286  5951               	subwfb	(printf@val+1)& (0+255),w,b
  4294  000288  0009               	tblrd		*+
  4295  00028A  50F5               	movf	tablat,w,c
  4296  00028C  0101               	movlb	1	; () banked
  4297  00028E  5952               	subwfb	(printf@val+2)& (0+255),w,b
  4298  000290  0009               	tblrd		*+
  4299  000292  50F5               	movf	tablat,w,c
  4300  000294  0101               	movlb	1	; () banked
  4301  000296  5953               	subwfb	(printf@val+3)& (0+255),w,b
  4302  000298  A0D8               	btfss	status,0,c
  4303  00029A  D010               	goto	l5832
  4304  00029C  D001               	goto	l5824
  4305                           
  4306                           ; BSR set to: 1
  4307                           ;doprnt.c: 1318: break;
  4308  00029E  D00E               	goto	l5832
  4309  0002A0                     l5824:
  4310                           
  4311                           ; BSR set to: 1
  4312  0002A0  0101               	movlb	1	; () banked
  4313  0002A2  2B57               	incf	printf@c& (0+255),f,b
  4314  0002A4  D7D9               	goto	l5816
  4315                           
  4316                           ; BSR set to: 1
  4317                           ;doprnt.c: 1336: }
  4318                           
  4319                           ; BSR set to: 1
  4320                           ;doprnt.c: 1320: break;
  4321                           
  4322                           ; BSR set to: 1
  4323  0002A6  D00A               	goto	l5832
  4324  0002A8                     l5830:
  4325                           
  4326                           ; BSR set to: 1
  4327  0002A8  0101               	movlb	1	; () banked
  4328  0002AA  5156               	movf	printf@flag& (0+255),w,b
  4329  0002AC  0B80               	andlw	128
  4330                           
  4331                           ; Switch size 1, requested type "space"
  4332                           ; Number of cases is 2, Range of values is 0 to 128
  4333                           ; switch strategies available:
  4334                           ; Name         Instructions Cycles
  4335                           ; simple_byte            7     4 (average)
  4336                           ;	Chosen strategy is simple_byte
  4337  0002AE  0A00               	xorlw	0	; case 0
  4338  0002B0  B4D8               	btfsc	status,2,c
  4339  0002B2  D7A4               	goto	l5800
  4340  0002B4  0A80               	xorlw	128	; case 128
  4341  0002B6  B4D8               	btfsc	status,2,c
  4342  0002B8  D7CC               	goto	l5814
  4343  0002BA  D000               	goto	l5832
  4344  0002BC                     l5832:
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4348  0002BC  0101               	movlb	1	; () banked
  4349  0002BE  5154               	movf	printf@width& (0+255),w,b
  4350  0002C0  0101               	movlb	1	; () banked
  4351  0002C2  1155               	iorwf	(printf@width+1)& (0+255),w,b
  4352  0002C4  B4D8               	btfsc	status,2,c
  4353  0002C6  D00B               	goto	l5838
  4354                           
  4355                           ; BSR set to: 1
  4356  0002C8  C156  F035         	movff	printf@flag,??_printf
  4357  0002CC  0E03               	movlw	3
  4358  0002CE  1635               	andwf	??_printf,f,c
  4359  0002D0  B4D8               	btfsc	status,2,c
  4360  0002D2  D005               	goto	l5838
  4361                           
  4362                           ; BSR set to: 1
  4363                           ;doprnt.c: 1346: width--;
  4364  0002D4  0101               	movlb	1	; () banked
  4365  0002D6  0754               	decf	printf@width& (0+255),f,b
  4366  0002D8  A0D8               	btfss	status,0,c
  4367  0002DA  0755               	decf	(printf@width+1)& (0+255),f,b
  4368  0002DC  D000               	goto	l5838
  4369  0002DE                     l5838:
  4370                           
  4371                           ; BSR set to: 1
  4372                           ;doprnt.c: 1381: if(width > c)
  4373  0002DE  0E80               	movlw	128
  4374  0002E0  0101               	movlb	1	; () banked
  4375  0002E2  BF57               	btfsc	printf@c& (0+255),7,b
  4376  0002E4  0E7F               	movlw	127
  4377  0002E6  6E35               	movwf	??_printf& (0+255),c
  4378  0002E8  0101               	movlb	1	; () banked
  4379  0002EA  5154               	movf	printf@width& (0+255),w,b
  4380  0002EC  0101               	movlb	1	; () banked
  4381  0002EE  5D57               	subwf	printf@c& (0+255),w,b
  4382  0002F0  0101               	movlb	1	; () banked
  4383  0002F2  5155               	movf	(printf@width+1)& (0+255),w,b
  4384  0002F4  0A80               	xorlw	128
  4385  0002F6  5835               	subwfb	??_printf& (0+255),w,c
  4386  0002F8  B0D8               	btfsc	status,0,c
  4387  0002FA  D00B               	goto	l5842
  4388                           
  4389                           ; BSR set to: 1
  4390                           ;doprnt.c: 1382: width -= c;
  4391  0002FC  0101               	movlb	1	; () banked
  4392  0002FE  5157               	movf	printf@c& (0+255),w,b
  4393  000300  0101               	movlb	1	; () banked
  4394  000302  5F54               	subwf	printf@width& (0+255),f,b
  4395  000304  0E00               	movlw	0
  4396  000306  0101               	movlb	1	; () banked
  4397  000308  BF57               	btfsc	printf@c& (0+255),7,b
  4398  00030A  0EFF               	movlw	255
  4399  00030C  0101               	movlb	1	; () banked
  4400  00030E  5B55               	subwfb	(printf@width+1)& (0+255),f,b
  4401  000310  D006               	goto	l5844
  4402  000312                     l5842:
  4403                           
  4404                           ; BSR set to: 1
  4405                           ;doprnt.c: 1383: else
  4406                           ;doprnt.c: 1384: width = 0;
  4407  000312  0E00               	movlw	0
  4408  000314  0101               	movlb	1	; () banked
  4409  000316  6F55               	movwf	(printf@width+1)& (0+255),b
  4410  000318  0E00               	movlw	0
  4411  00031A  6F54               	movwf	printf@width& (0+255),b
  4412  00031C  D000               	goto	l5844
  4413  00031E                     l5844:
  4414                           
  4415                           ; BSR set to: 1
  4416                           ;doprnt.c: 1387: if(flag & 0x04) {
  4417  00031E  0101               	movlb	1	; () banked
  4418  000320  A556               	btfss	printf@flag& (0+255),2,b
  4419  000322  D01F               	goto	l5856
  4420                           
  4421                           ; BSR set to: 1
  4422                           ;doprnt.c: 1392: if(flag & 0x03)
  4423  000324  C156  F035         	movff	printf@flag,??_printf
  4424  000328  0E03               	movlw	3
  4425  00032A  1635               	andwf	??_printf,f,c
  4426  00032C  B4D8               	btfsc	status,2,c
  4427  00032E  D004               	goto	l5850
  4428                           
  4429                           ; BSR set to: 1
  4430                           ;doprnt.c: 1393: (putch('-') );
  4431  000330  0E2D               	movlw	45
  4432  000332  EC8B  F012         	call	_putch
  4433  000336  D000               	goto	l5850
  4434  000338                     l5850:
  4435                           
  4436                           ;doprnt.c: 1415: if(width)
  4437  000338  0101               	movlb	1	; () banked
  4438  00033A  5154               	movf	printf@width& (0+255),w,b
  4439  00033C  0101               	movlb	1	; () banked
  4440  00033E  1155               	iorwf	(printf@width+1)& (0+255),w,b
  4441  000340  B4D8               	btfsc	status,2,c
  4442  000342  D02E               	goto	l5866
  4443  000344                     l5852:
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;doprnt.c: 1417: (putch('0') );
  4447  000344  0E30               	movlw	48
  4448  000346  EC8B  F012         	call	_putch
  4449                           
  4450                           ;doprnt.c: 1418: while(--width);
  4451  00034A  0101               	movlb	1	; () banked
  4452  00034C  0754               	decf	printf@width& (0+255),f,b
  4453  00034E  A0D8               	btfss	status,0,c
  4454  000350  0755               	decf	(printf@width+1)& (0+255),f,b
  4455  000352  0101               	movlb	1	; () banked
  4456  000354  5154               	movf	printf@width& (0+255),w,b
  4457  000356  0101               	movlb	1	; () banked
  4458  000358  1155               	iorwf	(printf@width+1)& (0+255),w,b
  4459  00035A  B4D8               	btfsc	status,2,c
  4460  00035C  D021               	goto	l5866
  4461  00035E  D7F2               	goto	l5852
  4462                           
  4463                           ; BSR set to: 1
  4464                           ;doprnt.c: 1420: } else
  4465                           
  4466                           ; BSR set to: 1
  4467  000360  D01F               	goto	l5866
  4468  000362                     l5856:
  4469                           
  4470                           ; BSR set to: 1
  4471                           ;doprnt.c: 1422: {
  4472                           ;doprnt.c: 1424: if(width
  4473                           ;doprnt.c: 1428: )
  4474  000362  0101               	movlb	1	; () banked
  4475  000364  5154               	movf	printf@width& (0+255),w,b
  4476  000366  0101               	movlb	1	; () banked
  4477  000368  1155               	iorwf	(printf@width+1)& (0+255),w,b
  4478  00036A  B4D8               	btfsc	status,2,c
  4479  00036C  D00F               	goto	l5862
  4480  00036E                     l5858:
  4481                           
  4482                           ; BSR set to: 1
  4483                           ;doprnt.c: 1430: (putch(' ') );
  4484  00036E  0E20               	movlw	32
  4485  000370  EC8B  F012         	call	_putch
  4486                           
  4487                           ;doprnt.c: 1431: while(--width);
  4488  000374  0101               	movlb	1	; () banked
  4489  000376  0754               	decf	printf@width& (0+255),f,b
  4490  000378  A0D8               	btfss	status,0,c
  4491  00037A  0755               	decf	(printf@width+1)& (0+255),f,b
  4492  00037C  0101               	movlb	1	; () banked
  4493  00037E  5154               	movf	printf@width& (0+255),w,b
  4494  000380  0101               	movlb	1	; () banked
  4495  000382  1155               	iorwf	(printf@width+1)& (0+255),w,b
  4496  000384  B4D8               	btfsc	status,2,c
  4497  000386  D002               	goto	l5862
  4498  000388  D7F2               	goto	l5858
  4499                           
  4500                           ; BSR set to: 1
  4501  00038A  D000               	goto	l5862
  4502  00038C                     l5862:
  4503                           
  4504                           ; BSR set to: 1
  4505                           ;doprnt.c: 1438: if(flag & 0x03)
  4506  00038C  C156  F035         	movff	printf@flag,??_printf
  4507  000390  0E03               	movlw	3
  4508  000392  1635               	andwf	??_printf,f,c
  4509  000394  B4D8               	btfsc	status,2,c
  4510  000396  D004               	goto	l5866
  4511                           
  4512                           ; BSR set to: 1
  4513                           ;doprnt.c: 1439: (putch('-') );
  4514  000398  0E2D               	movlw	45
  4515  00039A  EC8B  F012         	call	_putch
  4516  00039E  D000               	goto	l5866
  4517  0003A0                     l5866:
  4518                           
  4519                           ;doprnt.c: 1469: }
  4520                           ;doprnt.c: 1472: prec = c;
  4521  0003A0  0101               	movlb	1	; () banked
  4522  0003A2  5157               	movf	printf@c& (0+255),w,b
  4523  0003A4  0101               	movlb	1	; () banked
  4524  0003A6  6F4C               	movwf	printf@prec& (0+255),b
  4525  0003A8  6B4D               	clrf	(printf@prec+1)& (0+255),b
  4526  0003AA  BF4C               	btfsc	printf@prec& (0+255),7,b
  4527  0003AC  074D               	decf	(printf@prec+1)& (0+255),f,b
  4528                           
  4529                           ;doprnt.c: 1474: while(prec--) {
  4530  0003AE  D084               	goto	l5880
  4531                           
  4532                           ; BSR set to: 1
  4533                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  4534  0003B0  D074               	goto	l5876
  4535  0003B2                     l5868:
  4536                           
  4537                           ; BSR set to: 1
  4538                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4539  0003B2  C14C  F035         	movff	printf@prec,??_printf
  4540  0003B6  C14D  F036         	movff	printf@prec+1,??_printf+1
  4541  0003BA  90D8               	bcf	status,0,c
  4542  0003BC  3635               	rlcf	??_printf,f,c
  4543  0003BE  3636               	rlcf	??_printf+1,f,c
  4544  0003C0  90D8               	bcf	status,0,c
  4545  0003C2  3635               	rlcf	??_printf,f,c
  4546  0003C4  3636               	rlcf	??_printf+1,f,c
  4547  0003C6  0E98               	movlw	low _dpowers
  4548  0003C8  2435               	addwf	??_printf,w,c
  4549  0003CA  6EF6               	movwf	tblptrl,c
  4550  0003CC  0EFE               	movlw	high _dpowers
  4551  0003CE  2036               	addwfc	??_printf+1,w,c
  4552  0003D0  6EF7               	movwf	tblptrh,c
  4553  0003D2                     	if	0	;There are less than 3 active tblptr bytes
  4554  0003D2                     	endif
  4555  0003D2  0009               	tblrd		*+
  4556  0003D4  CFF5 F015          	movff	tablat,___lldiv@divisor
  4557  0003D8  0009               	tblrd		*+
  4558  0003DA  CFF5 F016          	movff	tablat,___lldiv@divisor+1
  4559  0003DE  0009               	tblrd		*+
  4560  0003E0  CFF5 F017          	movff	tablat,___lldiv@divisor+2
  4561  0003E4  000A               	tblrd		*-
  4562  0003E6  CFF5 F018          	movff	tablat,___lldiv@divisor+3
  4563  0003EA  C150  F011         	movff	printf@val,___lldiv@dividend
  4564  0003EE  C151  F012         	movff	printf@val+1,___lldiv@dividend+1
  4565  0003F2  C152  F013         	movff	printf@val+2,___lldiv@dividend+2
  4566  0003F6  C153  F014         	movff	printf@val+3,___lldiv@dividend+3
  4567  0003FA  EC35  F00D         	call	___lldiv	;wreg free
  4568  0003FE  C011  F01E         	movff	?___lldiv,___llmod@dividend
  4569  000402  C012  F01F         	movff	?___lldiv+1,___llmod@dividend+1
  4570  000406  C013  F020         	movff	?___lldiv+2,___llmod@dividend+2
  4571  00040A  C014  F021         	movff	?___lldiv+3,___llmod@dividend+3
  4572  00040E  0E0A               	movlw	10
  4573  000410  6E22               	movwf	___llmod@divisor,c
  4574  000412  0E00               	movlw	0
  4575  000414  6E23               	movwf	___llmod@divisor+1,c
  4576  000416  0E00               	movlw	0
  4577  000418  6E24               	movwf	___llmod@divisor+2,c
  4578  00041A  0E00               	movlw	0
  4579  00041C  6E25               	movwf	___llmod@divisor+3,c
  4580  00041E  EC7E  F00E         	call	___llmod	;wreg free
  4581  000422  501E               	movf	?___llmod,w,c
  4582  000424  0F30               	addlw	48
  4583  000426  0101               	movlb	1	; () banked
  4584  000428  6F57               	movwf	printf@c& (0+255),b
  4585                           
  4586                           ;doprnt.c: 1491: break;
  4587  00042A  D041               	goto	l5878
  4588  00042C                     l5870:
  4589                           
  4590                           ; BSR set to: 1
  4591                           ;doprnt.c: 1499: {
  4592                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4593  00042C  C150  F011         	movff	printf@val,___lldiv@dividend
  4594  000430  C151  F012         	movff	printf@val+1,___lldiv@dividend+1
  4595  000434  C152  F013         	movff	printf@val+2,___lldiv@dividend+2
  4596  000438  C153  F014         	movff	printf@val+3,___lldiv@dividend+3
  4597  00043C  C14C  F035         	movff	printf@prec,??_printf
  4598  000440  C14D  F036         	movff	printf@prec+1,??_printf+1
  4599  000444  90D8               	bcf	status,0,c
  4600  000446  3635               	rlcf	??_printf,f,c
  4601  000448  3636               	rlcf	??_printf+1,f,c
  4602  00044A  90D8               	bcf	status,0,c
  4603  00044C  3635               	rlcf	??_printf,f,c
  4604  00044E  3636               	rlcf	??_printf+1,f,c
  4605  000450  0EC0               	movlw	low _hexpowers
  4606  000452  2435               	addwf	??_printf,w,c
  4607  000454  6EF6               	movwf	tblptrl,c
  4608  000456  0EFE               	movlw	high _hexpowers
  4609  000458  2036               	addwfc	??_printf+1,w,c
  4610  00045A  6EF7               	movwf	tblptrh,c
  4611  00045C                     	if	0	;There are less than 3 active tblptr bytes
  4612  00045C                     	endif
  4613  00045C  0009               	tblrd		*+
  4614  00045E  CFF5 F015          	movff	tablat,___lldiv@divisor
  4615  000462  0009               	tblrd		*+
  4616  000464  CFF5 F016          	movff	tablat,___lldiv@divisor+1
  4617  000468  0009               	tblrd		*+
  4618  00046A  CFF5 F017          	movff	tablat,___lldiv@divisor+2
  4619  00046E  000A               	tblrd		*-
  4620  000470  CFF5 F018          	movff	tablat,___lldiv@divisor+3
  4621  000474  EC35  F00D         	call	___lldiv	;wreg free
  4622  000478  5011               	movf	?___lldiv,w,c
  4623  00047A  0B0F               	andlw	15
  4624  00047C  0101               	movlb	1	; () banked
  4625  00047E  6F4B               	movwf	printf@idx& (0+255),b
  4626                           
  4627                           ; BSR set to: 1
  4628                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  4629  000480  0101               	movlb	1	; () banked
  4630  000482  514B               	movf	printf@idx& (0+255),w,b
  4631  000484  0D01               	mullw	1
  4632  000486  0E74               	movlw	low STR_22
  4633  000488  24F3               	addwf	prodl,w,c
  4634  00048A  6EF6               	movwf	tblptrl,c
  4635  00048C  0EFF               	movlw	high STR_22
  4636  00048E  20F4               	addwfc	prodh,w,c
  4637  000490  6EF7               	movwf	tblptrh,c
  4638  000492                     	if	0	;There are less than 3 active tblptr bytes
  4639  000492                     	endif
  4640  000492  0008               	tblrd		*
  4641  000494  CFF5 F157          	movff	tablat,printf@c
  4642                           
  4643                           ; BSR set to: 1
  4644                           ;doprnt.c: 1523: }
  4645                           
  4646                           ;doprnt.c: 1508: }
  4647                           ;doprnt.c: 1510: break;
  4648  000498  D00A               	goto	l5878
  4649  00049A                     l5876:
  4650                           
  4651                           ; BSR set to: 1
  4652  00049A  0101               	movlb	1	; () banked
  4653  00049C  5156               	movf	printf@flag& (0+255),w,b
  4654  00049E  0B80               	andlw	128
  4655                           
  4656                           ; Switch size 1, requested type "space"
  4657                           ; Number of cases is 2, Range of values is 0 to 128
  4658                           ; switch strategies available:
  4659                           ; Name         Instructions Cycles
  4660                           ; simple_byte            7     4 (average)
  4661                           ;	Chosen strategy is simple_byte
  4662  0004A0  0A00               	xorlw	0	; case 0
  4663  0004A2  B4D8               	btfsc	status,2,c
  4664  0004A4  D786               	goto	l5868
  4665  0004A6  0A80               	xorlw	128	; case 128
  4666  0004A8  B4D8               	btfsc	status,2,c
  4667  0004AA  D7C0               	goto	l5870
  4668  0004AC  D000               	goto	l5878
  4669  0004AE                     l5878:
  4670                           
  4671                           ; BSR set to: 1
  4672                           ;doprnt.c: 1524: (putch(c) );
  4673  0004AE  0101               	movlb	1	; () banked
  4674  0004B0  5157               	movf	printf@c& (0+255),w,b
  4675  0004B2  EC8B  F012         	call	_putch
  4676  0004B6  D000               	goto	l5880
  4677  0004B8                     l5880:
  4678  0004B8  0101               	movlb	1	; () banked
  4679  0004BA  074C               	decf	printf@prec& (0+255),f,b
  4680  0004BC  A0D8               	btfss	status,0,c
  4681  0004BE  074D               	decf	(printf@prec+1)& (0+255),f,b
  4682  0004C0  0101               	movlb	1	; () banked
  4683  0004C2  294C               	incf	printf@prec& (0+255),w,b
  4684  0004C4  E1EA               	bnz	l5876
  4685  0004C6  0101               	movlb	1	; () banked
  4686  0004C8  294D               	incf	(printf@prec+1)& (0+255),w,b
  4687  0004CA  B4D8               	btfsc	status,2,c
  4688  0004CC  D002               	goto	l5882
  4689  0004CE  D7E5               	goto	l5876
  4690                           
  4691                           ; BSR set to: 1
  4692  0004D0  D000               	goto	l5882
  4693  0004D2                     l5882:
  4694  0004D2  C027  FFF6         	movff	printf@f,tblptrl
  4695  0004D6  C028  FFF7         	movff	printf@f+1,tblptrh
  4696  0004DA  4A27               	infsnz	printf@f,f,c
  4697  0004DC  2A28               	incf	printf@f+1,f,c
  4698  0004DE                     	if	0	;tblptru may be non-zero
  4699  0004DE                     	endif
  4700  0004DE                     	if	0	;tblptru may be non-zero
  4701  0004DE                     	endif
  4702  0004DE  0008               	tblrd		*
  4703  0004E0  CFF5 F157          	movff	tablat,printf@c
  4704  0004E4  0101               	movlb	1	; () banked
  4705  0004E6  5157               	movf	printf@c& (0+255),w,b
  4706  0004E8  B4D8               	btfsc	status,2,c
  4707  0004EA  D002               	goto	l838
  4708  0004EC  D59E               	goto	l5744
  4709                           
  4710                           ; BSR set to: 1
  4711  0004EE  D000               	goto	l838
  4712  0004F0                     l838:
  4713  0004F0  0012               	return		;funcret
  4714  0004F2                     __end_of_printf:
  4715                           	opt stack 0
  4716                           tblptru	equ	0xFF8
  4717                           tblptrh	equ	0xFF7
  4718                           tblptrl	equ	0xFF6
  4719                           tablat	equ	0xFF5
  4720                           prodh	equ	0xFF4
  4721                           prodl	equ	0xFF3
  4722                           intcon	equ	0xFF2
  4723                           intcon2	equ	0xFF1
  4724                           postinc0	equ	0xFEE
  4725                           wreg	equ	0xFE8
  4726                           postdec1	equ	0xFE5
  4727                           fsr1l	equ	0xFE1
  4728                           postinc2	equ	0xFDE
  4729                           postdec2	equ	0xFDD
  4730                           fsr2h	equ	0xFDA
  4731                           fsr2l	equ	0xFD9
  4732                           status	equ	0xFD8
  4733                           
  4734 ;; *************** function _putch *****************
  4735 ;; Defined at:
  4736 ;;		line 104 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Lab12_ex.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  c               1    wreg     unsigned char 
  4739 ;; Auto vars:     Size  Location     Type
  4740 ;;  c               1   16[COMRAM] unsigned char 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;		None               void
  4743 ;; Registers used:
  4744 ;;		wreg
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;Total ram usage:        1 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; Hardware stack levels required when called:    3
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_printf
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text9
  4765  002516                     __ptext9:
  4766                           	opt stack 0
  4767  002516                     _putch:
  4768                           	opt stack 26
  4769                           
  4770                           ;incstack = 0
  4771                           ;putch@c stored from wreg
  4772  002516  6E11               	movwf	putch@c,c
  4773                           
  4774                           ;Lab12_ex.c: 106: while (!TRMT);
  4775  002518  D000               	goto	l670
  4776  00251A                     l670:
  4777  00251A  A2AC               	btfss	4012,1,c	;volatile
  4778  00251C  D7FE               	goto	l670
  4779                           
  4780                           ;Lab12_ex.c: 107: TXREG = c;
  4781  00251E  C011  FFAD         	movff	putch@c,4013	;volatile
  4782  002522  0012               	return		;funcret
  4783  002524                     __end_of_putch:
  4784                           	opt stack 0
  4785                           tblptru	equ	0xFF8
  4786                           tblptrh	equ	0xFF7
  4787                           tblptrl	equ	0xFF6
  4788                           tablat	equ	0xFF5
  4789                           prodh	equ	0xFF4
  4790                           prodl	equ	0xFF3
  4791                           intcon	equ	0xFF2
  4792                           intcon2	equ	0xFF1
  4793                           postinc0	equ	0xFEE
  4794                           wreg	equ	0xFE8
  4795                           postdec1	equ	0xFE5
  4796                           fsr1l	equ	0xFE1
  4797                           postinc2	equ	0xFDE
  4798                           postdec2	equ	0xFDD
  4799                           fsr2h	equ	0xFDA
  4800                           fsr2l	equ	0xFD9
  4801                           status	equ	0xFD8
  4802                           
  4803 ;; *************** function _isdigit *****************
  4804 ;; Defined at:
  4805 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  c               1    wreg     unsigned char 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  c               1   18[COMRAM] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;		None               void
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;Total ram usage:        3 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    3
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_printf
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text10
  4834  0022F0                     __ptext10:
  4835                           	opt stack 0
  4836  0022F0                     _isdigit:
  4837                           	opt stack 26
  4838                           
  4839                           ;incstack = 0
  4840                           ;isdigit@c stored from wreg
  4841  0022F0  6E13               	movwf	isdigit@c,c
  4842  0022F2  0E00               	movlw	0
  4843  0022F4  6E12               	movwf	_isdigit$2552,c
  4844  0022F6  0E3A               	movlw	58
  4845  0022F8  6013               	cpfslt	isdigit@c,c
  4846  0022FA  D006               	goto	l5542
  4847  0022FC  0E2F               	movlw	47
  4848  0022FE  6413               	cpfsgt	isdigit@c,c
  4849  002300  D003               	goto	l5542
  4850  002302  0E01               	movlw	1
  4851  002304  6E12               	movwf	_isdigit$2552,c
  4852  002306  D000               	goto	l5542
  4853  002308                     l5542:
  4854  002308  C012  F011         	movff	_isdigit$2552,??_isdigit
  4855  00230C  3011               	rrcf	??_isdigit,w,c
  4856  00230E  D000               	goto	l1305
  4857  002310                     l1305:
  4858  002310  0012               	return		;funcret
  4859  002312                     __end_of_isdigit:
  4860                           	opt stack 0
  4861                           tblptru	equ	0xFF8
  4862                           tblptrh	equ	0xFF7
  4863                           tblptrl	equ	0xFF6
  4864                           tablat	equ	0xFF5
  4865                           prodh	equ	0xFF4
  4866                           prodl	equ	0xFF3
  4867                           intcon	equ	0xFF2
  4868                           intcon2	equ	0xFF1
  4869                           postinc0	equ	0xFEE
  4870                           wreg	equ	0xFE8
  4871                           postdec1	equ	0xFE5
  4872                           fsr1l	equ	0xFE1
  4873                           postinc2	equ	0xFDE
  4874                           postdec2	equ	0xFDD
  4875                           fsr2h	equ	0xFDA
  4876                           fsr2l	equ	0xFD9
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function ___llmod *****************
  4880 ;; Defined at:
  4881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  dividend        4   29[COMRAM] unsigned long 
  4884 ;;  divisor         4   33[COMRAM] unsigned long 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  counter         1   37[COMRAM] unsigned char 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  4   29[COMRAM] unsigned long 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4896 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;Total ram usage:        9 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    3
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_printf
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text11
  4911  001CFC                     __ptext11:
  4912                           	opt stack 0
  4913  001CFC                     ___llmod:
  4914                           	opt stack 26
  4915                           
  4916                           ;incstack = 0
  4917  001CFC  5022               	movf	___llmod@divisor,w,c
  4918  001CFE  1023               	iorwf	___llmod@divisor+1,w,c
  4919  001D00  1024               	iorwf	___llmod@divisor+2,w,c
  4920  001D02  1025               	iorwf	___llmod@divisor+3,w,c
  4921  001D04  B4D8               	btfsc	status,2,c
  4922  001D06  D029               	goto	l1344
  4923  001D08  0E01               	movlw	1
  4924  001D0A  6E26               	movwf	___llmod@counter,c
  4925  001D0C  D007               	goto	l5718
  4926  001D0E                     l5716:
  4927  001D0E  90D8               	bcf	status,0,c
  4928  001D10  3622               	rlcf	___llmod@divisor,f,c
  4929  001D12  3623               	rlcf	___llmod@divisor+1,f,c
  4930  001D14  3624               	rlcf	___llmod@divisor+2,f,c
  4931  001D16  3625               	rlcf	___llmod@divisor+3,f,c
  4932  001D18  2A26               	incf	___llmod@counter,f,c
  4933  001D1A  D000               	goto	l5718
  4934  001D1C                     l5718:
  4935  001D1C  BE25               	btfsc	___llmod@divisor+3,7,c
  4936  001D1E  D002               	goto	l5720
  4937  001D20  D7F6               	goto	l5716
  4938  001D22  D000               	goto	l5720
  4939  001D24                     l5720:
  4940  001D24  5022               	movf	___llmod@divisor,w,c
  4941  001D26  5C1E               	subwf	___llmod@dividend,w,c
  4942  001D28  5023               	movf	___llmod@divisor+1,w,c
  4943  001D2A  581F               	subwfb	___llmod@dividend+1,w,c
  4944  001D2C  5024               	movf	___llmod@divisor+2,w,c
  4945  001D2E  5820               	subwfb	___llmod@dividend+2,w,c
  4946  001D30  5025               	movf	___llmod@divisor+3,w,c
  4947  001D32  5821               	subwfb	___llmod@dividend+3,w,c
  4948  001D34  A0D8               	btfss	status,0,c
  4949  001D36  D009               	goto	l5724
  4950  001D38  5022               	movf	___llmod@divisor,w,c
  4951  001D3A  5E1E               	subwf	___llmod@dividend,f,c
  4952  001D3C  5023               	movf	___llmod@divisor+1,w,c
  4953  001D3E  5A1F               	subwfb	___llmod@dividend+1,f,c
  4954  001D40  5024               	movf	___llmod@divisor+2,w,c
  4955  001D42  5A20               	subwfb	___llmod@dividend+2,f,c
  4956  001D44  5025               	movf	___llmod@divisor+3,w,c
  4957  001D46  5A21               	subwfb	___llmod@dividend+3,f,c
  4958  001D48  D000               	goto	l5724
  4959  001D4A                     l5724:
  4960  001D4A  90D8               	bcf	status,0,c
  4961  001D4C  3225               	rrcf	___llmod@divisor+3,f,c
  4962  001D4E  3224               	rrcf	___llmod@divisor+2,f,c
  4963  001D50  3223               	rrcf	___llmod@divisor+1,f,c
  4964  001D52  3222               	rrcf	___llmod@divisor,f,c
  4965  001D54  2E26               	decfsz	___llmod@counter,f,c
  4966  001D56  D7E6               	goto	l5720
  4967  001D58  D000               	goto	l1344
  4968  001D5A                     l1344:
  4969  001D5A  C01E  F01E         	movff	___llmod@dividend,?___llmod
  4970  001D5E  C01F  F01F         	movff	___llmod@dividend+1,?___llmod+1
  4971  001D62  C020  F020         	movff	___llmod@dividend+2,?___llmod+2
  4972  001D66  C021  F021         	movff	___llmod@dividend+3,?___llmod+3
  4973  001D6A  0012               	return		;funcret
  4974  001D6C                     __end_of___llmod:
  4975                           	opt stack 0
  4976                           tblptru	equ	0xFF8
  4977                           tblptrh	equ	0xFF7
  4978                           tblptrl	equ	0xFF6
  4979                           tablat	equ	0xFF5
  4980                           prodh	equ	0xFF4
  4981                           prodl	equ	0xFF3
  4982                           intcon	equ	0xFF2
  4983                           intcon2	equ	0xFF1
  4984                           postinc0	equ	0xFEE
  4985                           wreg	equ	0xFE8
  4986                           postdec1	equ	0xFE5
  4987                           fsr1l	equ	0xFE1
  4988                           postinc2	equ	0xFDE
  4989                           postdec2	equ	0xFDD
  4990                           fsr2h	equ	0xFDA
  4991                           fsr2l	equ	0xFD9
  4992                           status	equ	0xFD8
  4993                           
  4994 ;; *************** function ___lldiv *****************
  4995 ;; Defined at:
  4996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  dividend        4   16[COMRAM] unsigned long 
  4999 ;;  divisor         4   20[COMRAM] unsigned long 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  quotient        4   24[COMRAM] unsigned long 
  5002 ;;  counter         1   28[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  4   16[COMRAM] unsigned long 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5012 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;Total ram usage:       13 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    3
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_printf
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text12
  5027  001A6A                     __ptext12:
  5028                           	opt stack 0
  5029  001A6A                     ___lldiv:
  5030                           	opt stack 26
  5031                           
  5032                           ;incstack = 0
  5033  001A6A  0E00               	movlw	0
  5034  001A6C  6E19               	movwf	___lldiv@quotient,c
  5035  001A6E  0E00               	movlw	0
  5036  001A70  6E1A               	movwf	___lldiv@quotient+1,c
  5037  001A72  0E00               	movlw	0
  5038  001A74  6E1B               	movwf	___lldiv@quotient+2,c
  5039  001A76  0E00               	movlw	0
  5040  001A78  6E1C               	movwf	___lldiv@quotient+3,c
  5041  001A7A  5015               	movf	___lldiv@divisor,w,c
  5042  001A7C  1016               	iorwf	___lldiv@divisor+1,w,c
  5043  001A7E  1017               	iorwf	___lldiv@divisor+2,w,c
  5044  001A80  1018               	iorwf	___lldiv@divisor+3,w,c
  5045  001A82  B4D8               	btfsc	status,2,c
  5046  001A84  D02F               	goto	l1334
  5047  001A86  0E01               	movlw	1
  5048  001A88  6E1D               	movwf	___lldiv@counter,c
  5049  001A8A  D007               	goto	l5698
  5050  001A8C                     l5696:
  5051  001A8C  90D8               	bcf	status,0,c
  5052  001A8E  3615               	rlcf	___lldiv@divisor,f,c
  5053  001A90  3616               	rlcf	___lldiv@divisor+1,f,c
  5054  001A92  3617               	rlcf	___lldiv@divisor+2,f,c
  5055  001A94  3618               	rlcf	___lldiv@divisor+3,f,c
  5056  001A96  2A1D               	incf	___lldiv@counter,f,c
  5057  001A98  D000               	goto	l5698
  5058  001A9A                     l5698:
  5059  001A9A  BE18               	btfsc	___lldiv@divisor+3,7,c
  5060  001A9C  D002               	goto	l5700
  5061  001A9E  D7F6               	goto	l5696
  5062  001AA0  D000               	goto	l5700
  5063  001AA2                     l5700:
  5064  001AA2  90D8               	bcf	status,0,c
  5065  001AA4  3619               	rlcf	___lldiv@quotient,f,c
  5066  001AA6  361A               	rlcf	___lldiv@quotient+1,f,c
  5067  001AA8  361B               	rlcf	___lldiv@quotient+2,f,c
  5068  001AAA  361C               	rlcf	___lldiv@quotient+3,f,c
  5069  001AAC  5015               	movf	___lldiv@divisor,w,c
  5070  001AAE  5C11               	subwf	___lldiv@dividend,w,c
  5071  001AB0  5016               	movf	___lldiv@divisor+1,w,c
  5072  001AB2  5812               	subwfb	___lldiv@dividend+1,w,c
  5073  001AB4  5017               	movf	___lldiv@divisor+2,w,c
  5074  001AB6  5813               	subwfb	___lldiv@dividend+2,w,c
  5075  001AB8  5018               	movf	___lldiv@divisor+3,w,c
  5076  001ABA  5814               	subwfb	___lldiv@dividend+3,w,c
  5077  001ABC  A0D8               	btfss	status,0,c
  5078  001ABE  D00A               	goto	l5708
  5079  001AC0  5015               	movf	___lldiv@divisor,w,c
  5080  001AC2  5E11               	subwf	___lldiv@dividend,f,c
  5081  001AC4  5016               	movf	___lldiv@divisor+1,w,c
  5082  001AC6  5A12               	subwfb	___lldiv@dividend+1,f,c
  5083  001AC8  5017               	movf	___lldiv@divisor+2,w,c
  5084  001ACA  5A13               	subwfb	___lldiv@dividend+2,f,c
  5085  001ACC  5018               	movf	___lldiv@divisor+3,w,c
  5086  001ACE  5A14               	subwfb	___lldiv@dividend+3,f,c
  5087  001AD0  8019               	bsf	___lldiv@quotient,0,c
  5088  001AD2  D000               	goto	l5708
  5089  001AD4                     l5708:
  5090  001AD4  90D8               	bcf	status,0,c
  5091  001AD6  3218               	rrcf	___lldiv@divisor+3,f,c
  5092  001AD8  3217               	rrcf	___lldiv@divisor+2,f,c
  5093  001ADA  3216               	rrcf	___lldiv@divisor+1,f,c
  5094  001ADC  3215               	rrcf	___lldiv@divisor,f,c
  5095  001ADE  2E1D               	decfsz	___lldiv@counter,f,c
  5096  001AE0  D7E0               	goto	l5700
  5097  001AE2  D000               	goto	l1334
  5098  001AE4                     l1334:
  5099  001AE4  C019  F011         	movff	___lldiv@quotient,?___lldiv
  5100  001AE8  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
  5101  001AEC  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
  5102  001AF0  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
  5103  001AF4  0012               	return		;funcret
  5104  001AF6                     __end_of___lldiv:
  5105                           	opt stack 0
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           prodh	equ	0xFF4
  5111                           prodl	equ	0xFF3
  5112                           intcon	equ	0xFF2
  5113                           intcon2	equ	0xFF1
  5114                           postinc0	equ	0xFEE
  5115                           wreg	equ	0xFE8
  5116                           postdec1	equ	0xFE5
  5117                           fsr1l	equ	0xFE1
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _Initialize_Screen *****************
  5125 ;; Defined at:
  5126 ;;		line 34 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Main_Screen.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;		None               void
  5133 ;; Registers used:
  5134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;Total ram usage:        0 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:   10
  5147 ;; This function calls:
  5148 ;;		_LCD_Reset
  5149 ;;		_TFT_GreenTab_Initialize
  5150 ;;		_drawCircle
  5151 ;;		_drawtext
  5152 ;;		_fillScreen
  5153 ;;		_strcpy
  5154 ;; This function is called by:
  5155 ;;		_main
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text13
  5160  00089C                     __ptext13:
  5161                           	opt stack 0
  5162  00089C                     _Initialize_Screen:
  5163                           	opt stack 20
  5164                           
  5165                           ;Main_Screen.c: 36: LCD_Reset();
  5166                           
  5167                           ;incstack = 0
  5168  00089C  EC4E  F012         	call	_LCD_Reset	;wreg free
  5169                           
  5170                           ;Main_Screen.c: 37: TFT_GreenTab_Initialize();
  5171  0008A0  EC3C  F011         	call	_TFT_GreenTab_Initialize	;wreg free
  5172                           
  5173                           ;Main_Screen.c: 38: fillScreen(0x0000);
  5174  0008A4  0E00               	movlw	0
  5175  0008A6  6E25               	movwf	fillScreen@color+1,c
  5176  0008A8  0E00               	movlw	0
  5177  0008AA  6E24               	movwf	fillScreen@color,c
  5178  0008AC  ECD5  F011         	call	_fillScreen	;wreg free
  5179                           
  5180                           ;Main_Screen.c: 39: txt = buffer;
  5181  0008B0  0E2A               	movlw	low _buffer
  5182  0008B2  6E4E               	movwf	_txt,c
  5183  0008B4  0E01               	movlw	high _buffer
  5184  0008B6  6E4F               	movwf	_txt+1,c
  5185                           
  5186                           ;Main_Screen.c: 40: strcpy(txt, "ECE3301L Spring 21-S1");
  5187  0008B8  C04E  F011         	movff	_txt,strcpy@to
  5188  0008BC  C04F  F012         	movff	_txt+1,strcpy@to+1
  5189  0008C0  0E1F               	movlw	low STR_11
  5190  0008C2  6E13               	movwf	strcpy@from,c
  5191  0008C4  0EFF               	movlw	high STR_11
  5192  0008C6  6E14               	movwf	strcpy@from+1,c
  5193  0008C8  EC0B  F011         	call	_strcpy	;wreg free
  5194                           
  5195                           ;Main_Screen.c: 42: drawtext(1 , 1, txt, 0xFFFF , 0x0000, 1);
  5196  0008CC  0E01               	movlw	1
  5197  0008CE  6E39               	movwf	drawtext@y,c
  5198  0008D0  C04E  F03A         	movff	_txt,drawtext@_text
  5199  0008D4  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5200  0008D8  0EFF               	movlw	255
  5201  0008DA  6E3D               	movwf	drawtext@color+1,c
  5202  0008DC  683C               	setf	drawtext@color,c
  5203  0008DE  0E00               	movlw	0
  5204  0008E0  6E3F               	movwf	drawtext@bg+1,c
  5205  0008E2  0E00               	movlw	0
  5206  0008E4  6E3E               	movwf	drawtext@bg,c
  5207  0008E6  0E01               	movlw	1
  5208  0008E8  6E40               	movwf	drawtext@size,c
  5209  0008EA  0E01               	movlw	1
  5210  0008EC  EC60  F009         	call	_drawtext
  5211                           
  5212                           ;Main_Screen.c: 44: strcpy(txt, "Temperature:");
  5213  0008F0  C04E  F011         	movff	_txt,strcpy@to
  5214  0008F4  C04F  F012         	movff	_txt+1,strcpy@to+1
  5215  0008F8  0EC3               	movlw	low STR_12
  5216  0008FA  6E13               	movwf	strcpy@from,c
  5217  0008FC  0EFF               	movlw	high STR_12
  5218  0008FE  6E14               	movwf	strcpy@from+1,c
  5219  000900  EC0B  F011         	call	_strcpy	;wreg free
  5220                           
  5221                           ;Main_Screen.c: 45: drawtext(24 , 11 , txt, 0xF81F, 0x0000, 1);
  5222  000904  0E0B               	movlw	11
  5223  000906  6E39               	movwf	drawtext@y,c
  5224  000908  C04E  F03A         	movff	_txt,drawtext@_text
  5225  00090C  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5226  000910  0EF8               	movlw	248
  5227  000912  6E3D               	movwf	drawtext@color+1,c
  5228  000914  0E1F               	movlw	31
  5229  000916  6E3C               	movwf	drawtext@color,c
  5230  000918  0E00               	movlw	0
  5231  00091A  6E3F               	movwf	drawtext@bg+1,c
  5232  00091C  0E00               	movlw	0
  5233  00091E  6E3E               	movwf	drawtext@bg,c
  5234  000920  0E01               	movlw	1
  5235  000922  6E40               	movwf	drawtext@size,c
  5236  000924  0E18               	movlw	24
  5237  000926  EC60  F009         	call	_drawtext
  5238                           
  5239                           ;Main_Screen.c: 46: drawCircle(40, 23 , 2 , 0xFFE0);
  5240  00092A  0E00               	movlw	0
  5241  00092C  6E1D               	movwf	drawCircle@x0+1,c
  5242  00092E  0E28               	movlw	40
  5243  000930  6E1C               	movwf	drawCircle@x0,c
  5244  000932  0E00               	movlw	0
  5245  000934  6E1F               	movwf	drawCircle@y0+1,c
  5246  000936  0E17               	movlw	23
  5247  000938  6E1E               	movwf	drawCircle@y0,c
  5248  00093A  0E00               	movlw	0
  5249  00093C  6E21               	movwf	drawCircle@r+1,c
  5250  00093E  0E02               	movlw	2
  5251  000940  6E20               	movwf	drawCircle@r,c
  5252  000942  0EFF               	movlw	255
  5253  000944  6E23               	movwf	drawCircle@color+1,c
  5254  000946  0EE0               	movlw	224
  5255  000948  6E22               	movwf	drawCircle@color,c
  5256  00094A  ECA2  F006         	call	_drawCircle	;wreg free
  5257                           
  5258                           ;Main_Screen.c: 47: strcpy(txt, "C/");
  5259  00094E  C04E  F011         	movff	_txt,strcpy@to
  5260  000952  C04F  F012         	movff	_txt+1,strcpy@to+1
  5261  000956  0EF9               	movlw	low STR_13
  5262  000958  6E13               	movwf	strcpy@from,c
  5263  00095A  0EFF               	movlw	high STR_13
  5264  00095C  6E14               	movwf	strcpy@from+1,c
  5265  00095E  EC0B  F011         	call	_strcpy	;wreg free
  5266                           
  5267                           ;Main_Screen.c: 48: drawtext(45 , 23, txt, 0xFFE0 , 0x0000, 2);
  5268  000962  0E17               	movlw	23
  5269  000964  6E39               	movwf	drawtext@y,c
  5270  000966  C04E  F03A         	movff	_txt,drawtext@_text
  5271  00096A  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5272  00096E  0EFF               	movlw	255
  5273  000970  6E3D               	movwf	drawtext@color+1,c
  5274  000972  0EE0               	movlw	224
  5275  000974  6E3C               	movwf	drawtext@color,c
  5276  000976  0E00               	movlw	0
  5277  000978  6E3F               	movwf	drawtext@bg+1,c
  5278  00097A  0E00               	movlw	0
  5279  00097C  6E3E               	movwf	drawtext@bg,c
  5280  00097E  0E02               	movlw	2
  5281  000980  6E40               	movwf	drawtext@size,c
  5282  000982  0E2D               	movlw	45
  5283  000984  EC60  F009         	call	_drawtext
  5284                           
  5285                           ;Main_Screen.c: 49: strcpy(txt, "F");
  5286  000988  C04E  F011         	movff	_txt,strcpy@to
  5287  00098C  C04F  F012         	movff	_txt+1,strcpy@to+1
  5288  000990  0EF3               	movlw	low (STR_21+2)
  5289  000992  6E13               	movwf	strcpy@from,c
  5290  000994  0EFF               	movlw	high (STR_21+2)
  5291  000996  6E14               	movwf	strcpy@from+1,c
  5292  000998  EC0B  F011         	call	_strcpy	;wreg free
  5293                           
  5294                           ;Main_Screen.c: 50: drawCircle(110, 23 , 2 , 0xFFE0);
  5295  00099C  0E00               	movlw	0
  5296  00099E  6E1D               	movwf	drawCircle@x0+1,c
  5297  0009A0  0E6E               	movlw	110
  5298  0009A2  6E1C               	movwf	drawCircle@x0,c
  5299  0009A4  0E00               	movlw	0
  5300  0009A6  6E1F               	movwf	drawCircle@y0+1,c
  5301  0009A8  0E17               	movlw	23
  5302  0009AA  6E1E               	movwf	drawCircle@y0,c
  5303  0009AC  0E00               	movlw	0
  5304  0009AE  6E21               	movwf	drawCircle@r+1,c
  5305  0009B0  0E02               	movlw	2
  5306  0009B2  6E20               	movwf	drawCircle@r,c
  5307  0009B4  0EFF               	movlw	255
  5308  0009B6  6E23               	movwf	drawCircle@color+1,c
  5309  0009B8  0EE0               	movlw	224
  5310  0009BA  6E22               	movwf	drawCircle@color,c
  5311  0009BC  ECA2  F006         	call	_drawCircle	;wreg free
  5312                           
  5313                           ;Main_Screen.c: 51: drawtext(115 , 23, txt, 0xFFE0 , 0x0000, 2);
  5314  0009C0  0E17               	movlw	23
  5315  0009C2  6E39               	movwf	drawtext@y,c
  5316  0009C4  C04E  F03A         	movff	_txt,drawtext@_text
  5317  0009C8  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5318  0009CC  0EFF               	movlw	255
  5319  0009CE  6E3D               	movwf	drawtext@color+1,c
  5320  0009D0  0EE0               	movlw	224
  5321  0009D2  6E3C               	movwf	drawtext@color,c
  5322  0009D4  0E00               	movlw	0
  5323  0009D6  6E3F               	movwf	drawtext@bg+1,c
  5324  0009D8  0E00               	movlw	0
  5325  0009DA  6E3E               	movwf	drawtext@bg,c
  5326  0009DC  0E02               	movlw	2
  5327  0009DE  6E40               	movwf	drawtext@size,c
  5328  0009E0  0E73               	movlw	115
  5329  0009E2  EC60  F009         	call	_drawtext
  5330                           
  5331                           ;Main_Screen.c: 52: strcpy(txt, "Time");
  5332  0009E6  C04E  F011         	movff	_txt,strcpy@to
  5333  0009EA  C04F  F012         	movff	_txt+1,strcpy@to+1
  5334  0009EE  0EE3               	movlw	low STR_15
  5335  0009F0  6E13               	movwf	strcpy@from,c
  5336  0009F2  0EFF               	movlw	high STR_15
  5337  0009F4  6E14               	movwf	strcpy@from+1,c
  5338  0009F6  EC0B  F011         	call	_strcpy	;wreg free
  5339                           
  5340                           ;Main_Screen.c: 53: drawtext(50 , 40 , txt, 0x001F , 0x0000, 1);
  5341  0009FA  0E28               	movlw	40
  5342  0009FC  6E39               	movwf	drawtext@y,c
  5343  0009FE  C04E  F03A         	movff	_txt,drawtext@_text
  5344  000A02  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5345  000A06  0E00               	movlw	0
  5346  000A08  6E3D               	movwf	drawtext@color+1,c
  5347  000A0A  0E1F               	movlw	31
  5348  000A0C  6E3C               	movwf	drawtext@color,c
  5349  000A0E  0E00               	movlw	0
  5350  000A10  6E3F               	movwf	drawtext@bg+1,c
  5351  000A12  0E00               	movlw	0
  5352  000A14  6E3E               	movwf	drawtext@bg,c
  5353  000A16  0E01               	movlw	1
  5354  000A18  6E40               	movwf	drawtext@size,c
  5355  000A1A  0E32               	movlw	50
  5356  000A1C  EC60  F009         	call	_drawtext
  5357                           
  5358                           ;Main_Screen.c: 54: strcpy(txt, "Date");
  5359  000A20  C04E  F011         	movff	_txt,strcpy@to
  5360  000A24  C04F  F012         	movff	_txt+1,strcpy@to+1
  5361  000A28  0EE8               	movlw	low STR_16
  5362  000A2A  6E13               	movwf	strcpy@from,c
  5363  000A2C  0EFF               	movlw	high STR_16
  5364  000A2E  6E14               	movwf	strcpy@from+1,c
  5365  000A30  EC0B  F011         	call	_strcpy	;wreg free
  5366                           
  5367                           ;Main_Screen.c: 55: drawtext(50 , 71 , txt, 0xF800 , 0x0000, 1);
  5368  000A34  0E47               	movlw	71
  5369  000A36  6E39               	movwf	drawtext@y,c
  5370  000A38  C04E  F03A         	movff	_txt,drawtext@_text
  5371  000A3C  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5372  000A40  0EF8               	movlw	248
  5373  000A42  6E3D               	movwf	drawtext@color+1,c
  5374  000A44  0E00               	movlw	0
  5375  000A46  6E3C               	movwf	drawtext@color,c
  5376  000A48  0E00               	movlw	0
  5377  000A4A  6E3F               	movwf	drawtext@bg+1,c
  5378  000A4C  0E00               	movlw	0
  5379  000A4E  6E3E               	movwf	drawtext@bg,c
  5380  000A50  0E01               	movlw	1
  5381  000A52  6E40               	movwf	drawtext@size,c
  5382  000A54  0E32               	movlw	50
  5383  000A56  EC60  F009         	call	_drawtext
  5384                           
  5385                           ;Main_Screen.c: 58: strcpy(txt, "  FAN");
  5386  000A5A  C04E  F011         	movff	_txt,strcpy@to
  5387  000A5E  C04F  F012         	movff	_txt+1,strcpy@to+1
  5388  000A62  0EDD               	movlw	low STR_17
  5389  000A64  6E13               	movwf	strcpy@from,c
  5390  000A66  0EFF               	movlw	high STR_17
  5391  000A68  6E14               	movwf	strcpy@from+1,c
  5392  000A6A  EC0B  F011         	call	_strcpy	;wreg free
  5393                           
  5394                           ;Main_Screen.c: 59: drawtext(85, 120, txt, 0x001F , 0x0000, 1);
  5395  000A6E  0E78               	movlw	120
  5396  000A70  6E39               	movwf	drawtext@y,c
  5397  000A72  C04E  F03A         	movff	_txt,drawtext@_text
  5398  000A76  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5399  000A7A  0E00               	movlw	0
  5400  000A7C  6E3D               	movwf	drawtext@color+1,c
  5401  000A7E  0E1F               	movlw	31
  5402  000A80  6E3C               	movwf	drawtext@color,c
  5403  000A82  0E00               	movlw	0
  5404  000A84  6E3F               	movwf	drawtext@bg+1,c
  5405  000A86  0E00               	movlw	0
  5406  000A88  6E3E               	movwf	drawtext@bg,c
  5407  000A8A  0E01               	movlw	1
  5408  000A8C  6E40               	movwf	drawtext@size,c
  5409  000A8E  0E55               	movlw	85
  5410  000A90  EC60  F009         	call	_drawtext
  5411                           
  5412                           ;Main_Screen.c: 61: strcpy(txt, "DC");
  5413  000A94  C04E  F011         	movff	_txt,strcpy@to
  5414  000A98  C04F  F012         	movff	_txt+1,strcpy@to+1
  5415  000A9C  0EFC               	movlw	low STR_18
  5416  000A9E  6E13               	movwf	strcpy@from,c
  5417  000AA0  0EFF               	movlw	high STR_18
  5418  000AA2  6E14               	movwf	strcpy@from+1,c
  5419  000AA4  EC0B  F011         	call	_strcpy	;wreg free
  5420                           
  5421                           ;Main_Screen.c: 62: drawtext(12, 140, txt, 0xFFFF , 0x0000, 1);
  5422  000AA8  0E8C               	movlw	140
  5423  000AAA  6E39               	movwf	drawtext@y,c
  5424  000AAC  C04E  F03A         	movff	_txt,drawtext@_text
  5425  000AB0  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5426  000AB4  0EFF               	movlw	255
  5427  000AB6  6E3D               	movwf	drawtext@color+1,c
  5428  000AB8  683C               	setf	drawtext@color,c
  5429  000ABA  0E00               	movlw	0
  5430  000ABC  6E3F               	movwf	drawtext@bg+1,c
  5431  000ABE  0E00               	movlw	0
  5432  000AC0  6E3E               	movwf	drawtext@bg,c
  5433  000AC2  0E01               	movlw	1
  5434  000AC4  6E40               	movwf	drawtext@size,c
  5435  000AC6  0E0C               	movlw	12
  5436  000AC8  EC60  F009         	call	_drawtext
  5437                           
  5438                           ;Main_Screen.c: 64: strcpy(txt, "RPM");
  5439  000ACC  C04E  F011         	movff	_txt,strcpy@to
  5440  000AD0  C04F  F012         	movff	_txt+1,strcpy@to+1
  5441  000AD4  0EF5               	movlw	low STR_19
  5442  000AD6  6E13               	movwf	strcpy@from,c
  5443  000AD8  0EFF               	movlw	high STR_19
  5444  000ADA  6E14               	movwf	strcpy@from+1,c
  5445  000ADC  EC0B  F011         	call	_strcpy	;wreg free
  5446                           
  5447                           ;Main_Screen.c: 65: drawtext(95, 140, txt, 0xFFFF , 0x0000 , 1);
  5448  000AE0  0E8C               	movlw	140
  5449  000AE2  6E39               	movwf	drawtext@y,c
  5450  000AE4  C04E  F03A         	movff	_txt,drawtext@_text
  5451  000AE8  C04F  F03B         	movff	_txt+1,drawtext@_text+1
  5452  000AEC  0EFF               	movlw	255
  5453  000AEE  6E3D               	movwf	drawtext@color+1,c
  5454  000AF0  683C               	setf	drawtext@color,c
  5455  000AF2  0E00               	movlw	0
  5456  000AF4  6E3F               	movwf	drawtext@bg+1,c
  5457  000AF6  0E00               	movlw	0
  5458  000AF8  6E3E               	movwf	drawtext@bg,c
  5459  000AFA  0E01               	movlw	1
  5460  000AFC  6E40               	movwf	drawtext@size,c
  5461  000AFE  0E5F               	movlw	95
  5462  000B00  EC60  F009         	call	_drawtext
  5463  000B04  0012               	return		;funcret
  5464  000B06                     __end_of_Initialize_Screen:
  5465                           	opt stack 0
  5466                           tblptru	equ	0xFF8
  5467                           tblptrh	equ	0xFF7
  5468                           tblptrl	equ	0xFF6
  5469                           tablat	equ	0xFF5
  5470                           prodh	equ	0xFF4
  5471                           prodl	equ	0xFF3
  5472                           intcon	equ	0xFF2
  5473                           intcon2	equ	0xFF1
  5474                           postinc0	equ	0xFEE
  5475                           wreg	equ	0xFE8
  5476                           postdec1	equ	0xFE5
  5477                           fsr1l	equ	0xFE1
  5478                           postinc2	equ	0xFDE
  5479                           postdec2	equ	0xFDD
  5480                           fsr2h	equ	0xFDA
  5481                           fsr2l	equ	0xFD9
  5482                           status	equ	0xFD8
  5483                           
  5484 ;; *************** function _strcpy *****************
  5485 ;; Defined at:
  5486 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strcpy.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  to              2   16[COMRAM] PTR unsigned char 
  5489 ;;		 -> NULL(0), Fan_SW_Txt(4), buffer(33), 
  5490 ;;  from            2   18[COMRAM] PTR const unsigned char 
  5491 ;;		 -> STR_21(4), STR_20(4), STR_19(4), STR_18(3), 
  5492 ;;		 -> STR_17(6), STR_16(5), STR_15(5), STR_14(2), 
  5493 ;;		 -> STR_13(3), STR_12(13), STR_11(22), 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  cp              2   20[COMRAM] PTR unsigned char 
  5496 ;;		 -> NULL(0), Fan_SW_Txt(4), buffer(33), 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  2   16[COMRAM] PTR unsigned char 
  5499 ;; Registers used:
  5500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5506 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;Total ram usage:        6 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    3
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_Initialize_Screen
  5517 ;;		_Update_Screen
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text14
  5522  002216                     __ptext14:
  5523                           	opt stack 0
  5524  002216                     _strcpy:
  5525                           	opt stack 26
  5526                           
  5527                           ;incstack = 0
  5528  002216  C011  F015         	movff	strcpy@to,strcpy@cp
  5529  00221A  C012  F016         	movff	strcpy@to+1,strcpy@cp+1
  5530  00221E  D005               	goto	l6378
  5531  002220                     l6376:
  5532  002220  4A15               	infsnz	strcpy@cp,f,c
  5533  002222  2A16               	incf	strcpy@cp+1,f,c
  5534  002224  4A13               	infsnz	strcpy@from,f,c
  5535  002226  2A14               	incf	strcpy@from+1,f,c
  5536  002228  D000               	goto	l6378
  5537  00222A                     l6378:
  5538  00222A  C013  FFF6         	movff	strcpy@from,tblptrl
  5539  00222E  C014  FFF7         	movff	strcpy@from+1,tblptrh
  5540  002232                     	if	0	;tblptru may be non-zero
  5541  002232                     	endif
  5542  002232                     	if	0	;tblptru may be non-zero
  5543  002232                     	endif
  5544  002232  C015  FFD9         	movff	strcpy@cp,fsr2l
  5545  002236  C016  FFDA         	movff	strcpy@cp+1,fsr2h
  5546  00223A  0008               	tblrd		*
  5547  00223C  CFF5 FFDF          	movff	tablat,indf2
  5548  002240  50DF               	movf	indf2,w,c
  5549  002242  A4D8               	btfss	status,2,c
  5550  002244  D7ED               	goto	l6376
  5551                           
  5552                           ;	Return value of _strcpy is never used
  5553  002246  0012               	return		;funcret
  5554  002248                     __end_of_strcpy:
  5555                           	opt stack 0
  5556                           tblptru	equ	0xFF8
  5557                           tblptrh	equ	0xFF7
  5558                           tblptrl	equ	0xFF6
  5559                           tablat	equ	0xFF5
  5560                           prodh	equ	0xFF4
  5561                           prodl	equ	0xFF3
  5562                           intcon	equ	0xFF2
  5563                           intcon2	equ	0xFF1
  5564                           postinc0	equ	0xFEE
  5565                           wreg	equ	0xFE8
  5566                           postdec1	equ	0xFE5
  5567                           fsr1l	equ	0xFE1
  5568                           indf2	equ	0xFDF
  5569                           postinc2	equ	0xFDE
  5570                           postdec2	equ	0xFDD
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function _fillScreen *****************
  5576 ;; Defined at:
  5577 ;;		line 620 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  color           2   35[COMRAM] unsigned int 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;		None
  5582 ;; Return value:  Size  Location     Type
  5583 ;;		None               void
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, status,0, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;Total ram usage:        2 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    7
  5598 ;; This function calls:
  5599 ;;		_fillRectangle
  5600 ;; This function is called by:
  5601 ;;		_Initialize_Screen
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text15
  5606  0023AA                     __ptext15:
  5607                           	opt stack 0
  5608  0023AA                     _fillScreen:
  5609                           	opt stack 22
  5610                           
  5611                           ;ST7735_TFT.c: 622: fillRectangle(0, 0, 128, 160, color);
  5612                           
  5613                           ;incstack = 0
  5614  0023AA  0E00               	movlw	0
  5615  0023AC  6E18               	movwf	fillRectangle@y,c
  5616  0023AE  0E80               	movlw	128
  5617  0023B0  6E19               	movwf	fillRectangle@w,c
  5618  0023B2  0EA0               	movlw	160
  5619  0023B4  6E1A               	movwf	fillRectangle@h,c
  5620  0023B6  C024  F01B         	movff	fillScreen@color,fillRectangle@color
  5621  0023BA  C025  F01C         	movff	fillScreen@color+1,fillRectangle@color+1
  5622  0023BE  0E00               	movlw	0
  5623  0023C0  ECBE  F00B         	call	_fillRectangle
  5624  0023C4  0012               	return		;funcret
  5625  0023C6                     __end_of_fillScreen:
  5626                           	opt stack 0
  5627                           tblptru	equ	0xFF8
  5628                           tblptrh	equ	0xFF7
  5629                           tblptrl	equ	0xFF6
  5630                           tablat	equ	0xFF5
  5631                           prodh	equ	0xFF4
  5632                           prodl	equ	0xFF3
  5633                           intcon	equ	0xFF2
  5634                           intcon2	equ	0xFF1
  5635                           postinc0	equ	0xFEE
  5636                           wreg	equ	0xFE8
  5637                           postdec1	equ	0xFE5
  5638                           fsr1l	equ	0xFE1
  5639                           indf2	equ	0xFDF
  5640                           postinc2	equ	0xFDE
  5641                           postdec2	equ	0xFDD
  5642                           fsr2h	equ	0xFDA
  5643                           fsr2l	equ	0xFD9
  5644                           status	equ	0xFD8
  5645                           
  5646 ;; *************** function _fillRectangle *****************
  5647 ;; Defined at:
  5648 ;;		line 504 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  x               1    wreg     unsigned char 
  5651 ;;  y               1   23[COMRAM] unsigned char 
  5652 ;;  w               1   24[COMRAM] unsigned char 
  5653 ;;  h               1   25[COMRAM] unsigned char 
  5654 ;;  color           2   26[COMRAM] unsigned int 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;  x               1   34[COMRAM] unsigned char 
  5657 ;;  lo              1   33[COMRAM] unsigned char 
  5658 ;;  hi              1   32[COMRAM] unsigned char 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;		None               void
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5668 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;Total ram usage:       12 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    6
  5675 ;; This function calls:
  5676 ;;		_setAddrWindow
  5677 ;;		_spiwrite
  5678 ;; This function is called by:
  5679 ;;		_fillScreen
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text16
  5684  00177C                     __ptext16:
  5685                           	opt stack 0
  5686  00177C                     _fillRectangle:
  5687                           	opt stack 22
  5688                           
  5689                           ;incstack = 0
  5690                           ;fillRectangle@x stored from wreg
  5691  00177C  6E23               	movwf	fillRectangle@x,c
  5692                           
  5693                           ;ST7735_TFT.c: 506: unsigned char hi, lo;
  5694                           ;ST7735_TFT.c: 507: if((x >= 128) || (y >= 160))
  5695  00177E  0E80               	movlw	128
  5696  001780  6023               	cpfslt	fillRectangle@x,c
  5697  001782  D069               	goto	l398
  5698  001784  0E9F               	movlw	159
  5699  001786  6418               	cpfsgt	fillRectangle@y,c
  5700  001788  D001               	goto	l6072
  5701                           
  5702                           ;ST7735_TFT.c: 508: return;
  5703  00178A  D065               	goto	l398
  5704  00178C                     l6072:
  5705                           
  5706                           ;ST7735_TFT.c: 509: if((x + w - 1) >= 128)
  5707  00178C  0EFF               	movlw	255
  5708  00178E  6E1D               	movwf	??_fillRectangle& (0+255),c
  5709  001790  0EFF               	movlw	255
  5710  001792  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  5711  001794  5019               	movf	fillRectangle@w,w,c
  5712  001796  C023  F01F         	movff	fillRectangle@x,??_fillRectangle+2
  5713  00179A  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  5714  00179C  261F               	addwf	??_fillRectangle+2,f,c
  5715  00179E  0E00               	movlw	0
  5716  0017A0  2220               	addwfc	??_fillRectangle+3,f,c
  5717  0017A2  501D               	movf	??_fillRectangle,w,c
  5718  0017A4  261F               	addwf	??_fillRectangle+2,f,c
  5719  0017A6  501E               	movf	??_fillRectangle+1,w,c
  5720  0017A8  2220               	addwfc	??_fillRectangle+3,f,c
  5721  0017AA  BE20               	btfsc	??_fillRectangle+3,7,c
  5722  0017AC  D00A               	goto	l399
  5723  0017AE  5020               	movf	??_fillRectangle+3,w,c
  5724  0017B0  E104               	bnz	u4680
  5725  0017B2  0E80               	movlw	128
  5726  0017B4  5C1F               	subwf	??_fillRectangle+2,w,c
  5727  0017B6  A0D8               	btfss	status,0,c
  5728  0017B8  D004               	goto	l399
  5729  0017BA                     u4680:
  5730                           
  5731                           ;ST7735_TFT.c: 510: w = 128 - x;
  5732  0017BA  5023               	movf	fillRectangle@x,w,c
  5733  0017BC  0800               	sublw	0
  5734  0017BE  0F80               	addlw	128
  5735  0017C0  6E19               	movwf	fillRectangle@w,c
  5736  0017C2                     l399:
  5737                           
  5738                           ;ST7735_TFT.c: 511: if((y + h - 1) >= 160)
  5739  0017C2  0EFF               	movlw	255
  5740  0017C4  6E1D               	movwf	??_fillRectangle& (0+255),c
  5741  0017C6  0EFF               	movlw	255
  5742  0017C8  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  5743  0017CA  501A               	movf	fillRectangle@h,w,c
  5744  0017CC  C018  F01F         	movff	fillRectangle@y,??_fillRectangle+2
  5745  0017D0  6A20               	clrf	(??_fillRectangle+3)& (0+255),c
  5746  0017D2  261F               	addwf	??_fillRectangle+2,f,c
  5747  0017D4  0E00               	movlw	0
  5748  0017D6  2220               	addwfc	??_fillRectangle+3,f,c
  5749  0017D8  501D               	movf	??_fillRectangle,w,c
  5750  0017DA  261F               	addwf	??_fillRectangle+2,f,c
  5751  0017DC  501E               	movf	??_fillRectangle+1,w,c
  5752  0017DE  2220               	addwfc	??_fillRectangle+3,f,c
  5753  0017E0  BE20               	btfsc	??_fillRectangle+3,7,c
  5754  0017E2  D00B               	goto	l6078
  5755  0017E4  5020               	movf	??_fillRectangle+3,w,c
  5756  0017E6  E104               	bnz	u4690
  5757  0017E8  0EA0               	movlw	160
  5758  0017EA  5C1F               	subwf	??_fillRectangle+2,w,c
  5759  0017EC  A0D8               	btfss	status,0,c
  5760  0017EE  D005               	goto	l6078
  5761  0017F0                     u4690:
  5762                           
  5763                           ;ST7735_TFT.c: 512: h = 160 - y;
  5764  0017F0  5018               	movf	fillRectangle@y,w,c
  5765  0017F2  0800               	sublw	0
  5766  0017F4  0FA0               	addlw	160
  5767  0017F6  6E1A               	movwf	fillRectangle@h,c
  5768  0017F8  D000               	goto	l6078
  5769  0017FA                     l6078:
  5770                           
  5771                           ;ST7735_TFT.c: 513: setAddrWindow(x, y, x+w-1, y+h-1);
  5772  0017FA  C018  F014         	movff	fillRectangle@y,setAddrWindow@y0
  5773  0017FE  5023               	movf	fillRectangle@x,w,c
  5774  001800  2419               	addwf	fillRectangle@w,w,c
  5775  001802  6E1D               	movwf	??_fillRectangle& (0+255),c
  5776  001804  041D               	decf	??_fillRectangle,w,c
  5777  001806  6E15               	movwf	setAddrWindow@x1,c
  5778  001808  5018               	movf	fillRectangle@y,w,c
  5779  00180A  241A               	addwf	fillRectangle@h,w,c
  5780  00180C  6E1E               	movwf	(??_fillRectangle+1)& (0+255),c
  5781  00180E  041E               	decf	??_fillRectangle+1,w,c
  5782  001810  6E16               	movwf	setAddrWindow@y1,c
  5783  001812  5023               	movf	fillRectangle@x,w,c
  5784  001814  ECB2  F00F         	call	_setAddrWindow
  5785                           
  5786                           ;ST7735_TFT.c: 514: hi = color >> 8; lo = color;
  5787  001818  501C               	movf	fillRectangle@color+1,w,c
  5788  00181A  6E21               	movwf	fillRectangle@hi,c
  5789  00181C  C01B  F022         	movff	fillRectangle@color,fillRectangle@lo
  5790                           
  5791                           ;ST7735_TFT.c: 515: PORTBbits.RB0 = 1;
  5792  001820  8081               	bsf	3969,0,c	;volatile
  5793                           
  5794                           ;ST7735_TFT.c: 516: PORTBbits.RB5 = 0;
  5795  001822  9A81               	bcf	3969,5,c	;volatile
  5796                           
  5797                           ;ST7735_TFT.c: 518: for(y=h; y>0; y--) {
  5798  001824  C01A  F018         	movff	fillRectangle@h,fillRectangle@y
  5799  001828                     l6090:
  5800  001828  5018               	movf	fillRectangle@y,w,c
  5801  00182A  B4D8               	btfsc	status,2,c
  5802  00182C  D013               	goto	l402
  5803  00182E  D001               	goto	l401
  5804  001830  D011               	goto	l402
  5805  001832                     l401:
  5806                           
  5807                           ;ST7735_TFT.c: 519: for(x = w; x > 0; x--) {
  5808  001832  C019  F023         	movff	fillRectangle@w,fillRectangle@x
  5809  001836                     l6094:
  5810  001836  5023               	movf	fillRectangle@x,w,c
  5811  001838  B4D8               	btfsc	status,2,c
  5812  00183A  D00A               	goto	l6104
  5813  00183C  D001               	goto	l6098
  5814  00183E  D008               	goto	l6104
  5815  001840                     l6098:
  5816                           
  5817                           ;ST7735_TFT.c: 520: spiwrite(hi);
  5818  001840  5021               	movf	fillRectangle@hi,w,c
  5819  001842  EC3A  F012         	call	_spiwrite
  5820                           
  5821                           ;ST7735_TFT.c: 521: spiwrite(lo);
  5822  001846  5022               	movf	fillRectangle@lo,w,c
  5823  001848  EC3A  F012         	call	_spiwrite
  5824  00184C  0623               	decf	fillRectangle@x,f,c
  5825  00184E  D7F3               	goto	l6094
  5826  001850                     l6104:
  5827  001850  0618               	decf	fillRectangle@y,f,c
  5828  001852  D7EA               	goto	l6090
  5829  001854                     l402:
  5830                           
  5831                           ;ST7735_TFT.c: 522: }
  5832                           ;ST7735_TFT.c: 523: }
  5833                           ;ST7735_TFT.c: 524: PORTBbits.RB5 = 1;
  5834  001854  8A81               	bsf	3969,5,c	;volatile
  5835  001856                     l398:
  5836  001856  0012               	return		;funcret
  5837  001858                     __end_of_fillRectangle:
  5838                           	opt stack 0
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           prodh	equ	0xFF4
  5844                           prodl	equ	0xFF3
  5845                           intcon	equ	0xFF2
  5846                           intcon2	equ	0xFF1
  5847                           postinc0	equ	0xFEE
  5848                           wreg	equ	0xFE8
  5849                           postdec1	equ	0xFE5
  5850                           fsr1l	equ	0xFE1
  5851                           indf2	equ	0xFDF
  5852                           postinc2	equ	0xFDE
  5853                           postdec2	equ	0xFDD
  5854                           fsr2h	equ	0xFDA
  5855                           fsr2l	equ	0xFD9
  5856                           status	equ	0xFD8
  5857                           
  5858 ;; *************** function _drawtext *****************
  5859 ;; Defined at:
  5860 ;;		line 475 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  x               1    wreg     unsigned char 
  5863 ;;  y               1   56[COMRAM] unsigned char 
  5864 ;;  _text           2   57[COMRAM] PTR unsigned char 
  5865 ;;		 -> NULL(0), RPM_Txt(5), DC_Txt(4), Fan_SW_Txt(4), 
  5866 ;;		 -> date(9), time(9), tempF(4), tempC(4), 
  5867 ;;		 -> buffer(33), 
  5868 ;;  color           2   59[COMRAM] unsigned int 
  5869 ;;  bg              2   61[COMRAM] unsigned int 
  5870 ;;  size            1   63[COMRAM] unsigned char 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  x               1    0[BANK0 ] unsigned char 
  5873 ;;  i               2    3[BANK0 ] unsigned int 
  5874 ;;  textsize        2    1[BANK0 ] unsigned int 
  5875 ;;  cursor_x        1    6[BANK0 ] unsigned char 
  5876 ;;  cursor_y        1    5[BANK0 ] unsigned char 
  5877 ;; Return value:  Size  Location     Type
  5878 ;;		None               void
  5879 ;; Registers used:
  5880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5886 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Totals:        10       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;Total ram usage:       17 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    9
  5893 ;; This function calls:
  5894 ;;		_drawChar
  5895 ;;		_strlen
  5896 ;; This function is called by:
  5897 ;;		_Initialize_Screen
  5898 ;;		_Update_Screen
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text17
  5903  0012C0                     __ptext17:
  5904                           	opt stack 0
  5905  0012C0                     _drawtext:
  5906                           	opt stack 20
  5907                           
  5908                           ;incstack = 0
  5909                           ;drawtext@x stored from wreg
  5910  0012C0  0100               	movlb	0	; () banked
  5911  0012C2  6FEB               	movwf	drawtext@x& (0+255),b
  5912                           
  5913                           ; BSR set to: 0
  5914                           ;ST7735_TFT.c: 477: unsigned char cursor_x, cursor_y;
  5915                           ;ST7735_TFT.c: 478: unsigned int textsize, i;
  5916                           ;ST7735_TFT.c: 479: cursor_x = x, cursor_y = y;
  5917  0012C4  C0EB  F0F1         	movff	drawtext@x,drawtext@cursor_x
  5918                           
  5919                           ; BSR set to: 0
  5920  0012C8  C039  F0F0         	movff	drawtext@y,drawtext@cursor_y
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;ST7735_TFT.c: 480: textsize = strlen(_text);
  5924  0012CC  C03A  F011         	movff	drawtext@_text,strlen@s
  5925  0012D0  C03B  F012         	movff	drawtext@_text+1,strlen@s+1
  5926  0012D4  EC90  F010         	call	_strlen	;wreg free
  5927  0012D8  C011  F0EC         	movff	?_strlen,drawtext@textsize
  5928  0012DC  C012  F0ED         	movff	?_strlen+1,drawtext@textsize+1
  5929                           
  5930                           ;ST7735_TFT.c: 481: for(i = 0; i < textsize; i++){
  5931  0012E0  0E00               	movlw	0
  5932  0012E2  0100               	movlb	0	; () banked
  5933  0012E4  6FEF               	movwf	(drawtext@i+1)& (0+255),b
  5934  0012E6  0E00               	movlw	0
  5935  0012E8  6FEE               	movwf	drawtext@i& (0+255),b
  5936  0012EA  D064               	goto	l6302
  5937  0012EC                     l6276:
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;ST7735_TFT.c: 482: if(wrap && ((cursor_x + size * 5) > 128)){
  5941  0012EC  506F               	movf	_wrap,w,c
  5942  0012EE  B4D8               	btfsc	status,2,c
  5943  0012F0  D034               	goto	l6292
  5944                           
  5945                           ; BSR set to: 0
  5946  0012F2  5040               	movf	drawtext@size,w,c
  5947  0012F4  0D05               	mullw	5
  5948  0012F6  0100               	movlb	0	; () banked
  5949  0012F8  51F1               	movf	drawtext@cursor_x& (0+255),w,b
  5950  0012FA  6E41               	movwf	??_drawtext& (0+255),c
  5951  0012FC  6A42               	clrf	(??_drawtext+1)& (0+255),c
  5952  0012FE  50F3               	movf	prodl,w,c
  5953  001300  2641               	addwf	??_drawtext,f,c
  5954  001302  50F4               	movf	prodh,w,c
  5955  001304  2242               	addwfc	??_drawtext+1,f,c
  5956  001306  BE42               	btfsc	??_drawtext+1,7,c
  5957  001308  D028               	goto	l6292
  5958  00130A  5042               	movf	??_drawtext+1,w,c
  5959  00130C  E104               	bnz	u4900
  5960  00130E  0E81               	movlw	129
  5961  001310  5C41               	subwf	??_drawtext,w,c
  5962  001312  A0D8               	btfss	status,0,c
  5963  001314  D022               	goto	l6292
  5964  001316                     u4900:
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;ST7735_TFT.c: 483: cursor_x = 0;
  5968  001316  0E00               	movlw	0
  5969  001318  0100               	movlb	0	; () banked
  5970  00131A  6FF1               	movwf	drawtext@cursor_x& (0+255),b
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;ST7735_TFT.c: 484: cursor_y = cursor_y + size * 7 + 3 ;
  5974  00131C  5040               	movf	drawtext@size,w,c
  5975  00131E  0D07               	mullw	7
  5976  001320  50F3               	movf	prodl,w,c
  5977  001322  0100               	movlb	0	; () banked
  5978  001324  25F0               	addwf	drawtext@cursor_y& (0+255),w,b
  5979  001326  0F03               	addlw	3
  5980  001328  0100               	movlb	0	; () banked
  5981  00132A  6FF0               	movwf	drawtext@cursor_y& (0+255),b
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;ST7735_TFT.c: 485: if(cursor_y > 160) cursor_y = 160;
  5985  00132C  0EA0               	movlw	160
  5986  00132E  0100               	movlb	0	; () banked
  5987  001330  65F0               	cpfsgt	drawtext@cursor_y& (0+255),b
  5988  001332  D004               	goto	l6288
  5989                           
  5990                           ; BSR set to: 0
  5991  001334  0EA0               	movlw	160
  5992  001336  0100               	movlb	0	; () banked
  5993  001338  6FF0               	movwf	drawtext@cursor_y& (0+255),b
  5994  00133A  D000               	goto	l6288
  5995  00133C                     l6288:
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;ST7735_TFT.c: 486: if(_text[i] == 0x20) goto _skip; }
  5999  00133C  0100               	movlb	0	; () banked
  6000  00133E  51EE               	movf	drawtext@i& (0+255),w,b
  6001  001340  243A               	addwf	drawtext@_text,w,c
  6002  001342  6ED9               	movwf	fsr2l,c
  6003  001344  0100               	movlb	0	; () banked
  6004  001346  51EF               	movf	(drawtext@i+1)& (0+255),w,b
  6005  001348  203B               	addwfc	drawtext@_text+1,w,c
  6006  00134A  6EDA               	movwf	fsr2h,c
  6007  00134C  0E20               	movlw	32
  6008  00134E  18DE               	xorwf	postinc2,w,c
  6009  001350  B4D8               	btfsc	status,2,c
  6010  001352  D02C               	goto	l6300
  6011  001354  D002               	goto	l6292
  6012                           
  6013                           ; BSR set to: 0
  6014  001356  D02A               	goto	l6300
  6015                           
  6016                           ; BSR set to: 0
  6017  001358  D000               	goto	l6292
  6018  00135A                     l6292:
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;ST7735_TFT.c: 487: drawChar(cursor_x, cursor_y, _text[i], color, bg, size);
  6022  00135A  C0F0  F02E         	movff	drawtext@cursor_y,drawChar@y
  6023  00135E  0100               	movlb	0	; () banked
  6024  001360  51EE               	movf	drawtext@i& (0+255),w,b
  6025  001362  243A               	addwf	drawtext@_text,w,c
  6026  001364  6ED9               	movwf	fsr2l,c
  6027  001366  0100               	movlb	0	; () banked
  6028  001368  51EF               	movf	(drawtext@i+1)& (0+255),w,b
  6029  00136A  203B               	addwfc	drawtext@_text+1,w,c
  6030  00136C  6EDA               	movwf	fsr2h,c
  6031  00136E  50DF               	movf	indf2,w,c
  6032  001370  6E2F               	movwf	drawChar@c,c
  6033  001372  C03C  F030         	movff	drawtext@color,drawChar@color
  6034  001376  C03D  F031         	movff	drawtext@color+1,drawChar@color+1
  6035  00137A  C03E  F032         	movff	drawtext@bg,drawChar@bg
  6036  00137E  C03F  F033         	movff	drawtext@bg+1,drawChar@bg+1
  6037  001382  C040  F034         	movff	drawtext@size,drawChar@size
  6038  001386  0100               	movlb	0	; () banked
  6039  001388  51F1               	movf	drawtext@cursor_x& (0+255),w,b
  6040  00138A  EC2D  F008         	call	_drawChar
  6041                           
  6042                           ;ST7735_TFT.c: 488: cursor_x = cursor_x + size * 6;
  6043  00138E  5040               	movf	drawtext@size,w,c
  6044  001390  0D06               	mullw	6
  6045  001392  50F3               	movf	prodl,w,c
  6046  001394  0100               	movlb	0	; () banked
  6047  001396  25F1               	addwf	drawtext@cursor_x& (0+255),w,b
  6048  001398  0100               	movlb	0	; () banked
  6049  00139A  6FF1               	movwf	drawtext@cursor_x& (0+255),b
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;ST7735_TFT.c: 489: if(cursor_x > 128) cursor_x = 128;
  6053  00139C  0E80               	movlw	128
  6054  00139E  0100               	movlb	0	; () banked
  6055  0013A0  65F1               	cpfsgt	drawtext@cursor_x& (0+255),b
  6056  0013A2  D004               	goto	l6300
  6057                           
  6058                           ; BSR set to: 0
  6059  0013A4  0E80               	movlw	128
  6060  0013A6  0100               	movlb	0	; () banked
  6061  0013A8  6FF1               	movwf	drawtext@cursor_x& (0+255),b
  6062                           
  6063                           ; BSR set to: 0
  6064  0013AA  D000               	goto	l6300
  6065  0013AC                     l6300:
  6066                           
  6067                           ; BSR set to: 0
  6068  0013AC  0100               	movlb	0	; () banked
  6069  0013AE  4BEE               	infsnz	drawtext@i& (0+255),f,b
  6070  0013B0  2BEF               	incf	(drawtext@i+1)& (0+255),f,b
  6071  0013B2  D000               	goto	l6302
  6072  0013B4                     l6302:
  6073                           
  6074                           ; BSR set to: 0
  6075  0013B4  0100               	movlb	0	; () banked
  6076  0013B6  51EC               	movf	drawtext@textsize& (0+255),w,b
  6077  0013B8  0100               	movlb	0	; () banked
  6078  0013BA  5DEE               	subwf	drawtext@i& (0+255),w,b
  6079  0013BC  0100               	movlb	0	; () banked
  6080  0013BE  51ED               	movf	(drawtext@textsize+1)& (0+255),w,b
  6081  0013C0  0100               	movlb	0	; () banked
  6082  0013C2  59EF               	subwfb	(drawtext@i+1)& (0+255),w,b
  6083  0013C4  A0D8               	btfss	status,0,c
  6084  0013C6  D792               	goto	l6276
  6085                           
  6086                           ; BSR set to: 0
  6087                           
  6088                           ; BSR set to: 0
  6089  0013C8  0012               	return		;funcret
  6090  0013CA                     __end_of_drawtext:
  6091                           	opt stack 0
  6092                           tblptru	equ	0xFF8
  6093                           tblptrh	equ	0xFF7
  6094                           tblptrl	equ	0xFF6
  6095                           tablat	equ	0xFF5
  6096                           prodh	equ	0xFF4
  6097                           prodl	equ	0xFF3
  6098                           intcon	equ	0xFF2
  6099                           intcon2	equ	0xFF1
  6100                           postinc0	equ	0xFEE
  6101                           wreg	equ	0xFE8
  6102                           postdec1	equ	0xFE5
  6103                           fsr1l	equ	0xFE1
  6104                           indf2	equ	0xFDF
  6105                           postinc2	equ	0xFDE
  6106                           postdec2	equ	0xFDD
  6107                           fsr2h	equ	0xFDA
  6108                           fsr2l	equ	0xFD9
  6109                           status	equ	0xFD8
  6110                           
  6111 ;; *************** function _strlen *****************
  6112 ;; Defined at:
  6113 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\strlen.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  s               2   16[COMRAM] PTR const unsigned char 
  6116 ;;		 -> NULL(0), RPM_Txt(5), DC_Txt(4), Fan_SW_Txt(4), 
  6117 ;;		 -> date(9), time(9), tempF(4), tempC(4), 
  6118 ;;		 -> buffer(33), 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  cp              2   20[COMRAM] PTR const unsigned char 
  6121 ;;		 -> NULL(0), RPM_Txt(5), DC_Txt(4), Fan_SW_Txt(4), 
  6122 ;;		 -> date(9), time(9), tempF(4), tempC(4), 
  6123 ;;		 -> buffer(33), 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  2   16[COMRAM] unsigned int 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;Total ram usage:        6 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    3
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_drawtext
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text18
  6148  002120                     __ptext18:
  6149                           	opt stack 0
  6150  002120                     _strlen:
  6151                           	opt stack 25
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;incstack = 0
  6155  002120  C011  F015         	movff	strlen@s,strlen@cp
  6156  002124  C012  F016         	movff	strlen@s+1,strlen@cp+1
  6157  002128  D003               	goto	l6062
  6158  00212A                     l6060:
  6159  00212A  4A15               	infsnz	strlen@cp,f,c
  6160  00212C  2A16               	incf	strlen@cp+1,f,c
  6161  00212E  D000               	goto	l6062
  6162  002130                     l6062:
  6163  002130  C015  FFD9         	movff	strlen@cp,fsr2l
  6164  002134  C016  FFDA         	movff	strlen@cp+1,fsr2h
  6165  002138  50DF               	movf	indf2,w,c
  6166  00213A  A4D8               	btfss	status,2,c
  6167  00213C  D7F6               	goto	l6060
  6168  00213E  C011  F013         	movff	strlen@s,??_strlen
  6169  002142  C012  F014         	movff	strlen@s+1,??_strlen+1
  6170  002146  1E13               	comf	??_strlen,f,c
  6171  002148  1E14               	comf	??_strlen+1,f,c
  6172  00214A  4A13               	infsnz	??_strlen,f,c
  6173  00214C  2A14               	incf	??_strlen+1,f,c
  6174  00214E  5015               	movf	strlen@cp,w,c
  6175  002150  2413               	addwf	??_strlen,w,c
  6176  002152  6E11               	movwf	?_strlen,c
  6177  002154  5016               	movf	strlen@cp+1,w,c
  6178  002156  2014               	addwfc	??_strlen+1,w,c
  6179  002158  6E12               	movwf	?_strlen+1,c
  6180  00215A  D000               	goto	l1436
  6181  00215C                     l1436:
  6182  00215C  0012               	return		;funcret
  6183  00215E                     __end_of_strlen:
  6184                           	opt stack 0
  6185                           tblptru	equ	0xFF8
  6186                           tblptrh	equ	0xFF7
  6187                           tblptrl	equ	0xFF6
  6188                           tablat	equ	0xFF5
  6189                           prodh	equ	0xFF4
  6190                           prodl	equ	0xFF3
  6191                           intcon	equ	0xFF2
  6192                           intcon2	equ	0xFF1
  6193                           postinc0	equ	0xFEE
  6194                           wreg	equ	0xFE8
  6195                           postdec1	equ	0xFE5
  6196                           fsr1l	equ	0xFE1
  6197                           indf2	equ	0xFDF
  6198                           postinc2	equ	0xFDE
  6199                           postdec2	equ	0xFDD
  6200                           fsr2h	equ	0xFDA
  6201                           fsr2l	equ	0xFD9
  6202                           status	equ	0xFD8
  6203                           
  6204 ;; *************** function _drawChar *****************
  6205 ;; Defined at:
  6206 ;;		line 448 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  x               1    wreg     unsigned char 
  6209 ;;  y               1   45[COMRAM] unsigned char 
  6210 ;;  c               1   46[COMRAM] unsigned char 
  6211 ;;  color           2   47[COMRAM] unsigned int 
  6212 ;;  bg              2   49[COMRAM] unsigned int 
  6213 ;;  size            1   51[COMRAM] unsigned char 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  x               1   53[COMRAM] unsigned char 
  6216 ;;  line            1   52[COMRAM] unsigned char 
  6217 ;;  i               1   55[COMRAM] unsigned char 
  6218 ;;  j               1   54[COMRAM] unsigned char 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;		None               void
  6221 ;; Registers used:
  6222 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6228 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6231 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6232 ;;Total ram usage:       11 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    8
  6235 ;; This function calls:
  6236 ;;		___wmul
  6237 ;;		_drawPixel
  6238 ;;		_fillRect
  6239 ;; This function is called by:
  6240 ;;		_drawtext
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text19
  6245  00105A                     __ptext19:
  6246                           	opt stack 0
  6247  00105A                     _drawChar:
  6248                           	opt stack 20
  6249                           
  6250                           ;incstack = 0
  6251                           ;drawChar@x stored from wreg
  6252  00105A  6E36               	movwf	drawChar@x,c
  6253                           
  6254                           ;ST7735_TFT.c: 450: char i, j;
  6255                           ;ST7735_TFT.c: 451: if((x >= 128) || (y >= 160))
  6256  00105C  0E80               	movlw	128
  6257  00105E  6036               	cpfslt	drawChar@x,c
  6258  001060  D0A6               	goto	l361
  6259  001062  0E9F               	movlw	159
  6260  001064  642E               	cpfsgt	drawChar@y,c
  6261  001066  D001               	goto	l6008
  6262                           
  6263                           ;ST7735_TFT.c: 452: return;
  6264  001068  D0A2               	goto	l361
  6265  00106A                     l6008:
  6266                           
  6267                           ;ST7735_TFT.c: 453: if(size < 1) size = 1;
  6268  00106A  5034               	movf	drawChar@size,w,c
  6269  00106C  A4D8               	btfss	status,2,c
  6270  00106E  D003               	goto	l6012
  6271  001070  0E01               	movlw	1
  6272  001072  6E34               	movwf	drawChar@size,c
  6273  001074  D000               	goto	l6012
  6274  001076                     l6012:
  6275                           
  6276                           ;ST7735_TFT.c: 454: if((c < ' ') || (c > '~'))
  6277  001076  0E1F               	movlw	31
  6278  001078  642F               	cpfsgt	drawChar@c,c
  6279  00107A  D004               	goto	l6016
  6280  00107C  0E7E               	movlw	126
  6281  00107E  642F               	cpfsgt	drawChar@c,c
  6282  001080  D003               	goto	l363
  6283  001082  D000               	goto	l6016
  6284  001084                     l6016:
  6285                           
  6286                           ;ST7735_TFT.c: 455: c = '?';
  6287  001084  0E3F               	movlw	63
  6288  001086  6E2F               	movwf	drawChar@c,c
  6289  001088                     l363:
  6290                           
  6291                           ;ST7735_TFT.c: 456: for(i=0; i<5; i++ ) {
  6292  001088  0E00               	movlw	0
  6293  00108A  6E38               	movwf	drawChar@i,c
  6294  00108C                     l6018:
  6295  00108C  0E04               	movlw	4
  6296  00108E  6438               	cpfsgt	drawChar@i,c
  6297  001090  D001               	goto	l6022
  6298  001092  D08D               	goto	l361
  6299  001094                     l6022:
  6300                           
  6301                           ;ST7735_TFT.c: 457: unsigned char line;
  6302                           ;ST7735_TFT.c: 458: if(c < 'S')
  6303  001094  0E53               	movlw	83
  6304  001096  602F               	cpfslt	drawChar@c,c
  6305  001098  D015               	goto	l6026
  6306                           
  6307                           ;ST7735_TFT.c: 459: line = font[(c - 32)*5 + i];
  6308  00109A  0EE0               	movlw	224
  6309  00109C  242F               	addwf	drawChar@c,w,c
  6310  00109E  6E11               	movwf	___wmul@multiplier,c
  6311  0010A0  6A12               	clrf	___wmul@multiplier+1,c
  6312  0010A2  0EFF               	movlw	255
  6313  0010A4  2212               	addwfc	___wmul@multiplier+1,f,c
  6314  0010A6  0E00               	movlw	0
  6315  0010A8  6E14               	movwf	___wmul@multiplicand+1,c
  6316  0010AA  0E05               	movlw	5
  6317  0010AC  6E13               	movwf	___wmul@multiplicand,c
  6318  0010AE  EC51  F011         	call	___wmul	;wreg free
  6319  0010B2  5038               	movf	drawChar@i,w,c
  6320  0010B4  2611               	addwf	?___wmul,f,c
  6321  0010B6  0E00               	movlw	0
  6322  0010B8  2212               	addwfc	?___wmul+1,f,c
  6323  0010BA  0EBD               	movlw	low _font
  6324  0010BC  2411               	addwf	?___wmul,w,c
  6325  0010BE  6EF6               	movwf	tblptrl,c
  6326  0010C0  0EFC               	movlw	high _font
  6327  0010C2  D014               	goto	L6
  6328  0010C4                     l6026:
  6329                           
  6330                           ;ST7735_TFT.c: 460: else
  6331                           ;ST7735_TFT.c: 461: line = font2[(c - 'S')*5 + i];
  6332  0010C4  0EAD               	movlw	173
  6333  0010C6  242F               	addwf	drawChar@c,w,c
  6334  0010C8  6E11               	movwf	___wmul@multiplier,c
  6335  0010CA  6A12               	clrf	___wmul@multiplier+1,c
  6336  0010CC  0EFF               	movlw	255
  6337  0010CE  2212               	addwfc	___wmul@multiplier+1,f,c
  6338  0010D0  0E00               	movlw	0
  6339  0010D2  6E14               	movwf	___wmul@multiplicand+1,c
  6340  0010D4  0E05               	movlw	5
  6341  0010D6  6E13               	movwf	___wmul@multiplicand,c
  6342  0010D8  EC51  F011         	call	___wmul	;wreg free
  6343  0010DC  5038               	movf	drawChar@i,w,c
  6344  0010DE  2611               	addwf	?___wmul,f,c
  6345  0010E0  0E00               	movlw	0
  6346  0010E2  2212               	addwfc	?___wmul+1,f,c
  6347  0010E4  0EBC               	movlw	low _font2
  6348  0010E6  2411               	addwf	?___wmul,w,c
  6349  0010E8  6EF6               	movwf	tblptrl,c
  6350  0010EA  0EFD               	movlw	high _font2
  6351  0010EC                     L6:
  6352  0010EC  2012               	addwfc	?___wmul+1,w,c
  6353  0010EE  6EF7               	movwf	tblptrh,c
  6354  0010F0                     	if	0	;There are less than 3 active tblptr bytes
  6355  0010F0                     	endif
  6356  0010F0  0008               	tblrd		*
  6357  0010F2  CFF5 F035          	movff	tablat,drawChar@line
  6358  0010F6  D000               	goto	l6028
  6359  0010F8                     l6028:
  6360                           
  6361                           ;ST7735_TFT.c: 462: for(j=0; j<7; j++, line >>= 1) {
  6362  0010F8  0E00               	movlw	0
  6363  0010FA  6E37               	movwf	drawChar@j,c
  6364  0010FC                     l6030:
  6365  0010FC  0E06               	movlw	6
  6366  0010FE  6437               	cpfsgt	drawChar@j,c
  6367  001100  D001               	goto	l370
  6368  001102  D053               	goto	l6054
  6369  001104                     l370:
  6370                           
  6371                           ;ST7735_TFT.c: 463: if(line & 0x01) {
  6372  001104  A035               	btfss	drawChar@line,0,c
  6373  001106  D023               	goto	l6040
  6374                           
  6375                           ;ST7735_TFT.c: 464: if(size == 1) drawPixel(x+i, y+j, color);
  6376  001108  0434               	decf	drawChar@size,w,c
  6377  00110A  A4D8               	btfss	status,2,c
  6378  00110C  D00C               	goto	l6038
  6379  00110E  502E               	movf	drawChar@y,w,c
  6380  001110  2437               	addwf	drawChar@j,w,c
  6381  001112  6E18               	movwf	drawPixel@y,c
  6382  001114  C030  F019         	movff	drawChar@color,drawPixel@color
  6383  001118  C031  F01A         	movff	drawChar@color+1,drawPixel@color+1
  6384  00111C  5036               	movf	drawChar@x,w,c
  6385  00111E  2438               	addwf	drawChar@i,w,c
  6386  001120  EC24  F011         	call	_drawPixel
  6387  001124  D03E               	goto	l6048
  6388  001126                     l6038:
  6389                           
  6390                           ;ST7735_TFT.c: 465: else fillRect(x+(i*size), y+(j*size), size, size, color);
  6391  001126  5037               	movf	drawChar@j,w,c
  6392  001128  0234               	mulwf	drawChar@size,c
  6393  00112A  50F3               	movf	prodl,w,c
  6394  00112C  242E               	addwf	drawChar@y,w,c
  6395  00112E  6E23               	movwf	fillRect@y,c
  6396  001130  C034  F024         	movff	drawChar@size,fillRect@w
  6397  001134  C034  F025         	movff	drawChar@size,fillRect@h
  6398  001138  C030  F026         	movff	drawChar@color,fillRect@color
  6399  00113C  C031  F027         	movff	drawChar@color+1,fillRect@color+1
  6400  001140  5038               	movf	drawChar@i,w,c
  6401  001142  0234               	mulwf	drawChar@size,c
  6402  001144  50F3               	movf	prodl,w,c
  6403  001146  2436               	addwf	drawChar@x,w,c
  6404  001148  ECFF  F00F         	call	_fillRect
  6405                           
  6406                           ;ST7735_TFT.c: 466: }
  6407  00114C  D02A               	goto	l6048
  6408  00114E                     l6040:
  6409                           
  6410                           ;ST7735_TFT.c: 467: else if(bg != color) {
  6411  00114E  5030               	movf	drawChar@color,w,c
  6412  001150  1832               	xorwf	drawChar@bg,w,c
  6413  001152  E104               	bnz	u4610
  6414  001154  5031               	movf	drawChar@color+1,w,c
  6415  001156  1833               	xorwf	drawChar@bg+1,w,c
  6416  001158  B4D8               	btfsc	status,2,c
  6417  00115A  D023               	goto	l6048
  6418  00115C                     u4610:
  6419                           
  6420                           ;ST7735_TFT.c: 468: if(size == 1) drawPixel(x+i, y+j, bg);
  6421  00115C  0434               	decf	drawChar@size,w,c
  6422  00115E  A4D8               	btfss	status,2,c
  6423  001160  D00C               	goto	l6046
  6424  001162  502E               	movf	drawChar@y,w,c
  6425  001164  2437               	addwf	drawChar@j,w,c
  6426  001166  6E18               	movwf	drawPixel@y,c
  6427  001168  C032  F019         	movff	drawChar@bg,drawPixel@color
  6428  00116C  C033  F01A         	movff	drawChar@bg+1,drawPixel@color+1
  6429  001170  5036               	movf	drawChar@x,w,c
  6430  001172  2438               	addwf	drawChar@i,w,c
  6431  001174  EC24  F011         	call	_drawPixel
  6432  001178  D014               	goto	l6048
  6433  00117A                     l6046:
  6434                           
  6435                           ;ST7735_TFT.c: 469: else fillRect(x+i*size, y+j*size, size, size, bg);
  6436  00117A  5037               	movf	drawChar@j,w,c
  6437  00117C  0234               	mulwf	drawChar@size,c
  6438  00117E  50F3               	movf	prodl,w,c
  6439  001180  242E               	addwf	drawChar@y,w,c
  6440  001182  6E23               	movwf	fillRect@y,c
  6441  001184  C034  F024         	movff	drawChar@size,fillRect@w
  6442  001188  C034  F025         	movff	drawChar@size,fillRect@h
  6443  00118C  C032  F026         	movff	drawChar@bg,fillRect@color
  6444  001190  C033  F027         	movff	drawChar@bg+1,fillRect@color+1
  6445  001194  5038               	movf	drawChar@i,w,c
  6446  001196  0234               	mulwf	drawChar@size,c
  6447  001198  50F3               	movf	prodl,w,c
  6448  00119A  2436               	addwf	drawChar@x,w,c
  6449  00119C  ECFF  F00F         	call	_fillRect
  6450  0011A0  D000               	goto	l6048
  6451  0011A2                     l6048:
  6452  0011A2  2A37               	incf	drawChar@j,f,c
  6453  0011A4  90D8               	bcf	status,0,c
  6454  0011A6  3235               	rrcf	drawChar@line,f,c
  6455  0011A8  D7A9               	goto	l6030
  6456  0011AA                     l6054:
  6457  0011AA  2A38               	incf	drawChar@i,f,c
  6458  0011AC  D76F               	goto	l6018
  6459  0011AE                     l361:
  6460  0011AE  0012               	return		;funcret
  6461  0011B0                     __end_of_drawChar:
  6462                           	opt stack 0
  6463                           tblptru	equ	0xFF8
  6464                           tblptrh	equ	0xFF7
  6465                           tblptrl	equ	0xFF6
  6466                           tablat	equ	0xFF5
  6467                           prodh	equ	0xFF4
  6468                           prodl	equ	0xFF3
  6469                           intcon	equ	0xFF2
  6470                           intcon2	equ	0xFF1
  6471                           postinc0	equ	0xFEE
  6472                           wreg	equ	0xFE8
  6473                           postdec1	equ	0xFE5
  6474                           fsr1l	equ	0xFE1
  6475                           indf2	equ	0xFDF
  6476                           postinc2	equ	0xFDE
  6477                           postdec2	equ	0xFDD
  6478                           fsr2h	equ	0xFDA
  6479                           fsr2l	equ	0xFD9
  6480                           status	equ	0xFD8
  6481                           
  6482 ;; *************** function _fillRect *****************
  6483 ;; Defined at:
  6484 ;;		line 438 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  x               1    wreg     unsigned char 
  6487 ;;  y               1   34[COMRAM] unsigned char 
  6488 ;;  w               1   35[COMRAM] unsigned char 
  6489 ;;  h               1   36[COMRAM] unsigned char 
  6490 ;;  color           2   37[COMRAM] unsigned int 
  6491 ;; Auto vars:     Size  Location     Type
  6492 ;;  x               1   42[COMRAM] unsigned char 
  6493 ;;  i               2   43[COMRAM] int 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;		None               void
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6503 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;Total ram usage:       11 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    7
  6510 ;; This function calls:
  6511 ;;		_drawFastVLine
  6512 ;; This function is called by:
  6513 ;;		_drawChar
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text20
  6518  001FFE                     __ptext20:
  6519                           	opt stack 0
  6520  001FFE                     _fillRect:
  6521                           	opt stack 20
  6522                           
  6523                           ;incstack = 0
  6524                           ;fillRect@x stored from wreg
  6525  001FFE  6E2B               	movwf	fillRect@x,c
  6526                           
  6527                           ;ST7735_TFT.c: 440: signed int i;
  6528                           ;ST7735_TFT.c: 442: for (i = x; i < x + w; i++)
  6529  002000  C02B  F02C         	movff	fillRect@x,fillRect@i
  6530  002004  6A2D               	clrf	fillRect@i+1,c
  6531  002006  D00E               	goto	l5528
  6532  002008                     l5524:
  6533                           
  6534                           ;ST7735_TFT.c: 443: {
  6535                           ;ST7735_TFT.c: 444: drawFastVLine(i, y, h, color);
  6536  002008  C023  F018         	movff	fillRect@y,drawFastVLine@y
  6537  00200C  C025  F019         	movff	fillRect@h,drawFastVLine@h
  6538  002010  C026  F01A         	movff	fillRect@color,drawFastVLine@color
  6539  002014  C027  F01B         	movff	fillRect@color+1,drawFastVLine@color+1
  6540  002018  502C               	movf	fillRect@i,w,c
  6541  00201A  EC7B  F00D         	call	_drawFastVLine
  6542  00201E  4A2C               	infsnz	fillRect@i,f,c
  6543  002020  2A2D               	incf	fillRect@i+1,f,c
  6544  002022  D000               	goto	l5528
  6545  002024                     l5528:
  6546  002024  5024               	movf	fillRect@w,w,c
  6547  002026  C02B  F028         	movff	fillRect@x,??_fillRect
  6548  00202A  6A29               	clrf	(??_fillRect+1)& (0+255),c
  6549  00202C  2628               	addwf	??_fillRect,f,c
  6550  00202E  0E00               	movlw	0
  6551  002030  2229               	addwfc	??_fillRect+1,f,c
  6552  002032  5028               	movf	??_fillRect,w,c
  6553  002034  5C2C               	subwf	fillRect@i,w,c
  6554  002036  502D               	movf	fillRect@i+1,w,c
  6555  002038  0A80               	xorlw	128
  6556  00203A  6E2A               	movwf	(??_fillRect+2)& (0+255),c
  6557  00203C  5029               	movf	??_fillRect+1,w,c
  6558  00203E  0A80               	xorlw	128
  6559  002040  582A               	subwfb	(??_fillRect+2)& (0+255),w,c
  6560  002042  A0D8               	btfss	status,0,c
  6561  002044  D7E1               	goto	l5524
  6562  002046  0012               	return		;funcret
  6563  002048                     __end_of_fillRect:
  6564                           	opt stack 0
  6565                           tblptru	equ	0xFF8
  6566                           tblptrh	equ	0xFF7
  6567                           tblptrl	equ	0xFF6
  6568                           tablat	equ	0xFF5
  6569                           prodh	equ	0xFF4
  6570                           prodl	equ	0xFF3
  6571                           intcon	equ	0xFF2
  6572                           intcon2	equ	0xFF1
  6573                           postinc0	equ	0xFEE
  6574                           wreg	equ	0xFE8
  6575                           postdec1	equ	0xFE5
  6576                           fsr1l	equ	0xFE1
  6577                           indf2	equ	0xFDF
  6578                           postinc2	equ	0xFDE
  6579                           postdec2	equ	0xFDD
  6580                           fsr2h	equ	0xFDA
  6581                           fsr2l	equ	0xFD9
  6582                           status	equ	0xFD8
  6583                           
  6584 ;; *************** function _drawFastVLine *****************
  6585 ;; Defined at:
  6586 ;;		line 417 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  x               1    wreg     unsigned char 
  6589 ;;  y               1   23[COMRAM] unsigned char 
  6590 ;;  h               1   24[COMRAM] unsigned char 
  6591 ;;  color           2   25[COMRAM] unsigned int 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  x               1   33[COMRAM] unsigned char 
  6594 ;;  lo              1   32[COMRAM] unsigned char 
  6595 ;;  hi              1   31[COMRAM] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;		None               void
  6598 ;; Registers used:
  6599 ;;		wreg, status,2, status,0, cstack
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;Total ram usage:       11 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; Hardware stack levels required when called:    6
  6612 ;; This function calls:
  6613 ;;		_setAddrWindow
  6614 ;;		_spiwrite
  6615 ;; This function is called by:
  6616 ;;		_fillRect
  6617 ;;		_fillCircleHelper
  6618 ;;		_fillCircle
  6619 ;;		_drawRect
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text21
  6624  001AF6                     __ptext21:
  6625                           	opt stack 0
  6626  001AF6                     _drawFastVLine:
  6627                           	opt stack 20
  6628                           
  6629                           ;incstack = 0
  6630                           ;drawFastVLine@x stored from wreg
  6631  001AF6  6E22               	movwf	drawFastVLine@x,c
  6632                           
  6633                           ;ST7735_TFT.c: 419: unsigned char hi, lo;
  6634                           ;ST7735_TFT.c: 420: if((x >= 128) || (y >= 160))
  6635  001AF8  0E80               	movlw	128
  6636  001AFA  6022               	cpfslt	drawFastVLine@x,c
  6637  001AFC  D03F               	goto	l345
  6638  001AFE  0E9F               	movlw	159
  6639  001B00  6418               	cpfsgt	drawFastVLine@y,c
  6640  001B02  D001               	goto	l5398
  6641                           
  6642                           ;ST7735_TFT.c: 421: return;
  6643  001B04  D03B               	goto	l345
  6644  001B06                     l5398:
  6645                           
  6646                           ;ST7735_TFT.c: 422: if((y + h - 1) >= 160)
  6647  001B06  0EFF               	movlw	255
  6648  001B08  6E1C               	movwf	??_drawFastVLine& (0+255),c
  6649  001B0A  0EFF               	movlw	255
  6650  001B0C  6E1D               	movwf	(??_drawFastVLine+1)& (0+255),c
  6651  001B0E  5019               	movf	drawFastVLine@h,w,c
  6652  001B10  C018  F01E         	movff	drawFastVLine@y,??_drawFastVLine+2
  6653  001B14  6A1F               	clrf	(??_drawFastVLine+3)& (0+255),c
  6654  001B16  261E               	addwf	??_drawFastVLine+2,f,c
  6655  001B18  0E00               	movlw	0
  6656  001B1A  221F               	addwfc	??_drawFastVLine+3,f,c
  6657  001B1C  501C               	movf	??_drawFastVLine,w,c
  6658  001B1E  261E               	addwf	??_drawFastVLine+2,f,c
  6659  001B20  501D               	movf	??_drawFastVLine+1,w,c
  6660  001B22  221F               	addwfc	??_drawFastVLine+3,f,c
  6661  001B24  BE1F               	btfsc	??_drawFastVLine+3,7,c
  6662  001B26  D00B               	goto	l5402
  6663  001B28  501F               	movf	??_drawFastVLine+3,w,c
  6664  001B2A  E104               	bnz	u3800
  6665  001B2C  0EA0               	movlw	160
  6666  001B2E  5C1E               	subwf	??_drawFastVLine+2,w,c
  6667  001B30  A0D8               	btfss	status,0,c
  6668  001B32  D005               	goto	l5402
  6669  001B34                     u3800:
  6670                           
  6671                           ;ST7735_TFT.c: 423: h = 160 - y;
  6672  001B34  5018               	movf	drawFastVLine@y,w,c
  6673  001B36  0800               	sublw	0
  6674  001B38  0FA0               	addlw	160
  6675  001B3A  6E19               	movwf	drawFastVLine@h,c
  6676  001B3C  D000               	goto	l5402
  6677  001B3E                     l5402:
  6678                           
  6679                           ;ST7735_TFT.c: 424: hi = color >> 8; lo = color;
  6680  001B3E  501B               	movf	drawFastVLine@color+1,w,c
  6681  001B40  6E20               	movwf	drawFastVLine@hi,c
  6682  001B42  C01A  F021         	movff	drawFastVLine@color,drawFastVLine@lo
  6683                           
  6684                           ;ST7735_TFT.c: 425: setAddrWindow(x, y, x, y + h - 1);
  6685  001B46  C018  F014         	movff	drawFastVLine@y,setAddrWindow@y0
  6686  001B4A  C022  F015         	movff	drawFastVLine@x,setAddrWindow@x1
  6687  001B4E  5018               	movf	drawFastVLine@y,w,c
  6688  001B50  2419               	addwf	drawFastVLine@h,w,c
  6689  001B52  6E1C               	movwf	??_drawFastVLine& (0+255),c
  6690  001B54  041C               	decf	??_drawFastVLine,w,c
  6691  001B56  6E16               	movwf	setAddrWindow@y1,c
  6692  001B58  5022               	movf	drawFastVLine@x,w,c
  6693  001B5A  ECB2  F00F         	call	_setAddrWindow
  6694                           
  6695                           ;ST7735_TFT.c: 426: PORTBbits.RB0 = 1;
  6696  001B5E  8081               	bsf	3969,0,c	;volatile
  6697                           
  6698                           ;ST7735_TFT.c: 427: PORTBbits.RB5 = 0;
  6699  001B60  9A81               	bcf	3969,5,c	;volatile
  6700                           
  6701                           ;ST7735_TFT.c: 429: while (h--) {
  6702  001B62  D007               	goto	l5414
  6703  001B64                     l5412:
  6704                           
  6705                           ;ST7735_TFT.c: 430: spiwrite(hi);
  6706  001B64  5020               	movf	drawFastVLine@hi,w,c
  6707  001B66  EC3A  F012         	call	_spiwrite
  6708                           
  6709                           ;ST7735_TFT.c: 431: spiwrite(lo);
  6710  001B6A  5021               	movf	drawFastVLine@lo,w,c
  6711  001B6C  EC3A  F012         	call	_spiwrite
  6712  001B70  D000               	goto	l5414
  6713  001B72                     l5414:
  6714  001B72  0619               	decf	drawFastVLine@h,f,c
  6715  001B74  2819               	incf	drawFastVLine@h,w,c
  6716  001B76  A4D8               	btfss	status,2,c
  6717  001B78  D7F5               	goto	l5412
  6718                           
  6719                           ;ST7735_TFT.c: 432: }
  6720                           ;ST7735_TFT.c: 433: PORTBbits.RB5 = 1;
  6721  001B7A  8A81               	bsf	3969,5,c	;volatile
  6722  001B7C                     l345:
  6723  001B7C  0012               	return		;funcret
  6724  001B7E                     __end_of_drawFastVLine:
  6725                           	opt stack 0
  6726                           tblptru	equ	0xFF8
  6727                           tblptrh	equ	0xFF7
  6728                           tblptrl	equ	0xFF6
  6729                           tablat	equ	0xFF5
  6730                           prodh	equ	0xFF4
  6731                           prodl	equ	0xFF3
  6732                           intcon	equ	0xFF2
  6733                           intcon2	equ	0xFF1
  6734                           postinc0	equ	0xFEE
  6735                           wreg	equ	0xFE8
  6736                           postdec1	equ	0xFE5
  6737                           fsr1l	equ	0xFE1
  6738                           indf2	equ	0xFDF
  6739                           postinc2	equ	0xFDE
  6740                           postdec2	equ	0xFDD
  6741                           fsr2h	equ	0xFDA
  6742                           fsr2l	equ	0xFD9
  6743                           status	equ	0xFD8
  6744                           
  6745 ;; *************** function _drawCircle *****************
  6746 ;; Defined at:
  6747 ;;		line 529 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  x0              2   27[COMRAM] int 
  6750 ;;  y0              2   29[COMRAM] int 
  6751 ;;  r               2   31[COMRAM] int 
  6752 ;;  color           2   33[COMRAM] unsigned int 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  y               2   45[COMRAM] int 
  6755 ;;  x               2   43[COMRAM] int 
  6756 ;;  f               2   41[COMRAM] int 
  6757 ;;  ddF_y           2   39[COMRAM] int 
  6758 ;;  ddF_x           2   37[COMRAM] int 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;		None               void
  6761 ;; Registers used:
  6762 ;;		wreg, status,2, status,0, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6768 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;Total ram usage:       20 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:    7
  6775 ;; This function calls:
  6776 ;;		_drawPixel
  6777 ;; This function is called by:
  6778 ;;		_Initialize_Screen
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text22
  6783  000D44                     __ptext22:
  6784                           	opt stack 0
  6785  000D44                     _drawCircle:
  6786                           	opt stack 22
  6787                           
  6788                           ;ST7735_TFT.c: 531: signed int f, ddF_x, ddF_y, x, y;
  6789                           ;ST7735_TFT.c: 532: f = 1 - r, ddF_x = 1, ddF_y = -2 * r, x = 0, y = r;
  6790                           
  6791                           ;incstack = 0
  6792  000D44  C020  F024         	movff	drawCircle@r,??_drawCircle
  6793  000D48  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  6794  000D4C  1E24               	comf	??_drawCircle,f,c
  6795  000D4E  1E25               	comf	??_drawCircle+1,f,c
  6796  000D50  4A24               	infsnz	??_drawCircle,f,c
  6797  000D52  2A25               	incf	??_drawCircle+1,f,c
  6798  000D54  0E01               	movlw	1
  6799  000D56  2424               	addwf	??_drawCircle,w,c
  6800  000D58  6E2A               	movwf	drawCircle@f,c
  6801  000D5A  0E00               	movlw	0
  6802  000D5C  2025               	addwfc	??_drawCircle+1,w,c
  6803  000D5E  6E2B               	movwf	drawCircle@f+1,c
  6804  000D60  0E00               	movlw	0
  6805  000D62  6E27               	movwf	drawCircle@ddF_x+1,c
  6806  000D64  0E01               	movlw	1
  6807  000D66  6E26               	movwf	drawCircle@ddF_x,c
  6808  000D68  C020  F024         	movff	drawCircle@r,??_drawCircle
  6809  000D6C  C021  F025         	movff	drawCircle@r+1,??_drawCircle+1
  6810  000D70  90D8               	bcf	status,0,c
  6811  000D72  3624               	rlcf	??_drawCircle,f,c
  6812  000D74  3625               	rlcf	??_drawCircle+1,f,c
  6813  000D76  1E24               	comf	??_drawCircle,f,c
  6814  000D78  1E25               	comf	??_drawCircle+1,f,c
  6815  000D7A  4A24               	infsnz	??_drawCircle,f,c
  6816  000D7C  2A25               	incf	??_drawCircle+1,f,c
  6817  000D7E  C024  F028         	movff	??_drawCircle,drawCircle@ddF_y
  6818  000D82  C025  F029         	movff	??_drawCircle+1,drawCircle@ddF_y+1
  6819  000D86  0E00               	movlw	0
  6820  000D88  6E2D               	movwf	drawCircle@x+1,c
  6821  000D8A  0E00               	movlw	0
  6822  000D8C  6E2C               	movwf	drawCircle@x,c
  6823  000D8E  C020  F02E         	movff	drawCircle@r,drawCircle@y
  6824  000D92  C021  F02F         	movff	drawCircle@r+1,drawCircle@y+1
  6825                           
  6826                           ;ST7735_TFT.c: 533: drawPixel(x0 , y0 + r, color);
  6827  000D96  501E               	movf	drawCircle@y0,w,c
  6828  000D98  2420               	addwf	drawCircle@r,w,c
  6829  000D9A  6E18               	movwf	drawPixel@y,c
  6830  000D9C  C022  F019         	movff	drawCircle@color,drawPixel@color
  6831  000DA0  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6832  000DA4  501C               	movf	drawCircle@x0,w,c
  6833  000DA6  EC24  F011         	call	_drawPixel
  6834                           
  6835                           ;ST7735_TFT.c: 534: drawPixel(x0 , y0 - r, color);
  6836  000DAA  5020               	movf	drawCircle@r,w,c
  6837  000DAC  0800               	sublw	0
  6838  000DAE  241E               	addwf	drawCircle@y0,w,c
  6839  000DB0  6E18               	movwf	drawPixel@y,c
  6840  000DB2  C022  F019         	movff	drawCircle@color,drawPixel@color
  6841  000DB6  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6842  000DBA  501C               	movf	drawCircle@x0,w,c
  6843  000DBC  EC24  F011         	call	_drawPixel
  6844                           
  6845                           ;ST7735_TFT.c: 535: drawPixel(x0+r, y0 , color);
  6846  000DC0  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  6847  000DC4  C022  F019         	movff	drawCircle@color,drawPixel@color
  6848  000DC8  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6849  000DCC  501C               	movf	drawCircle@x0,w,c
  6850  000DCE  2420               	addwf	drawCircle@r,w,c
  6851  000DD0  EC24  F011         	call	_drawPixel
  6852                           
  6853                           ;ST7735_TFT.c: 536: drawPixel(x0-r, y0 , color);
  6854  000DD4  C01E  F018         	movff	drawCircle@y0,drawPixel@y
  6855  000DD8  C022  F019         	movff	drawCircle@color,drawPixel@color
  6856  000DDC  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6857  000DE0  5020               	movf	drawCircle@r,w,c
  6858  000DE2  0800               	sublw	0
  6859  000DE4  241C               	addwf	drawCircle@x0,w,c
  6860  000DE6  EC24  F011         	call	_drawPixel
  6861                           
  6862                           ;ST7735_TFT.c: 537: while (x < y) {
  6863  000DEA  D078               	goto	l6350
  6864  000DEC                     l6322:
  6865                           
  6866                           ;ST7735_TFT.c: 538: if (f >= 0) {
  6867  000DEC  BE2B               	btfsc	drawCircle@f+1,7,c
  6868  000DEE  D00B               	goto	l409
  6869                           
  6870                           ;ST7735_TFT.c: 539: y--;
  6871  000DF0  062E               	decf	drawCircle@y,f,c
  6872  000DF2  A0D8               	btfss	status,0,c
  6873  000DF4  062F               	decf	drawCircle@y+1,f,c
  6874                           
  6875                           ;ST7735_TFT.c: 540: ddF_y += 2;
  6876  000DF6  0E02               	movlw	2
  6877  000DF8  2628               	addwf	drawCircle@ddF_y,f,c
  6878  000DFA  0E00               	movlw	0
  6879  000DFC  2229               	addwfc	drawCircle@ddF_y+1,f,c
  6880                           
  6881                           ;ST7735_TFT.c: 541: f += ddF_y;
  6882  000DFE  5028               	movf	drawCircle@ddF_y,w,c
  6883  000E00  262A               	addwf	drawCircle@f,f,c
  6884  000E02  5029               	movf	drawCircle@ddF_y+1,w,c
  6885  000E04  222B               	addwfc	drawCircle@f+1,f,c
  6886  000E06                     l409:
  6887                           
  6888                           ;ST7735_TFT.c: 542: }
  6889                           ;ST7735_TFT.c: 543: x++;
  6890  000E06  4A2C               	infsnz	drawCircle@x,f,c
  6891  000E08  2A2D               	incf	drawCircle@x+1,f,c
  6892                           
  6893                           ;ST7735_TFT.c: 544: ddF_x += 2;
  6894  000E0A  0E02               	movlw	2
  6895  000E0C  2626               	addwf	drawCircle@ddF_x,f,c
  6896  000E0E  0E00               	movlw	0
  6897  000E10  2227               	addwfc	drawCircle@ddF_x+1,f,c
  6898                           
  6899                           ;ST7735_TFT.c: 545: f += ddF_x;
  6900  000E12  5026               	movf	drawCircle@ddF_x,w,c
  6901  000E14  262A               	addwf	drawCircle@f,f,c
  6902  000E16  5027               	movf	drawCircle@ddF_x+1,w,c
  6903  000E18  222B               	addwfc	drawCircle@f+1,f,c
  6904                           
  6905                           ;ST7735_TFT.c: 546: drawPixel(x0 + x, y0 + y, color);
  6906  000E1A  501E               	movf	drawCircle@y0,w,c
  6907  000E1C  242E               	addwf	drawCircle@y,w,c
  6908  000E1E  6E18               	movwf	drawPixel@y,c
  6909  000E20  C022  F019         	movff	drawCircle@color,drawPixel@color
  6910  000E24  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6911  000E28  501C               	movf	drawCircle@x0,w,c
  6912  000E2A  242C               	addwf	drawCircle@x,w,c
  6913  000E2C  EC24  F011         	call	_drawPixel
  6914                           
  6915                           ;ST7735_TFT.c: 547: drawPixel(x0 - x, y0 + y, color);
  6916  000E30  501E               	movf	drawCircle@y0,w,c
  6917  000E32  242E               	addwf	drawCircle@y,w,c
  6918  000E34  6E18               	movwf	drawPixel@y,c
  6919  000E36  C022  F019         	movff	drawCircle@color,drawPixel@color
  6920  000E3A  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6921  000E3E  502C               	movf	drawCircle@x,w,c
  6922  000E40  0800               	sublw	0
  6923  000E42  241C               	addwf	drawCircle@x0,w,c
  6924  000E44  EC24  F011         	call	_drawPixel
  6925                           
  6926                           ;ST7735_TFT.c: 548: drawPixel(x0 + x, y0 - y, color);
  6927  000E48  502E               	movf	drawCircle@y,w,c
  6928  000E4A  0800               	sublw	0
  6929  000E4C  241E               	addwf	drawCircle@y0,w,c
  6930  000E4E  6E18               	movwf	drawPixel@y,c
  6931  000E50  C022  F019         	movff	drawCircle@color,drawPixel@color
  6932  000E54  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6933  000E58  501C               	movf	drawCircle@x0,w,c
  6934  000E5A  242C               	addwf	drawCircle@x,w,c
  6935  000E5C  EC24  F011         	call	_drawPixel
  6936                           
  6937                           ;ST7735_TFT.c: 549: drawPixel(x0 - x, y0 - y, color);
  6938  000E60  502E               	movf	drawCircle@y,w,c
  6939  000E62  0800               	sublw	0
  6940  000E64  241E               	addwf	drawCircle@y0,w,c
  6941  000E66  6E18               	movwf	drawPixel@y,c
  6942  000E68  C022  F019         	movff	drawCircle@color,drawPixel@color
  6943  000E6C  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6944  000E70  502C               	movf	drawCircle@x,w,c
  6945  000E72  0800               	sublw	0
  6946  000E74  241C               	addwf	drawCircle@x0,w,c
  6947  000E76  EC24  F011         	call	_drawPixel
  6948                           
  6949                           ;ST7735_TFT.c: 550: drawPixel(x0 + y, y0 + x, color);
  6950  000E7A  501E               	movf	drawCircle@y0,w,c
  6951  000E7C  242C               	addwf	drawCircle@x,w,c
  6952  000E7E  6E18               	movwf	drawPixel@y,c
  6953  000E80  C022  F019         	movff	drawCircle@color,drawPixel@color
  6954  000E84  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6955  000E88  501C               	movf	drawCircle@x0,w,c
  6956  000E8A  242E               	addwf	drawCircle@y,w,c
  6957  000E8C  EC24  F011         	call	_drawPixel
  6958                           
  6959                           ;ST7735_TFT.c: 551: drawPixel(x0 - y, y0 + x, color);
  6960  000E90  501E               	movf	drawCircle@y0,w,c
  6961  000E92  242C               	addwf	drawCircle@x,w,c
  6962  000E94  6E18               	movwf	drawPixel@y,c
  6963  000E96  C022  F019         	movff	drawCircle@color,drawPixel@color
  6964  000E9A  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6965  000E9E  502E               	movf	drawCircle@y,w,c
  6966  000EA0  0800               	sublw	0
  6967  000EA2  241C               	addwf	drawCircle@x0,w,c
  6968  000EA4  EC24  F011         	call	_drawPixel
  6969                           
  6970                           ;ST7735_TFT.c: 552: drawPixel(x0 + y, y0 - x, color);
  6971  000EA8  502C               	movf	drawCircle@x,w,c
  6972  000EAA  0800               	sublw	0
  6973  000EAC  241E               	addwf	drawCircle@y0,w,c
  6974  000EAE  6E18               	movwf	drawPixel@y,c
  6975  000EB0  C022  F019         	movff	drawCircle@color,drawPixel@color
  6976  000EB4  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6977  000EB8  501C               	movf	drawCircle@x0,w,c
  6978  000EBA  242E               	addwf	drawCircle@y,w,c
  6979  000EBC  EC24  F011         	call	_drawPixel
  6980                           
  6981                           ;ST7735_TFT.c: 553: drawPixel(x0 - y, y0 - x, color);
  6982  000EC0  502C               	movf	drawCircle@x,w,c
  6983  000EC2  0800               	sublw	0
  6984  000EC4  241E               	addwf	drawCircle@y0,w,c
  6985  000EC6  6E18               	movwf	drawPixel@y,c
  6986  000EC8  C022  F019         	movff	drawCircle@color,drawPixel@color
  6987  000ECC  C023  F01A         	movff	drawCircle@color+1,drawPixel@color+1
  6988  000ED0  502E               	movf	drawCircle@y,w,c
  6989  000ED2  0800               	sublw	0
  6990  000ED4  241C               	addwf	drawCircle@x0,w,c
  6991  000ED6  EC24  F011         	call	_drawPixel
  6992  000EDA  D000               	goto	l6350
  6993  000EDC                     l6350:
  6994  000EDC  502E               	movf	drawCircle@y,w,c
  6995  000EDE  5C2C               	subwf	drawCircle@x,w,c
  6996  000EE0  502D               	movf	drawCircle@x+1,w,c
  6997  000EE2  0A80               	xorlw	128
  6998  000EE4  6E24               	movwf	??_drawCircle& (0+255),c
  6999  000EE6  502F               	movf	drawCircle@y+1,w,c
  7000  000EE8  0A80               	xorlw	128
  7001  000EEA  5824               	subwfb	??_drawCircle& (0+255),w,c
  7002  000EEC  A0D8               	btfss	status,0,c
  7003  000EEE  D77E               	goto	l6322
  7004  000EF0  0012               	return		;funcret
  7005  000EF2                     __end_of_drawCircle:
  7006                           	opt stack 0
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           intcon2	equ	0xFF1
  7015                           postinc0	equ	0xFEE
  7016                           wreg	equ	0xFE8
  7017                           postdec1	equ	0xFE5
  7018                           fsr1l	equ	0xFE1
  7019                           indf2	equ	0xFDF
  7020                           postinc2	equ	0xFDE
  7021                           postdec2	equ	0xFDD
  7022                           fsr2h	equ	0xFDA
  7023                           fsr2l	equ	0xFD9
  7024                           status	equ	0xFD8
  7025                           
  7026 ;; *************** function _drawPixel *****************
  7027 ;; Defined at:
  7028 ;;		line 408 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  x               1    wreg     unsigned char 
  7031 ;;  y               1   23[COMRAM] unsigned char 
  7032 ;;  color           2   24[COMRAM] unsigned int 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;  x               1   26[COMRAM] unsigned char 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;		None               void
  7037 ;; Registers used:
  7038 ;;		wreg, status,2, status,0, cstack
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7044 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;Total ram usage:        4 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:    6
  7051 ;; This function calls:
  7052 ;;		_setAddrWindow
  7053 ;;		_write_data
  7054 ;; This function is called by:
  7055 ;;		_drawChar
  7056 ;;		_drawCircle
  7057 ;;		_drawCircleHelper
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text23
  7062  002248                     __ptext23:
  7063                           	opt stack 0
  7064  002248                     _drawPixel:
  7065                           	opt stack 21
  7066                           
  7067                           ;incstack = 0
  7068                           ;drawPixel@x stored from wreg
  7069  002248  6E1B               	movwf	drawPixel@x,c
  7070                           
  7071                           ;ST7735_TFT.c: 410: if((x >= 128) || (y >= 160))
  7072  00224A  0E80               	movlw	128
  7073  00224C  601B               	cpfslt	drawPixel@x,c
  7074  00224E  D013               	goto	l339
  7075  002250  0E9F               	movlw	159
  7076  002252  6418               	cpfsgt	drawPixel@y,c
  7077  002254  D001               	goto	l5516
  7078                           
  7079                           ;ST7735_TFT.c: 411: return;
  7080  002256  D00F               	goto	l339
  7081  002258                     l5516:
  7082                           
  7083                           ;ST7735_TFT.c: 412: setAddrWindow(x,y,x+1,y+1);
  7084  002258  C018  F014         	movff	drawPixel@y,setAddrWindow@y0
  7085  00225C  281B               	incf	drawPixel@x,w,c
  7086  00225E  6E15               	movwf	setAddrWindow@x1,c
  7087  002260  2818               	incf	drawPixel@y,w,c
  7088  002262  6E16               	movwf	setAddrWindow@y1,c
  7089  002264  501B               	movf	drawPixel@x,w,c
  7090  002266  ECB2  F00F         	call	_setAddrWindow
  7091                           
  7092                           ;ST7735_TFT.c: 413: write_data(color >> 8);
  7093  00226A  501A               	movf	drawPixel@color+1,w,c
  7094  00226C  EC7B  F012         	call	_write_data
  7095                           
  7096                           ;ST7735_TFT.c: 414: write_data(color & 0xFF);
  7097  002270  5019               	movf	drawPixel@color,w,c
  7098  002272  EC7B  F012         	call	_write_data
  7099  002276                     l339:
  7100  002276  0012               	return		;funcret
  7101  002278                     __end_of_drawPixel:
  7102                           	opt stack 0
  7103                           tblptru	equ	0xFF8
  7104                           tblptrh	equ	0xFF7
  7105                           tblptrl	equ	0xFF6
  7106                           tablat	equ	0xFF5
  7107                           prodh	equ	0xFF4
  7108                           prodl	equ	0xFF3
  7109                           intcon	equ	0xFF2
  7110                           intcon2	equ	0xFF1
  7111                           postinc0	equ	0xFEE
  7112                           wreg	equ	0xFE8
  7113                           postdec1	equ	0xFE5
  7114                           fsr1l	equ	0xFE1
  7115                           indf2	equ	0xFDF
  7116                           postinc2	equ	0xFDE
  7117                           postdec2	equ	0xFDD
  7118                           fsr2h	equ	0xFDA
  7119                           fsr2l	equ	0xFD9
  7120                           status	equ	0xFD8
  7121                           
  7122 ;; *************** function _setAddrWindow *****************
  7123 ;; Defined at:
  7124 ;;		line 393 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  x0              1    wreg     unsigned char 
  7127 ;;  y0              1   19[COMRAM] unsigned char 
  7128 ;;  x1              1   20[COMRAM] unsigned char 
  7129 ;;  y1              1   21[COMRAM] unsigned char 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;  x0              1   22[COMRAM] unsigned char 
  7132 ;; Return value:  Size  Location     Type
  7133 ;;		None               void
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0, cstack
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7141 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;Total ram usage:        4 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    5
  7148 ;; This function calls:
  7149 ;;		_write_command
  7150 ;;		_write_data
  7151 ;; This function is called by:
  7152 ;;		_drawPixel
  7153 ;;		_drawFastVLine
  7154 ;;		_fillRectangle
  7155 ;;		_drawFastHLine
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text24
  7160  001F64                     __ptext24:
  7161                           	opt stack 0
  7162  001F64                     _setAddrWindow:
  7163                           	opt stack 20
  7164                           
  7165                           ;incstack = 0
  7166                           ;setAddrWindow@x0 stored from wreg
  7167  001F64  6E17               	movwf	setAddrWindow@x0,c
  7168                           
  7169                           ;ST7735_TFT.c: 395: write_command(0x2A);
  7170  001F66  0E2A               	movlw	42
  7171  001F68  EC83  F012         	call	_write_command
  7172                           
  7173                           ;ST7735_TFT.c: 396: write_data(0);
  7174  001F6C  0E00               	movlw	0
  7175  001F6E  EC7B  F012         	call	_write_data
  7176                           
  7177                           ;ST7735_TFT.c: 397: write_data(x0 + colstart);
  7178  001F72  5017               	movf	setAddrWindow@x0,w,c
  7179  001F74  2459               	addwf	_colstart,w,c
  7180  001F76  EC7B  F012         	call	_write_data
  7181                           
  7182                           ;ST7735_TFT.c: 398: write_data(0);
  7183  001F7A  0E00               	movlw	0
  7184  001F7C  EC7B  F012         	call	_write_data
  7185                           
  7186                           ;ST7735_TFT.c: 399: write_data(x1 + colstart);
  7187  001F80  5015               	movf	setAddrWindow@x1,w,c
  7188  001F82  2459               	addwf	_colstart,w,c
  7189  001F84  EC7B  F012         	call	_write_data
  7190                           
  7191                           ;ST7735_TFT.c: 400: write_command(0x2B);
  7192  001F88  0E2B               	movlw	43
  7193  001F8A  EC83  F012         	call	_write_command
  7194                           
  7195                           ;ST7735_TFT.c: 401: write_data(0);
  7196  001F8E  0E00               	movlw	0
  7197  001F90  EC7B  F012         	call	_write_data
  7198                           
  7199                           ;ST7735_TFT.c: 402: write_data(y0 + rowstart);
  7200  001F94  5014               	movf	setAddrWindow@y0,w,c
  7201  001F96  2461               	addwf	_rowstart,w,c
  7202  001F98  EC7B  F012         	call	_write_data
  7203                           
  7204                           ;ST7735_TFT.c: 403: write_data(0);
  7205  001F9C  0E00               	movlw	0
  7206  001F9E  EC7B  F012         	call	_write_data
  7207                           
  7208                           ;ST7735_TFT.c: 404: write_data(y1 + rowstart);
  7209  001FA2  5016               	movf	setAddrWindow@y1,w,c
  7210  001FA4  2461               	addwf	_rowstart,w,c
  7211  001FA6  EC7B  F012         	call	_write_data
  7212                           
  7213                           ;ST7735_TFT.c: 405: write_command(0x2C);
  7214  001FAA  0E2C               	movlw	44
  7215  001FAC  EC83  F012         	call	_write_command
  7216  001FB0  0012               	return		;funcret
  7217  001FB2                     __end_of_setAddrWindow:
  7218                           	opt stack 0
  7219                           tblptru	equ	0xFF8
  7220                           tblptrh	equ	0xFF7
  7221                           tblptrl	equ	0xFF6
  7222                           tablat	equ	0xFF5
  7223                           prodh	equ	0xFF4
  7224                           prodl	equ	0xFF3
  7225                           intcon	equ	0xFF2
  7226                           intcon2	equ	0xFF1
  7227                           postinc0	equ	0xFEE
  7228                           wreg	equ	0xFE8
  7229                           postdec1	equ	0xFE5
  7230                           fsr1l	equ	0xFE1
  7231                           indf2	equ	0xFDF
  7232                           postinc2	equ	0xFDE
  7233                           postdec2	equ	0xFDD
  7234                           fsr2h	equ	0xFDA
  7235                           fsr2l	equ	0xFD9
  7236                           status	equ	0xFD8
  7237                           
  7238 ;; *************** function _TFT_GreenTab_Initialize *****************
  7239 ;; Defined at:
  7240 ;;		line 645 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;		None               void
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;Total ram usage:        0 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    6
  7261 ;; This function calls:
  7262 ;;		_Rcmd1
  7263 ;;		_Rcmd2red
  7264 ;;		_Rcmd3
  7265 ;;		_write_command
  7266 ;;		_write_data
  7267 ;; This function is called by:
  7268 ;;		_Initialize_Screen
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text25
  7273  002278                     __ptext25:
  7274                           	opt stack 0
  7275  002278                     _TFT_GreenTab_Initialize:
  7276                           	opt stack 23
  7277                           
  7278                           ;ST7735_TFT.c: 647: PORTBbits.RB5 = 1;
  7279                           
  7280                           ;incstack = 0
  7281  002278  8A81               	bsf	3969,5,c	;volatile
  7282                           
  7283                           ;ST7735_TFT.c: 648: PORTBbits.RB0 = 0;
  7284  00227A  9081               	bcf	3969,0,c	;volatile
  7285                           
  7286                           ;ST7735_TFT.c: 650: SSPSTAT=0x80;
  7287  00227C  0E80               	movlw	128
  7288  00227E  6EC7               	movwf	4039,c	;volatile
  7289                           
  7290                           ;ST7735_TFT.c: 651: SSPCON1=0x30;
  7291  002280  0E30               	movlw	48
  7292  002282  6EC6               	movwf	4038,c	;volatile
  7293                           
  7294                           ;ST7735_TFT.c: 654: Rcmd1();
  7295  002284  ECD8  F008         	call	_Rcmd1	;wreg free
  7296                           
  7297                           ;ST7735_TFT.c: 655: Rcmd2red();
  7298  002288  ECAF  F010         	call	_Rcmd2red	;wreg free
  7299                           
  7300                           ;ST7735_TFT.c: 656: Rcmd3();
  7301  00228C  EC61  F00A         	call	_Rcmd3	;wreg free
  7302                           
  7303                           ;ST7735_TFT.c: 657: write_command(0x36);
  7304  002290  0E36               	movlw	54
  7305  002292  EC83  F012         	call	_write_command
  7306                           
  7307                           ;ST7735_TFT.c: 658: write_data(0xC0);
  7308  002296  0EC0               	movlw	192
  7309  002298  EC7B  F012         	call	_write_data
  7310                           
  7311                           ;ST7735_TFT.c: 659: _tft_type = 1;
  7312  00229C  0E01               	movlw	1
  7313  00229E  6E53               	movwf	__tft_type,c
  7314  0022A0  0012               	return		;funcret
  7315  0022A2                     __end_of_TFT_GreenTab_Initialize:
  7316                           	opt stack 0
  7317                           tblptru	equ	0xFF8
  7318                           tblptrh	equ	0xFF7
  7319                           tblptrl	equ	0xFF6
  7320                           tablat	equ	0xFF5
  7321                           prodh	equ	0xFF4
  7322                           prodl	equ	0xFF3
  7323                           intcon	equ	0xFF2
  7324                           intcon2	equ	0xFF1
  7325                           postinc0	equ	0xFEE
  7326                           wreg	equ	0xFE8
  7327                           postdec1	equ	0xFE5
  7328                           fsr1l	equ	0xFE1
  7329                           indf2	equ	0xFDF
  7330                           postinc2	equ	0xFDE
  7331                           postdec2	equ	0xFDD
  7332                           fsr2h	equ	0xFDA
  7333                           fsr2l	equ	0xFD9
  7334                           status	equ	0xFD8
  7335                           
  7336 ;; *************** function _Rcmd3 *****************
  7337 ;; Defined at:
  7338 ;;		line 339 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;		None
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;		None               void
  7345 ;; Registers used:
  7346 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;Total ram usage:        0 bytes
  7357 ;; Hardware stack levels used:    1
  7358 ;; Hardware stack levels required when called:    5
  7359 ;; This function calls:
  7360 ;;		_delay_ms
  7361 ;;		_write_command
  7362 ;;		_write_data
  7363 ;; This function is called by:
  7364 ;;		_TFT_GreenTab_Initialize
  7365 ;;		_TFT_BlackTab_Initialize
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text26
  7370  0014C2                     __ptext26:
  7371                           	opt stack 0
  7372  0014C2                     _Rcmd3:
  7373                           	opt stack 23
  7374                           
  7375                           ;ST7735_TFT.c: 341: write_command(0xE0);
  7376                           
  7377                           ;incstack = 0
  7378  0014C2  0EE0               	movlw	224
  7379  0014C4  EC83  F012         	call	_write_command
  7380                           
  7381                           ;ST7735_TFT.c: 342: write_data(0x02); write_data(0x1C); write_data(0x07); write_data(0x1
      +                          2);
  7382  0014C8  0E02               	movlw	2
  7383  0014CA  EC7B  F012         	call	_write_data
  7384  0014CE  0E1C               	movlw	28
  7385  0014D0  EC7B  F012         	call	_write_data
  7386  0014D4  0E07               	movlw	7
  7387  0014D6  EC7B  F012         	call	_write_data
  7388  0014DA  0E12               	movlw	18
  7389  0014DC  EC7B  F012         	call	_write_data
  7390                           
  7391                           ;ST7735_TFT.c: 343: write_data(0x37); write_data(0x32); write_data(0x29); write_data(0x2
      +                          D);
  7392  0014E0  0E37               	movlw	55
  7393  0014E2  EC7B  F012         	call	_write_data
  7394  0014E6  0E32               	movlw	50
  7395  0014E8  EC7B  F012         	call	_write_data
  7396  0014EC  0E29               	movlw	41
  7397  0014EE  EC7B  F012         	call	_write_data
  7398  0014F2  0E2D               	movlw	45
  7399  0014F4  EC7B  F012         	call	_write_data
  7400                           
  7401                           ;ST7735_TFT.c: 344: write_data(0x29); write_data(0x25); write_data(0x2B); write_data(0x3
      +                          9);
  7402  0014F8  0E29               	movlw	41
  7403  0014FA  EC7B  F012         	call	_write_data
  7404  0014FE  0E25               	movlw	37
  7405  001500  EC7B  F012         	call	_write_data
  7406  001504  0E2B               	movlw	43
  7407  001506  EC7B  F012         	call	_write_data
  7408  00150A  0E39               	movlw	57
  7409  00150C  EC7B  F012         	call	_write_data
  7410                           
  7411                           ;ST7735_TFT.c: 345: write_data(0x00); write_data(0x01); write_data(0x03); write_data(0x1
      +                          0);
  7412  001510  0E00               	movlw	0
  7413  001512  EC7B  F012         	call	_write_data
  7414  001516  0E01               	movlw	1
  7415  001518  EC7B  F012         	call	_write_data
  7416  00151C  0E03               	movlw	3
  7417  00151E  EC7B  F012         	call	_write_data
  7418  001522  0E10               	movlw	16
  7419  001524  EC7B  F012         	call	_write_data
  7420                           
  7421                           ;ST7735_TFT.c: 346: write_command(0xE1);
  7422  001528  0EE1               	movlw	225
  7423  00152A  EC83  F012         	call	_write_command
  7424                           
  7425                           ;ST7735_TFT.c: 347: write_data(0x03); write_data(0x1D); write_data(0x07); write_data(0x0
      +                          6);
  7426  00152E  0E03               	movlw	3
  7427  001530  EC7B  F012         	call	_write_data
  7428  001534  0E1D               	movlw	29
  7429  001536  EC7B  F012         	call	_write_data
  7430  00153A  0E07               	movlw	7
  7431  00153C  EC7B  F012         	call	_write_data
  7432  001540  0E06               	movlw	6
  7433  001542  EC7B  F012         	call	_write_data
  7434                           
  7435                           ;ST7735_TFT.c: 348: write_data(0x2E); write_data(0x2C); write_data(0x29); write_data(0x2
      +                          D);
  7436  001546  0E2E               	movlw	46
  7437  001548  EC7B  F012         	call	_write_data
  7438  00154C  0E2C               	movlw	44
  7439  00154E  EC7B  F012         	call	_write_data
  7440  001552  0E29               	movlw	41
  7441  001554  EC7B  F012         	call	_write_data
  7442  001558  0E2D               	movlw	45
  7443  00155A  EC7B  F012         	call	_write_data
  7444                           
  7445                           ;ST7735_TFT.c: 349: write_data(0x2E); write_data(0x2E); write_data(0x37); write_data(0x3
      +                          F);
  7446  00155E  0E2E               	movlw	46
  7447  001560  EC7B  F012         	call	_write_data
  7448  001564  0E2E               	movlw	46
  7449  001566  EC7B  F012         	call	_write_data
  7450  00156A  0E37               	movlw	55
  7451  00156C  EC7B  F012         	call	_write_data
  7452  001570  0E3F               	movlw	63
  7453  001572  EC7B  F012         	call	_write_data
  7454                           
  7455                           ;ST7735_TFT.c: 350: write_data(0x00); write_data(0x00); write_data(0x02); write_data(0x1
      +                          0);
  7456  001576  0E00               	movlw	0
  7457  001578  EC7B  F012         	call	_write_data
  7458  00157C  0E00               	movlw	0
  7459  00157E  EC7B  F012         	call	_write_data
  7460  001582  0E02               	movlw	2
  7461  001584  EC7B  F012         	call	_write_data
  7462  001588  0E10               	movlw	16
  7463  00158A  EC7B  F012         	call	_write_data
  7464                           
  7465                           ;ST7735_TFT.c: 351: write_command(0x13);
  7466  00158E  0E13               	movlw	19
  7467  001590  EC83  F012         	call	_write_command
  7468                           
  7469                           ;ST7735_TFT.c: 352: delay_ms(10);
  7470  001594  0E00               	movlw	0
  7471  001596  6E18               	movwf	delay_ms@ms+1,c
  7472  001598  0E0A               	movlw	10
  7473  00159A  6E17               	movwf	delay_ms@ms,c
  7474  00159C  EC89  F00F         	call	_delay_ms	;wreg free
  7475                           
  7476                           ;ST7735_TFT.c: 353: write_command(0x29);
  7477  0015A0  0E29               	movlw	41
  7478  0015A2  EC83  F012         	call	_write_command
  7479                           
  7480                           ;ST7735_TFT.c: 354: delay_ms(100);
  7481  0015A6  0E00               	movlw	0
  7482  0015A8  6E18               	movwf	delay_ms@ms+1,c
  7483  0015AA  0E64               	movlw	100
  7484  0015AC  6E17               	movwf	delay_ms@ms,c
  7485  0015AE  EC89  F00F         	call	_delay_ms	;wreg free
  7486  0015B2  0012               	return		;funcret
  7487  0015B4                     __end_of_Rcmd3:
  7488                           	opt stack 0
  7489                           tblptru	equ	0xFF8
  7490                           tblptrh	equ	0xFF7
  7491                           tblptrl	equ	0xFF6
  7492                           tablat	equ	0xFF5
  7493                           prodh	equ	0xFF4
  7494                           prodl	equ	0xFF3
  7495                           intcon	equ	0xFF2
  7496                           intcon2	equ	0xFF1
  7497                           postinc0	equ	0xFEE
  7498                           wreg	equ	0xFE8
  7499                           postdec1	equ	0xFE5
  7500                           fsr1l	equ	0xFE1
  7501                           indf2	equ	0xFDF
  7502                           postinc2	equ	0xFDE
  7503                           postdec2	equ	0xFDD
  7504                           fsr2h	equ	0xFDA
  7505                           fsr2l	equ	0xFD9
  7506                           status	equ	0xFD8
  7507                           
  7508 ;; *************** function _Rcmd2red *****************
  7509 ;; Defined at:
  7510 ;;		line 329 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;		None
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;		None               void
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, cstack
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7528 ;;Total ram usage:        0 bytes
  7529 ;; Hardware stack levels used:    1
  7530 ;; Hardware stack levels required when called:    5
  7531 ;; This function calls:
  7532 ;;		_write_command
  7533 ;;		_write_data
  7534 ;; This function is called by:
  7535 ;;		_TFT_GreenTab_Initialize
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538                           
  7539                           	psect	text27
  7540  00215E                     __ptext27:
  7541                           	opt stack 0
  7542  00215E                     _Rcmd2red:
  7543                           	opt stack 23
  7544                           
  7545                           ;ST7735_TFT.c: 331: write_command(0x2A);
  7546                           
  7547                           ;incstack = 0
  7548  00215E  0E2A               	movlw	42
  7549  002160  EC83  F012         	call	_write_command
  7550                           
  7551                           ;ST7735_TFT.c: 332: write_data(0x00); write_data(0x00);
  7552  002164  0E00               	movlw	0
  7553  002166  EC7B  F012         	call	_write_data
  7554  00216A  0E00               	movlw	0
  7555  00216C  EC7B  F012         	call	_write_data
  7556                           
  7557                           ;ST7735_TFT.c: 333: write_data(0x00); write_data(0x7F);
  7558  002170  0E00               	movlw	0
  7559  002172  EC7B  F012         	call	_write_data
  7560  002176  0E7F               	movlw	127
  7561  002178  EC7B  F012         	call	_write_data
  7562                           
  7563                           ;ST7735_TFT.c: 334: write_command(0x2B);
  7564  00217C  0E2B               	movlw	43
  7565  00217E  EC83  F012         	call	_write_command
  7566                           
  7567                           ;ST7735_TFT.c: 335: write_data(0x00); write_data(0x00);
  7568  002182  0E00               	movlw	0
  7569  002184  EC7B  F012         	call	_write_data
  7570  002188  0E00               	movlw	0
  7571  00218A  EC7B  F012         	call	_write_data
  7572                           
  7573                           ;ST7735_TFT.c: 336: write_data(0x00); write_data(0x9F);
  7574  00218E  0E00               	movlw	0
  7575  002190  EC7B  F012         	call	_write_data
  7576  002194  0E9F               	movlw	159
  7577  002196  EC7B  F012         	call	_write_data
  7578  00219A  0012               	return		;funcret
  7579  00219C                     __end_of_Rcmd2red:
  7580                           	opt stack 0
  7581                           tblptru	equ	0xFF8
  7582                           tblptrh	equ	0xFF7
  7583                           tblptrl	equ	0xFF6
  7584                           tablat	equ	0xFF5
  7585                           prodh	equ	0xFF4
  7586                           prodl	equ	0xFF3
  7587                           intcon	equ	0xFF2
  7588                           intcon2	equ	0xFF1
  7589                           postinc0	equ	0xFEE
  7590                           wreg	equ	0xFE8
  7591                           postdec1	equ	0xFE5
  7592                           fsr1l	equ	0xFE1
  7593                           indf2	equ	0xFDF
  7594                           postinc2	equ	0xFDE
  7595                           postdec2	equ	0xFDD
  7596                           fsr2h	equ	0xFDA
  7597                           fsr2l	equ	0xFD9
  7598                           status	equ	0xFD8
  7599                           
  7600 ;; *************** function _Rcmd1 *****************
  7601 ;; Defined at:
  7602 ;;		line 282 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;		None               void
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;Total ram usage:        0 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; Hardware stack levels required when called:    5
  7623 ;; This function calls:
  7624 ;;		_delay_ms
  7625 ;;		_write_command
  7626 ;;		_write_data
  7627 ;; This function is called by:
  7628 ;;		_TFT_GreenTab_Initialize
  7629 ;;		_TFT_BlackTab_Initialize
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text28
  7634  0011B0                     __ptext28:
  7635                           	opt stack 0
  7636  0011B0                     _Rcmd1:
  7637                           	opt stack 23
  7638                           
  7639                           ;ST7735_TFT.c: 284: write_command(0x01);
  7640                           
  7641                           ;incstack = 0
  7642  0011B0  0E01               	movlw	1
  7643  0011B2  EC83  F012         	call	_write_command
  7644                           
  7645                           ;ST7735_TFT.c: 285: delay_ms(150);
  7646  0011B6  0E00               	movlw	0
  7647  0011B8  6E18               	movwf	delay_ms@ms+1,c
  7648  0011BA  0E96               	movlw	150
  7649  0011BC  6E17               	movwf	delay_ms@ms,c
  7650  0011BE  EC89  F00F         	call	_delay_ms	;wreg free
  7651                           
  7652                           ;ST7735_TFT.c: 286: write_command(0x11);
  7653  0011C2  0E11               	movlw	17
  7654  0011C4  EC83  F012         	call	_write_command
  7655                           
  7656                           ;ST7735_TFT.c: 287: delay_ms(500);
  7657  0011C8  0E01               	movlw	1
  7658  0011CA  6E18               	movwf	delay_ms@ms+1,c
  7659  0011CC  0EF4               	movlw	244
  7660  0011CE  6E17               	movwf	delay_ms@ms,c
  7661  0011D0  EC89  F00F         	call	_delay_ms	;wreg free
  7662                           
  7663                           ;ST7735_TFT.c: 288: write_command(0xB1);
  7664  0011D4  0EB1               	movlw	177
  7665  0011D6  EC83  F012         	call	_write_command
  7666                           
  7667                           ;ST7735_TFT.c: 289: write_data(0x01);
  7668  0011DA  0E01               	movlw	1
  7669  0011DC  EC7B  F012         	call	_write_data
  7670                           
  7671                           ;ST7735_TFT.c: 290: write_data(0x2C);
  7672  0011E0  0E2C               	movlw	44
  7673  0011E2  EC7B  F012         	call	_write_data
  7674                           
  7675                           ;ST7735_TFT.c: 291: write_data(0x2D);
  7676  0011E6  0E2D               	movlw	45
  7677  0011E8  EC7B  F012         	call	_write_data
  7678                           
  7679                           ;ST7735_TFT.c: 292: write_command(0xB2);
  7680  0011EC  0EB2               	movlw	178
  7681  0011EE  EC83  F012         	call	_write_command
  7682                           
  7683                           ;ST7735_TFT.c: 293: write_data(0x01);
  7684  0011F2  0E01               	movlw	1
  7685  0011F4  EC7B  F012         	call	_write_data
  7686                           
  7687                           ;ST7735_TFT.c: 294: write_data(0x2C);
  7688  0011F8  0E2C               	movlw	44
  7689  0011FA  EC7B  F012         	call	_write_data
  7690                           
  7691                           ;ST7735_TFT.c: 295: write_data(0x2D);
  7692  0011FE  0E2D               	movlw	45
  7693  001200  EC7B  F012         	call	_write_data
  7694                           
  7695                           ;ST7735_TFT.c: 296: write_command(0xB3);
  7696  001204  0EB3               	movlw	179
  7697  001206  EC83  F012         	call	_write_command
  7698                           
  7699                           ;ST7735_TFT.c: 297: write_data(0x01);
  7700  00120A  0E01               	movlw	1
  7701  00120C  EC7B  F012         	call	_write_data
  7702                           
  7703                           ;ST7735_TFT.c: 298: write_data(0x2C);
  7704  001210  0E2C               	movlw	44
  7705  001212  EC7B  F012         	call	_write_data
  7706                           
  7707                           ;ST7735_TFT.c: 299: write_data(0x2D);
  7708  001216  0E2D               	movlw	45
  7709  001218  EC7B  F012         	call	_write_data
  7710                           
  7711                           ;ST7735_TFT.c: 300: write_data(0x01);
  7712  00121C  0E01               	movlw	1
  7713  00121E  EC7B  F012         	call	_write_data
  7714                           
  7715                           ;ST7735_TFT.c: 301: write_data(0x2C);
  7716  001222  0E2C               	movlw	44
  7717  001224  EC7B  F012         	call	_write_data
  7718                           
  7719                           ;ST7735_TFT.c: 302: write_data(0x2D);
  7720  001228  0E2D               	movlw	45
  7721  00122A  EC7B  F012         	call	_write_data
  7722                           
  7723                           ;ST7735_TFT.c: 303: write_command(0xB4);
  7724  00122E  0EB4               	movlw	180
  7725  001230  EC83  F012         	call	_write_command
  7726                           
  7727                           ;ST7735_TFT.c: 304: write_data(0x07);
  7728  001234  0E07               	movlw	7
  7729  001236  EC7B  F012         	call	_write_data
  7730                           
  7731                           ;ST7735_TFT.c: 305: write_command(0xC0);
  7732  00123A  0EC0               	movlw	192
  7733  00123C  EC83  F012         	call	_write_command
  7734                           
  7735                           ;ST7735_TFT.c: 306: write_data(0xA2);
  7736  001240  0EA2               	movlw	162
  7737  001242  EC7B  F012         	call	_write_data
  7738                           
  7739                           ;ST7735_TFT.c: 307: write_data(0x02);
  7740  001246  0E02               	movlw	2
  7741  001248  EC7B  F012         	call	_write_data
  7742                           
  7743                           ;ST7735_TFT.c: 308: write_data(0x84);
  7744  00124C  0E84               	movlw	132
  7745  00124E  EC7B  F012         	call	_write_data
  7746                           
  7747                           ;ST7735_TFT.c: 309: write_command(0xC1);
  7748  001252  0EC1               	movlw	193
  7749  001254  EC83  F012         	call	_write_command
  7750                           
  7751                           ;ST7735_TFT.c: 310: write_data(0xC5);
  7752  001258  0EC5               	movlw	197
  7753  00125A  EC7B  F012         	call	_write_data
  7754                           
  7755                           ;ST7735_TFT.c: 311: write_command(0xC2);
  7756  00125E  0EC2               	movlw	194
  7757  001260  EC83  F012         	call	_write_command
  7758                           
  7759                           ;ST7735_TFT.c: 312: write_data(0x0A);
  7760  001264  0E0A               	movlw	10
  7761  001266  EC7B  F012         	call	_write_data
  7762                           
  7763                           ;ST7735_TFT.c: 313: write_data(0x00);
  7764  00126A  0E00               	movlw	0
  7765  00126C  EC7B  F012         	call	_write_data
  7766                           
  7767                           ;ST7735_TFT.c: 314: write_command(0xC3);
  7768  001270  0EC3               	movlw	195
  7769  001272  EC83  F012         	call	_write_command
  7770                           
  7771                           ;ST7735_TFT.c: 315: write_data(0x8A);
  7772  001276  0E8A               	movlw	138
  7773  001278  EC7B  F012         	call	_write_data
  7774                           
  7775                           ;ST7735_TFT.c: 316: write_data(0x2A);
  7776  00127C  0E2A               	movlw	42
  7777  00127E  EC7B  F012         	call	_write_data
  7778                           
  7779                           ;ST7735_TFT.c: 317: write_command(0xC4);
  7780  001282  0EC4               	movlw	196
  7781  001284  EC83  F012         	call	_write_command
  7782                           
  7783                           ;ST7735_TFT.c: 318: write_data(0x8A);
  7784  001288  0E8A               	movlw	138
  7785  00128A  EC7B  F012         	call	_write_data
  7786                           
  7787                           ;ST7735_TFT.c: 319: write_data(0xEE);
  7788  00128E  0EEE               	movlw	238
  7789  001290  EC7B  F012         	call	_write_data
  7790                           
  7791                           ;ST7735_TFT.c: 320: write_command(0xC5);
  7792  001294  0EC5               	movlw	197
  7793  001296  EC83  F012         	call	_write_command
  7794                           
  7795                           ;ST7735_TFT.c: 321: write_data(0x0E);
  7796  00129A  0E0E               	movlw	14
  7797  00129C  EC7B  F012         	call	_write_data
  7798                           
  7799                           ;ST7735_TFT.c: 322: write_command(0x20);
  7800  0012A0  0E20               	movlw	32
  7801  0012A2  EC83  F012         	call	_write_command
  7802                           
  7803                           ;ST7735_TFT.c: 323: write_command(0x36);
  7804  0012A6  0E36               	movlw	54
  7805  0012A8  EC83  F012         	call	_write_command
  7806                           
  7807                           ;ST7735_TFT.c: 324: write_data(0xC8);
  7808  0012AC  0EC8               	movlw	200
  7809  0012AE  EC7B  F012         	call	_write_data
  7810                           
  7811                           ;ST7735_TFT.c: 325: write_command(0x3A);
  7812  0012B2  0E3A               	movlw	58
  7813  0012B4  EC83  F012         	call	_write_command
  7814                           
  7815                           ;ST7735_TFT.c: 326: write_data(0x05);
  7816  0012B8  0E05               	movlw	5
  7817  0012BA  EC7B  F012         	call	_write_data
  7818  0012BE  0012               	return		;funcret
  7819  0012C0                     __end_of_Rcmd1:
  7820                           	opt stack 0
  7821                           tblptru	equ	0xFF8
  7822                           tblptrh	equ	0xFF7
  7823                           tblptrl	equ	0xFF6
  7824                           tablat	equ	0xFF5
  7825                           prodh	equ	0xFF4
  7826                           prodl	equ	0xFF3
  7827                           intcon	equ	0xFF2
  7828                           intcon2	equ	0xFF1
  7829                           postinc0	equ	0xFEE
  7830                           wreg	equ	0xFE8
  7831                           postdec1	equ	0xFE5
  7832                           fsr1l	equ	0xFE1
  7833                           indf2	equ	0xFDF
  7834                           postinc2	equ	0xFDE
  7835                           postdec2	equ	0xFDD
  7836                           fsr2h	equ	0xFDA
  7837                           fsr2l	equ	0xFD9
  7838                           status	equ	0xFD8
  7839                           
  7840 ;; *************** function _write_data *****************
  7841 ;; Defined at:
  7842 ;;		line 210 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  data_           1    wreg     unsigned char 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  data_           1   18[COMRAM] unsigned char 
  7847 ;; Return value:  Size  Location     Type
  7848 ;;		None               void
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7860 ;;Total ram usage:        1 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:    4
  7863 ;; This function calls:
  7864 ;;		_spiwrite
  7865 ;; This function is called by:
  7866 ;;		_Rcmd1
  7867 ;;		_Rcmd2red
  7868 ;;		_Rcmd3
  7869 ;;		_setAddrWindow
  7870 ;;		_drawPixel
  7871 ;;		_TFT_GreenTab_Initialize
  7872 ;;		_Bcmd
  7873 ;;		_setScrollDefinition
  7874 ;;		_Rcmd2green
  7875 ;;		_VerticalScroll
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           	psect	text29
  7880  0024F6                     __ptext29:
  7881                           	opt stack 0
  7882  0024F6                     _write_data:
  7883                           	opt stack 20
  7884                           
  7885                           ;incstack = 0
  7886                           ;write_data@data_ stored from wreg
  7887  0024F6  6E13               	movwf	write_data@data_,c
  7888                           
  7889                           ;ST7735_TFT.c: 212: PORTBbits.RB5 = 0;
  7890  0024F8  9A81               	bcf	3969,5,c	;volatile
  7891                           
  7892                           ;ST7735_TFT.c: 213: PORTBbits.RB0 = 1;
  7893  0024FA  8081               	bsf	3969,0,c	;volatile
  7894                           
  7895                           ;ST7735_TFT.c: 214: spiwrite(data_);
  7896  0024FC  5013               	movf	write_data@data_,w,c
  7897  0024FE  EC3A  F012         	call	_spiwrite
  7898                           
  7899                           ;ST7735_TFT.c: 215: PORTBbits.RB5 = 1;
  7900  002502  8A81               	bsf	3969,5,c	;volatile
  7901  002504  0012               	return		;funcret
  7902  002506                     __end_of_write_data:
  7903                           	opt stack 0
  7904                           tblptru	equ	0xFF8
  7905                           tblptrh	equ	0xFF7
  7906                           tblptrl	equ	0xFF6
  7907                           tablat	equ	0xFF5
  7908                           prodh	equ	0xFF4
  7909                           prodl	equ	0xFF3
  7910                           intcon	equ	0xFF2
  7911                           intcon2	equ	0xFF1
  7912                           postinc0	equ	0xFEE
  7913                           wreg	equ	0xFE8
  7914                           postdec1	equ	0xFE5
  7915                           fsr1l	equ	0xFE1
  7916                           indf2	equ	0xFDF
  7917                           postinc2	equ	0xFDE
  7918                           postdec2	equ	0xFDD
  7919                           fsr2h	equ	0xFDA
  7920                           fsr2l	equ	0xFD9
  7921                           status	equ	0xFD8
  7922                           
  7923 ;; *************** function _write_command *****************
  7924 ;; Defined at:
  7925 ;;		line 199 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  cmd_            1    wreg     unsigned char 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  cmd_            1   18[COMRAM] unsigned char 
  7930 ;; Return value:  Size  Location     Type
  7931 ;;		None               void
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, cstack
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7940 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7942 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7943 ;;Total ram usage:        1 bytes
  7944 ;; Hardware stack levels used:    1
  7945 ;; Hardware stack levels required when called:    4
  7946 ;; This function calls:
  7947 ;;		_spiwrite
  7948 ;; This function is called by:
  7949 ;;		_Rcmd1
  7950 ;;		_Rcmd2red
  7951 ;;		_Rcmd3
  7952 ;;		_setAddrWindow
  7953 ;;		_TFT_GreenTab_Initialize
  7954 ;;		_Bcmd
  7955 ;;		_setScrollDefinition
  7956 ;;		_Rcmd2green
  7957 ;;		_VerticalScroll
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text30
  7962  002506                     __ptext30:
  7963                           	opt stack 0
  7964  002506                     _write_command:
  7965                           	opt stack 20
  7966                           
  7967                           ;incstack = 0
  7968                           ;write_command@cmd_ stored from wreg
  7969  002506  6E13               	movwf	write_command@cmd_,c
  7970                           
  7971                           ;ST7735_TFT.c: 201: PORTBbits.RB5 = 0;
  7972  002508  9A81               	bcf	3969,5,c	;volatile
  7973                           
  7974                           ;ST7735_TFT.c: 203: PORTBbits.RB0 = 0;
  7975  00250A  9081               	bcf	3969,0,c	;volatile
  7976                           
  7977                           ;ST7735_TFT.c: 204: spiwrite(cmd_);
  7978  00250C  5013               	movf	write_command@cmd_,w,c
  7979  00250E  EC3A  F012         	call	_spiwrite
  7980                           
  7981                           ;ST7735_TFT.c: 206: PORTBbits.RB5 = 1;
  7982  002512  8A81               	bsf	3969,5,c	;volatile
  7983  002514  0012               	return		;funcret
  7984  002516                     __end_of_write_command:
  7985                           	opt stack 0
  7986                           tblptru	equ	0xFF8
  7987                           tblptrh	equ	0xFF7
  7988                           tblptrl	equ	0xFF6
  7989                           tablat	equ	0xFF5
  7990                           prodh	equ	0xFF4
  7991                           prodl	equ	0xFF3
  7992                           intcon	equ	0xFF2
  7993                           intcon2	equ	0xFF1
  7994                           postinc0	equ	0xFEE
  7995                           wreg	equ	0xFE8
  7996                           postdec1	equ	0xFE5
  7997                           fsr1l	equ	0xFE1
  7998                           indf2	equ	0xFDF
  7999                           postinc2	equ	0xFDE
  8000                           postdec2	equ	0xFDD
  8001                           fsr2h	equ	0xFDA
  8002                           fsr2l	equ	0xFD9
  8003                           status	equ	0xFD8
  8004                           
  8005 ;; *************** function _spiwrite *****************
  8006 ;; Defined at:
  8007 ;;		line 190 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  spidata         1    wreg     unsigned char 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  spidata         1   17[COMRAM] unsigned char 
  8012 ;;  x               1   16[COMRAM] unsigned char 
  8013 ;; Return value:  Size  Location     Type
  8014 ;;		None               void
  8015 ;; Registers used:
  8016 ;;		wreg
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8026 ;;Total ram usage:        2 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:    3
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_write_command
  8033 ;;		_write_data
  8034 ;;		_drawFastVLine
  8035 ;;		_fillRectangle
  8036 ;;		_drawFastHLine
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text31
  8041  002474                     __ptext31:
  8042                           	opt stack 0
  8043  002474                     _spiwrite:
  8044                           	opt stack 22
  8045                           
  8046                           ;incstack = 0
  8047                           ;spiwrite@spidata stored from wreg
  8048  002474  6E12               	movwf	spiwrite@spidata,c
  8049                           
  8050                           ;ST7735_TFT.c: 192: char x;
  8051                           ;ST7735_TFT.c: 193: PIR1bits.SSPIF = 0;
  8052  002476  969E               	bcf	3998,3,c	;volatile
  8053                           
  8054                           ;ST7735_TFT.c: 194: x = SSPBUF;
  8055  002478  CFC9 F011          	movff	4041,spiwrite@x	;volatile
  8056                           
  8057                           ;ST7735_TFT.c: 195: SSPBUF = spidata;
  8058  00247C  C012  FFC9         	movff	spiwrite@spidata,4041	;volatile
  8059                           
  8060                           ;ST7735_TFT.c: 196: while (!SSPSTATbits.BF);
  8061  002480  D000               	goto	l295
  8062  002482                     l295:
  8063  002482  A0C7               	btfss	4039,0,c	;volatile
  8064  002484  D7FE               	goto	l295
  8065  002486  0012               	return		;funcret
  8066  002488                     __end_of_spiwrite:
  8067                           	opt stack 0
  8068                           tblptru	equ	0xFF8
  8069                           tblptrh	equ	0xFF7
  8070                           tblptrl	equ	0xFF6
  8071                           tablat	equ	0xFF5
  8072                           prodh	equ	0xFF4
  8073                           prodl	equ	0xFF3
  8074                           intcon	equ	0xFF2
  8075                           intcon2	equ	0xFF1
  8076                           postinc0	equ	0xFEE
  8077                           wreg	equ	0xFE8
  8078                           postdec1	equ	0xFE5
  8079                           fsr1l	equ	0xFE1
  8080                           indf2	equ	0xFDF
  8081                           postinc2	equ	0xFDE
  8082                           postdec2	equ	0xFDD
  8083                           fsr2h	equ	0xFDA
  8084                           fsr2l	equ	0xFD9
  8085                           status	equ	0xFD8
  8086                           
  8087 ;; *************** function _LCD_Reset *****************
  8088 ;; Defined at:
  8089 ;;		line 218 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;		None
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;		None               void
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    5
  8110 ;; This function calls:
  8111 ;;		_delay_ms
  8112 ;; This function is called by:
  8113 ;;		_Initialize_Screen
  8114 ;; This function uses a non-reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text32
  8118  00249C                     __ptext32:
  8119                           	opt stack 0
  8120  00249C                     _LCD_Reset:
  8121                           	opt stack 24
  8122                           
  8123                           ;ST7735_TFT.c: 220: PORTCbits.RC1 = 0;
  8124                           
  8125                           ;incstack = 0
  8126  00249C  9282               	bcf	3970,1,c	;volatile
  8127                           
  8128                           ;ST7735_TFT.c: 221: delay_ms(100);
  8129  00249E  0E00               	movlw	0
  8130  0024A0  6E18               	movwf	delay_ms@ms+1,c
  8131  0024A2  0E64               	movlw	100
  8132  0024A4  6E17               	movwf	delay_ms@ms,c
  8133  0024A6  EC89  F00F         	call	_delay_ms	;wreg free
  8134                           
  8135                           ;ST7735_TFT.c: 222: PORTCbits.RC1 = 1;
  8136  0024AA  8282               	bsf	3970,1,c	;volatile
  8137  0024AC  0012               	return		;funcret
  8138  0024AE                     __end_of_LCD_Reset:
  8139                           	opt stack 0
  8140                           tblptru	equ	0xFF8
  8141                           tblptrh	equ	0xFF7
  8142                           tblptrl	equ	0xFF6
  8143                           tablat	equ	0xFF5
  8144                           prodh	equ	0xFF4
  8145                           prodl	equ	0xFF3
  8146                           intcon	equ	0xFF2
  8147                           intcon2	equ	0xFF1
  8148                           postinc0	equ	0xFEE
  8149                           wreg	equ	0xFE8
  8150                           postdec1	equ	0xFE5
  8151                           fsr1l	equ	0xFE1
  8152                           indf2	equ	0xFDF
  8153                           postinc2	equ	0xFDE
  8154                           postdec2	equ	0xFDD
  8155                           fsr2h	equ	0xFDA
  8156                           fsr2l	equ	0xFD9
  8157                           status	equ	0xFD8
  8158                           
  8159 ;; *************** function _delay_ms *****************
  8160 ;; Defined at:
  8161 ;;		line 65 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/ST7735_TFT.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  ms              2   22[COMRAM] int 
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  count           2   26[COMRAM] int 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;		None               void
  8168 ;; Registers used:
  8169 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;Total ram usage:        6 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:    4
  8182 ;; This function calls:
  8183 ;;		___wmul
  8184 ;; This function is called by:
  8185 ;;		_LCD_Reset
  8186 ;;		_Rcmd1
  8187 ;;		_Rcmd3
  8188 ;;		_Bcmd
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text33
  8193  001F12                     __ptext33:
  8194                           	opt stack 0
  8195  001F12                     _delay_ms:
  8196                           	opt stack 23
  8197                           
  8198                           ;ST7735_TFT.c: 71: int count;
  8199                           ;ST7735_TFT.c: 72: count = 8000000/4000/16 * ms;
  8200                           
  8201                           ;incstack = 0
  8202  001F12  C017  F011         	movff	delay_ms@ms,___wmul@multiplier
  8203  001F16  C018  F012         	movff	delay_ms@ms+1,___wmul@multiplier+1
  8204  001F1A  0E00               	movlw	0
  8205  001F1C  6E14               	movwf	___wmul@multiplicand+1,c
  8206  001F1E  0E7D               	movlw	125
  8207  001F20  6E13               	movwf	___wmul@multiplicand,c
  8208  001F22  EC51  F011         	call	___wmul	;wreg free
  8209  001F26  C011  F01B         	movff	?___wmul,delay_ms@count
  8210  001F2A  C012  F01C         	movff	?___wmul+1,delay_ms@count+1
  8211                           
  8212                           ;ST7735_TFT.c: 73: count = (0xffff - count);
  8213  001F2E  C01B  F019         	movff	delay_ms@count,??_delay_ms
  8214  001F32  C01C  F01A         	movff	delay_ms@count+1,??_delay_ms+1
  8215  001F36  1E19               	comf	??_delay_ms,f,c
  8216  001F38  1E1A               	comf	??_delay_ms+1,f,c
  8217  001F3A  4A19               	infsnz	??_delay_ms,f,c
  8218  001F3C  2A1A               	incf	??_delay_ms+1,f,c
  8219  001F3E  0EFF               	movlw	255
  8220  001F40  2419               	addwf	??_delay_ms,w,c
  8221  001F42  6E1B               	movwf	delay_ms@count,c
  8222  001F44  0EFF               	movlw	255
  8223  001F46  201A               	addwfc	??_delay_ms+1,w,c
  8224  001F48  6E1C               	movwf	delay_ms@count+1,c
  8225                           
  8226                           ;ST7735_TFT.c: 75: T0CON = 0x03;
  8227  001F4A  0E03               	movlw	3
  8228  001F4C  6ED5               	movwf	4053,c	;volatile
  8229                           
  8230                           ;ST7735_TFT.c: 77: TMR0L = count & 0x00ff;
  8231  001F4E  C01B  FFD6         	movff	delay_ms@count,4054	;volatile
  8232                           
  8233                           ;ST7735_TFT.c: 78: TMR0H = count >> 8;
  8234  001F52  501C               	movf	delay_ms@count+1,w,c
  8235  001F54  6ED7               	movwf	4055,c	;volatile
  8236                           
  8237                           ;ST7735_TFT.c: 80: INTCONbits.TMR0IF = 0;
  8238  001F56  94F2               	bcf	intcon,2,c	;volatile
  8239                           
  8240                           ;ST7735_TFT.c: 81: T0CONbits.TMR0ON = 1;
  8241  001F58  8ED5               	bsf	4053,7,c	;volatile
  8242                           
  8243                           ;ST7735_TFT.c: 83: while (INTCONbits.TMR0IF == 0);
  8244  001F5A  D000               	goto	l285
  8245  001F5C                     l285:
  8246  001F5C  A4F2               	btfss	intcon,2,c	;volatile
  8247  001F5E  D7FE               	goto	l285
  8248                           
  8249                           ;ST7735_TFT.c: 84: T0CONbits.TMR0ON = 0;
  8250  001F60  9ED5               	bcf	4053,7,c	;volatile
  8251  001F62  0012               	return		;funcret
  8252  001F64                     __end_of_delay_ms:
  8253                           	opt stack 0
  8254                           tblptru	equ	0xFF8
  8255                           tblptrh	equ	0xFF7
  8256                           tblptrl	equ	0xFF6
  8257                           tablat	equ	0xFF5
  8258                           prodh	equ	0xFF4
  8259                           prodl	equ	0xFF3
  8260                           intcon	equ	0xFF2
  8261                           intcon2	equ	0xFF1
  8262                           postinc0	equ	0xFEE
  8263                           wreg	equ	0xFE8
  8264                           postdec1	equ	0xFE5
  8265                           fsr1l	equ	0xFE1
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           postdec2	equ	0xFDD
  8269                           fsr2h	equ	0xFDA
  8270                           fsr2l	equ	0xFD9
  8271                           status	equ	0xFD8
  8272                           
  8273 ;; *************** function ___wmul *****************
  8274 ;; Defined at:
  8275 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  multiplier      2   16[COMRAM] unsigned int 
  8278 ;;  multiplicand    2   18[COMRAM] unsigned int 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  product         2   20[COMRAM] unsigned int 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  2   16[COMRAM] unsigned int 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0, prodl, prodh
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8294 ;;Total ram usage:        6 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    3
  8297 ;; This function calls:
  8298 ;;		Nothing
  8299 ;; This function is called by:
  8300 ;;		_get_RPM
  8301 ;;		_delay_ms
  8302 ;;		_drawChar
  8303 ;;		_main
  8304 ;;		_printf
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text34
  8309  0022A2                     __ptext34:
  8310                           	opt stack 0
  8311  0022A2                     ___wmul:
  8312                           	opt stack 26
  8313                           
  8314                           ;incstack = 0
  8315  0022A2  5011               	movf	___wmul@multiplier,w,c
  8316  0022A4  0213               	mulwf	___wmul@multiplicand,c
  8317  0022A6  CFF3 F015          	movff	prodl,___wmul@product
  8318  0022AA  CFF4 F016          	movff	prodh,___wmul@product+1
  8319  0022AE  5011               	movf	___wmul@multiplier,w,c
  8320  0022B0  0214               	mulwf	___wmul@multiplicand+1,c
  8321  0022B2  50F3               	movf	prodl,w,c
  8322  0022B4  2616               	addwf	___wmul@product+1,f,c
  8323  0022B6  5012               	movf	___wmul@multiplier+1,w,c
  8324  0022B8  0213               	mulwf	___wmul@multiplicand,c
  8325  0022BA  50F3               	movf	prodl,w,c
  8326  0022BC  2616               	addwf	___wmul@product+1,f,c
  8327  0022BE  C015  F011         	movff	___wmul@product,?___wmul
  8328  0022C2  C016  F012         	movff	___wmul@product+1,?___wmul+1
  8329  0022C6  D000               	goto	l874
  8330  0022C8                     l874:
  8331  0022C8  0012               	return		;funcret
  8332  0022CA                     __end_of___wmul:
  8333                           	opt stack 0
  8334                           tblptru	equ	0xFF8
  8335                           tblptrh	equ	0xFF7
  8336                           tblptrl	equ	0xFF6
  8337                           tablat	equ	0xFF5
  8338                           prodh	equ	0xFF4
  8339                           prodl	equ	0xFF3
  8340                           intcon	equ	0xFF2
  8341                           intcon2	equ	0xFF1
  8342                           postinc0	equ	0xFEE
  8343                           wreg	equ	0xFE8
  8344                           postdec1	equ	0xFE5
  8345                           fsr1l	equ	0xFE1
  8346                           indf2	equ	0xFDF
  8347                           postinc2	equ	0xFDE
  8348                           postdec2	equ	0xFDD
  8349                           fsr2h	equ	0xFDA
  8350                           fsr2l	equ	0xFD9
  8351                           status	equ	0xFD8
  8352                           
  8353 ;; *************** function _Increase_Speed *****************
  8354 ;; Defined at:
  8355 ;;		line 45 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Fan_Support.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;		None
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;		None
  8360 ;; Return value:  Size  Location     Type
  8361 ;;		None               void
  8362 ;; Registers used:
  8363 ;;		wreg, status,2, status,0, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;Total ram usage:        0 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    6
  8376 ;; This function calls:
  8377 ;;		_Do_Beep
  8378 ;;		_do_update_pwm
  8379 ;; This function is called by:
  8380 ;;		_main
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text35
  8385  0023C6                     __ptext35:
  8386                           	opt stack 0
  8387  0023C6                     _Increase_Speed:
  8388                           	opt stack 24
  8389                           
  8390                           ;Fan_Support.c: 47: if (duty_cycle == 100) {Do_Beep();Do_Beep;}
  8391                           
  8392                           ;incstack = 0
  8393  0023C6  0E64               	movlw	100
  8394  0023C8  185C               	xorwf	_duty_cycle,w,c
  8395  0023CA  A4D8               	btfss	status,2,c
  8396  0023CC  D003               	goto	l6484
  8397  0023CE  EC24  F012         	call	_Do_Beep	;wreg free
  8398  0023D2  D006               	goto	l49
  8399  0023D4                     l6484:
  8400                           
  8401                           ;Fan_Support.c: 48: else {duty_cycle += 5;do_update_pwm(duty_cycle);}
  8402  0023D4  0E05               	movlw	5
  8403  0023D6  265C               	addwf	_duty_cycle,f,c
  8404  0023D8  505C               	movf	_duty_cycle,w,c
  8405  0023DA  EC8F  F00C         	call	_do_update_pwm
  8406  0023DE  D000               	goto	l49
  8407  0023E0                     l49:
  8408  0023E0  0012               	return		;funcret
  8409  0023E2                     __end_of_Increase_Speed:
  8410                           	opt stack 0
  8411                           tblptru	equ	0xFF8
  8412                           tblptrh	equ	0xFF7
  8413                           tblptrl	equ	0xFF6
  8414                           tablat	equ	0xFF5
  8415                           prodh	equ	0xFF4
  8416                           prodl	equ	0xFF3
  8417                           intcon	equ	0xFF2
  8418                           intcon2	equ	0xFF1
  8419                           postinc0	equ	0xFEE
  8420                           wreg	equ	0xFE8
  8421                           postdec1	equ	0xFE5
  8422                           fsr1l	equ	0xFE1
  8423                           indf2	equ	0xFDF
  8424                           postinc2	equ	0xFDE
  8425                           postdec2	equ	0xFDD
  8426                           fsr2h	equ	0xFDA
  8427                           fsr2l	equ	0xFD9
  8428                           status	equ	0xFD8
  8429                           
  8430 ;; *************** function _Do_Init *****************
  8431 ;; Defined at:
  8432 ;;		line 116 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Lab12_ex.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;		None
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;		None               void
  8439 ;; Registers used:
  8440 ;;		wreg, status,2, status,0, cstack
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8450 ;;Total ram usage:        0 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; Hardware stack levels required when called:    7
  8453 ;; This function calls:
  8454 ;;		_DS1621_Init
  8455 ;;		_I2C_Init
  8456 ;;		_init_INTERRUPT
  8457 ;;		_init_UART
  8458 ;; This function is called by:
  8459 ;;		_main
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text36
  8464  002090                     __ptext36:
  8465                           	opt stack 0
  8466  002090                     _Do_Init:
  8467                           	opt stack 23
  8468                           
  8469                           ;Lab12_ex.c: 118: init_UART();
  8470                           
  8471                           ;incstack = 0
  8472  002090  EC44  F012         	call	_init_UART	;wreg free
  8473                           
  8474                           ;Lab12_ex.c: 119: OSCCON=0x70;
  8475  002094  0E70               	movlw	112
  8476  002096  6ED3               	movwf	4051,c	;volatile
  8477                           
  8478                           ;Lab12_ex.c: 121: ADCON1=0x0F;
  8479  002098  0E0F               	movlw	15
  8480  00209A  6EC1               	movwf	4033,c	;volatile
  8481                           
  8482                           ;Lab12_ex.c: 122: TRISA = 0x00;
  8483  00209C  0E00               	movlw	0
  8484  00209E  6E92               	movwf	3986,c	;volatile
  8485                           
  8486                           ;Lab12_ex.c: 123: TRISB = 0x01;
  8487  0020A0  0E01               	movlw	1
  8488  0020A2  6E93               	movwf	3987,c	;volatile
  8489                           
  8490                           ;Lab12_ex.c: 124: TRISC = 0x01;
  8491  0020A4  0E01               	movlw	1
  8492  0020A6  6E94               	movwf	3988,c	;volatile
  8493                           
  8494                           ;Lab12_ex.c: 125: TRISD = 0x00;
  8495  0020A8  0E00               	movlw	0
  8496  0020AA  6E95               	movwf	3989,c	;volatile
  8497                           
  8498                           ;Lab12_ex.c: 128: RBPU=0;
  8499  0020AC  9EF1               	bcf	intcon2,7,c	;volatile
  8500                           
  8501                           ;Lab12_ex.c: 129: TMR3L = 0x00;
  8502  0020AE  0E00               	movlw	0
  8503  0020B0  6EB2               	movwf	4018,c	;volatile
  8504                           
  8505                           ;Lab12_ex.c: 130: T3CON = 0x03;
  8506  0020B2  0E03               	movlw	3
  8507  0020B4  6EB1               	movwf	4017,c	;volatile
  8508                           
  8509                           ;Lab12_ex.c: 131: I2C_Init(100000);
  8510  0020B6  0EA0               	movlw	160
  8511  0020B8  6E11               	movwf	I2C_Init@c,c
  8512  0020BA  0E86               	movlw	134
  8513  0020BC  6E12               	movwf	I2C_Init@c+1,c
  8514  0020BE  0E01               	movlw	1
  8515  0020C0  6E13               	movwf	I2C_Init@c+2,c
  8516  0020C2  0E00               	movlw	0
  8517  0020C4  6E14               	movwf	I2C_Init@c+3,c
  8518  0020C6  EC9E  F012         	call	_I2C_Init	;wreg free
  8519                           
  8520                           ;Lab12_ex.c: 133: DS1621_Init();
  8521  0020CA  ECB8  F011         	call	_DS1621_Init	;wreg free
  8522                           
  8523                           ;Lab12_ex.c: 134: init_INTERRUPT();
  8524  0020CE  ECA9  F011         	call	_init_INTERRUPT	;wreg free
  8525                           
  8526                           ;Lab12_ex.c: 135: FAN = 0;
  8527  0020D2  0E00               	movlw	0
  8528  0020D4  6E50               	movwf	_FAN,c
  8529  0020D6  0012               	return		;funcret
  8530  0020D8                     __end_of_Do_Init:
  8531                           	opt stack 0
  8532                           tblptru	equ	0xFF8
  8533                           tblptrh	equ	0xFF7
  8534                           tblptrl	equ	0xFF6
  8535                           tablat	equ	0xFF5
  8536                           prodh	equ	0xFF4
  8537                           prodl	equ	0xFF3
  8538                           intcon	equ	0xFF2
  8539                           intcon2	equ	0xFF1
  8540                           postinc0	equ	0xFEE
  8541                           wreg	equ	0xFE8
  8542                           postdec1	equ	0xFE5
  8543                           fsr1l	equ	0xFE1
  8544                           indf2	equ	0xFDF
  8545                           postinc2	equ	0xFDE
  8546                           postdec2	equ	0xFDD
  8547                           fsr2h	equ	0xFDA
  8548                           fsr2l	equ	0xFD9
  8549                           status	equ	0xFD8
  8550                           
  8551 ;; *************** function _init_UART *****************
  8552 ;; Defined at:
  8553 ;;		line 110 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Lab12_ex.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;		None
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;		None
  8558 ;; Return value:  Size  Location     Type
  8559 ;;		None               void
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;Total ram usage:        0 bytes
  8572 ;; Hardware stack levels used:    1
  8573 ;; Hardware stack levels required when called:    4
  8574 ;; This function calls:
  8575 ;;		_OpenUSART
  8576 ;; This function is called by:
  8577 ;;		_Do_Init
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           	psect	text37
  8582  002488                     __ptext37:
  8583                           	opt stack 0
  8584  002488                     _init_UART:
  8585                           	opt stack 25
  8586                           
  8587                           ;Lab12_ex.c: 112: OpenUSART (0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111
      +                          111 & 0b11111111, 25);
  8588                           
  8589                           ;incstack = 0
  8590  002488  0E00               	movlw	0
  8591  00248A  6E12               	movwf	OpenUSART@spbrg+1,c
  8592  00248C  0E19               	movlw	25
  8593  00248E  6E11               	movwf	OpenUSART@spbrg,c
  8594  002490  0E3C               	movlw	60
  8595  002492  ECB6  F00E         	call	_OpenUSART
  8596                           
  8597                           ;Lab12_ex.c: 113: OSCCON = 0x70;
  8598  002496  0E70               	movlw	112
  8599  002498  6ED3               	movwf	4051,c	;volatile
  8600  00249A  0012               	return		;funcret
  8601  00249C                     __end_of_init_UART:
  8602                           	opt stack 0
  8603                           tblptru	equ	0xFF8
  8604                           tblptrh	equ	0xFF7
  8605                           tblptrl	equ	0xFF6
  8606                           tablat	equ	0xFF5
  8607                           prodh	equ	0xFF4
  8608                           prodl	equ	0xFF3
  8609                           intcon	equ	0xFF2
  8610                           intcon2	equ	0xFF1
  8611                           postinc0	equ	0xFEE
  8612                           wreg	equ	0xFE8
  8613                           postdec1	equ	0xFE5
  8614                           fsr1l	equ	0xFE1
  8615                           indf2	equ	0xFDF
  8616                           postinc2	equ	0xFDE
  8617                           postdec2	equ	0xFDD
  8618                           fsr2h	equ	0xFDA
  8619                           fsr2l	equ	0xFD9
  8620                           status	equ	0xFD8
  8621                           
  8622 ;; *************** function _OpenUSART *****************
  8623 ;; Defined at:
  8624 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  config          1    wreg     unsigned char 
  8627 ;;  spbrg           2   16[COMRAM] unsigned int 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  config          1   18[COMRAM] unsigned char 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;		None               void
  8632 ;; Registers used:
  8633 ;;		wreg, status,2
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8642 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;Total ram usage:        3 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    3
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_init_UART
  8650 ;; This function uses a non-reentrant model
  8651 ;;
  8652                           
  8653                           	psect	text38
  8654  001D6C                     __ptext38:
  8655                           	opt stack 0
  8656  001D6C                     _OpenUSART:
  8657                           	opt stack 25
  8658                           
  8659                           ;incstack = 0
  8660                           ;OpenUSART@config stored from wreg
  8661  001D6C  6E13               	movwf	OpenUSART@config,c
  8662  001D6E  0E00               	movlw	0
  8663  001D70  6EAC               	movwf	4012,c	;volatile
  8664  001D72  0E00               	movlw	0
  8665  001D74  6EAB               	movwf	4011,c	;volatile
  8666  001D76  A013               	btfss	OpenUSART@config,0,c
  8667  001D78  D002               	goto	l6126
  8668  001D7A  88AC               	bsf	4012,4,c	;volatile
  8669  001D7C  D000               	goto	l6126
  8670  001D7E                     l6126:
  8671  001D7E  A213               	btfss	OpenUSART@config,1,c
  8672  001D80  D003               	goto	l6130
  8673  001D82  8CAC               	bsf	4012,6,c	;volatile
  8674  001D84  8CAB               	bsf	4011,6,c	;volatile
  8675  001D86  D000               	goto	l6130
  8676  001D88                     l6130:
  8677  001D88  A413               	btfss	OpenUSART@config,2,c
  8678  001D8A  D002               	goto	l6134
  8679  001D8C  8EAC               	bsf	4012,7,c	;volatile
  8680  001D8E  D000               	goto	l6134
  8681  001D90                     l6134:
  8682  001D90  A613               	btfss	OpenUSART@config,3,c
  8683  001D92  D002               	goto	l862
  8684  001D94  88AB               	bsf	4011,4,c	;volatile
  8685  001D96  D002               	goto	l6138
  8686  001D98                     l862:
  8687  001D98  8AAB               	bsf	4011,5,c	;volatile
  8688  001D9A  D000               	goto	l6138
  8689  001D9C                     l6138:
  8690  001D9C  B813               	btfsc	OpenUSART@config,4,c
  8691  001D9E  84AC               	bsf	4012,2,c	;volatile
  8692  001DA0  989E               	bcf	3998,4,c	;volatile
  8693  001DA2  AA13               	btfss	OpenUSART@config,5,c
  8694  001DA4  D002               	goto	l6146
  8695  001DA6  86AB               	bsf	4011,3,c	;volatile
  8696  001DA8  D000               	goto	l6146
  8697  001DAA                     l6146:
  8698  001DAA  AC13               	btfss	OpenUSART@config,6,c
  8699  001DAC  D002               	goto	l866
  8700  001DAE  8A9D               	bsf	3997,5,c	;volatile
  8701  001DB0  D001               	goto	l867
  8702  001DB2                     l866:
  8703  001DB2  9A9D               	bcf	3997,5,c	;volatile
  8704  001DB4                     l867:
  8705  001DB4  9A9E               	bcf	3998,5,c	;volatile
  8706  001DB6  AE13               	btfss	OpenUSART@config,7,c
  8707  001DB8  D002               	goto	l868
  8708  001DBA  889D               	bsf	3997,4,c	;volatile
  8709  001DBC  D001               	goto	l869
  8710  001DBE                     l868:
  8711  001DBE  989D               	bcf	3997,4,c	;volatile
  8712  001DC0                     l869:
  8713  001DC0  C011  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  8714  001DC4  5012               	movf	OpenUSART@spbrg+1,w,c
  8715  001DC6  6EB0               	movwf	4016,c	;volatile
  8716  001DC8  8AAC               	bsf	4012,5,c	;volatile
  8717  001DCA  8EAB               	bsf	4011,7,c	;volatile
  8718  001DCC  9C94               	bcf	3988,6,c	;volatile
  8719  001DCE  8E94               	bsf	3988,7,c	;volatile
  8720  001DD0  B8AC               	btfsc	4012,4,c	;volatile
  8721  001DD2  BEAC               	btfsc	4012,7,c	;volatile
  8722  001DD4  D002               	goto	l871
  8723  001DD6  8C94               	bsf	3988,6,c	;volatile
  8724  001DD8  D000               	goto	l871
  8725  001DDA                     l871:
  8726  001DDA  0012               	return		;funcret
  8727  001DDC                     __end_of_OpenUSART:
  8728                           	opt stack 0
  8729                           tblptru	equ	0xFF8
  8730                           tblptrh	equ	0xFF7
  8731                           tblptrl	equ	0xFF6
  8732                           tablat	equ	0xFF5
  8733                           prodh	equ	0xFF4
  8734                           prodl	equ	0xFF3
  8735                           intcon	equ	0xFF2
  8736                           intcon2	equ	0xFF1
  8737                           postinc0	equ	0xFEE
  8738                           wreg	equ	0xFE8
  8739                           postdec1	equ	0xFE5
  8740                           fsr1l	equ	0xFE1
  8741                           indf2	equ	0xFDF
  8742                           postinc2	equ	0xFDE
  8743                           postdec2	equ	0xFDD
  8744                           fsr2h	equ	0xFDA
  8745                           fsr2l	equ	0xFD9
  8746                           status	equ	0xFD8
  8747                           
  8748 ;; *************** function _init_INTERRUPT *****************
  8749 ;; Defined at:
  8750 ;;		line 15 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Interrupt.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;		None
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;		None               void
  8757 ;; Registers used:
  8758 ;;		wreg, status,2
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8768 ;;Total ram usage:        0 bytes
  8769 ;; Hardware stack levels used:    1
  8770 ;; Hardware stack levels required when called:    3
  8771 ;; This function calls:
  8772 ;;		Nothing
  8773 ;; This function is called by:
  8774 ;;		_Do_Init
  8775 ;; This function uses a non-reentrant model
  8776 ;;
  8777                           
  8778                           	psect	text39
  8779  002352                     __ptext39:
  8780                           	opt stack 0
  8781  002352                     _init_INTERRUPT:
  8782                           	opt stack 26
  8783                           
  8784                           ;Interrupt.c: 17: OSCCON = 0x70;
  8785                           
  8786                           ;incstack = 0
  8787  002352  0E70               	movlw	112
  8788  002354  6ED3               	movwf	4051,c	;volatile
  8789                           
  8790                           ;Interrupt.c: 18: nRBPU = 0;
  8791  002356  9EF1               	bcf	intcon2,7,c	;volatile
  8792                           
  8793                           ;Interrupt.c: 19: INTCONbits.INT0IF = 0;
  8794  002358  92F2               	bcf	intcon,1,c	;volatile
  8795                           
  8796                           ;Interrupt.c: 20: INTCON2bits.INTEDG0 = 0;
  8797  00235A  9CF1               	bcf	intcon2,6,c	;volatile
  8798                           
  8799                           ;Interrupt.c: 21: INTCONbits.INT0IE = 1;
  8800  00235C  88F2               	bsf	intcon,4,c	;volatile
  8801                           
  8802                           ;Interrupt.c: 22: TMR1H = 0;
  8803  00235E  0E00               	movlw	0
  8804  002360  6ECF               	movwf	4047,c	;volatile
  8805                           
  8806                           ;Interrupt.c: 23: TMR1L = 0;
  8807  002362  0E00               	movlw	0
  8808  002364  6ECE               	movwf	4046,c	;volatile
  8809                           
  8810                           ;Interrupt.c: 24: PIR1bits.TMR1IF = 0;
  8811  002366  909E               	bcf	3998,0,c	;volatile
  8812                           
  8813                           ;Interrupt.c: 25: PIE1bits.TMR1IE = 1;
  8814  002368  809D               	bsf	3997,0,c	;volatile
  8815                           
  8816                           ;Interrupt.c: 26: INTCONbits.PEIE = 1;
  8817  00236A  8CF2               	bsf	intcon,6,c	;volatile
  8818                           
  8819                           ;Interrupt.c: 27: INTCONbits.GIE = 1;
  8820  00236C  8EF2               	bsf	intcon,7,c	;volatile
  8821  00236E  0012               	return		;funcret
  8822  002370                     __end_of_init_INTERRUPT:
  8823                           	opt stack 0
  8824                           tblptru	equ	0xFF8
  8825                           tblptrh	equ	0xFF7
  8826                           tblptrl	equ	0xFF6
  8827                           tablat	equ	0xFF5
  8828                           prodh	equ	0xFF4
  8829                           prodl	equ	0xFF3
  8830                           intcon	equ	0xFF2
  8831                           intcon2	equ	0xFF1
  8832                           postinc0	equ	0xFEE
  8833                           wreg	equ	0xFE8
  8834                           postdec1	equ	0xFE5
  8835                           fsr1l	equ	0xFE1
  8836                           indf2	equ	0xFDF
  8837                           postinc2	equ	0xFDE
  8838                           postdec2	equ	0xFDD
  8839                           fsr2h	equ	0xFDA
  8840                           fsr2l	equ	0xFD9
  8841                           status	equ	0xFD8
  8842                           
  8843 ;; *************** function _I2C_Init *****************
  8844 ;; Defined at:
  8845 ;;		line 54 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  c               4   16[COMRAM] unsigned long 
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;		None               void
  8852 ;; Registers used:
  8853 ;;		wreg, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;Total ram usage:        4 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; Hardware stack levels required when called:    4
  8866 ;; This function calls:
  8867 ;;		_i2cHighScl
  8868 ;;		_i2cHighSda
  8869 ;; This function is called by:
  8870 ;;		_Do_Init
  8871 ;; This function uses a non-reentrant model
  8872 ;;
  8873                           
  8874                           	psect	text40
  8875  00253C                     __ptext40:
  8876                           	opt stack 0
  8877  00253C                     _I2C_Init:
  8878                           	opt stack 25
  8879                           
  8880                           ;I2C_Soft.c: 56: i2cHighScl();
  8881                           
  8882                           ;incstack = 0
  8883  00253C  EC92  F012         	call	_i2cHighScl	;wreg free
  8884                           
  8885                           ;I2C_Soft.c: 57: i2cHighSda();
  8886  002540  ECB5  F012         	call	_i2cHighSda	;wreg free
  8887  002544  0012               	return		;funcret
  8888  002546                     __end_of_I2C_Init:
  8889                           	opt stack 0
  8890                           tblptru	equ	0xFF8
  8891                           tblptrh	equ	0xFF7
  8892                           tblptrl	equ	0xFF6
  8893                           tablat	equ	0xFF5
  8894                           prodh	equ	0xFF4
  8895                           prodl	equ	0xFF3
  8896                           intcon	equ	0xFF2
  8897                           intcon2	equ	0xFF1
  8898                           postinc0	equ	0xFEE
  8899                           wreg	equ	0xFE8
  8900                           postdec1	equ	0xFE5
  8901                           fsr1l	equ	0xFE1
  8902                           indf2	equ	0xFDF
  8903                           postinc2	equ	0xFDE
  8904                           postdec2	equ	0xFDD
  8905                           fsr2h	equ	0xFDA
  8906                           fsr2l	equ	0xFD9
  8907                           status	equ	0xFD8
  8908                           
  8909 ;; *************** function _DS1621_Init *****************
  8910 ;; Defined at:
  8911 ;;		line 21 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Support.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;		None
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  Device          1   21[COMRAM] unsigned char 
  8916 ;; Return value:  Size  Location     Type
  8917 ;;		None               void
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0, cstack
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;Total ram usage:        1 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    6
  8932 ;; This function calls:
  8933 ;;		_I2C_Write_Cmd_Only
  8934 ;;		_I2C_Write_Cmd_Write_Data
  8935 ;; This function is called by:
  8936 ;;		_Do_Init
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text41
  8941  002370                     __ptext41:
  8942                           	opt stack 0
  8943  002370                     _DS1621_Init:
  8944                           	opt stack 23
  8945                           
  8946                           ;I2C_Support.c: 23: char Device = 0x48;
  8947                           
  8948                           ;incstack = 0
  8949  002370  0E48               	movlw	72
  8950  002372  6E16               	movwf	DS1621_Init@Device,c
  8951                           
  8952                           ;I2C_Support.c: 24: I2C_Write_Cmd_Write_Data (Device, 0xAC, 0x02);
  8953  002374  0EAC               	movlw	172
  8954  002376  6E13               	movwf	I2C_Write_Cmd_Write_Data@Cmd,c
  8955  002378  0E02               	movlw	2
  8956  00237A  6E14               	movwf	I2C_Write_Cmd_Write_Data@Data_Out,c
  8957  00237C  5016               	movf	DS1621_Init@Device,w,c
  8958  00237E  EC99  F011         	call	_I2C_Write_Cmd_Write_Data
  8959                           
  8960                           ;I2C_Support.c: 25: I2C_Write_Cmd_Only(Device, 0xEE);
  8961  002382  0EEE               	movlw	238
  8962  002384  6E13               	movwf	I2C_Write_Cmd_Only@Cmd,c
  8963  002386  5016               	movf	DS1621_Init@Device,w,c
  8964  002388  ECFF  F011         	call	_I2C_Write_Cmd_Only
  8965  00238C  0012               	return		;funcret
  8966  00238E                     __end_of_DS1621_Init:
  8967                           	opt stack 0
  8968                           tblptru	equ	0xFF8
  8969                           tblptrh	equ	0xFF7
  8970                           tblptrl	equ	0xFF6
  8971                           tablat	equ	0xFF5
  8972                           prodh	equ	0xFF4
  8973                           prodl	equ	0xFF3
  8974                           intcon	equ	0xFF2
  8975                           intcon2	equ	0xFF1
  8976                           postinc0	equ	0xFEE
  8977                           wreg	equ	0xFE8
  8978                           postdec1	equ	0xFE5
  8979                           fsr1l	equ	0xFE1
  8980                           indf2	equ	0xFDF
  8981                           postinc2	equ	0xFDE
  8982                           postdec2	equ	0xFDD
  8983                           fsr2h	equ	0xFDA
  8984                           fsr2l	equ	0xFD9
  8985                           status	equ	0xFD8
  8986                           
  8987 ;; *************** function _I2C_Write_Cmd_Write_Data *****************
  8988 ;; Defined at:
  8989 ;;		line 158 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;  Device          1    wreg     unsigned char 
  8992 ;;  Cmd             1   18[COMRAM] unsigned char 
  8993 ;;  Data_Out        1   19[COMRAM] unsigned char 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  Device          1   20[COMRAM] unsigned char 
  8996 ;; Return value:  Size  Location     Type
  8997 ;;		None               void
  8998 ;; Registers used:
  8999 ;;		wreg, status,2, status,0, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9009 ;;Total ram usage:        3 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    5
  9012 ;; This function calls:
  9013 ;;		_I2C_Start
  9014 ;;		_I2C_Stop
  9015 ;;		_I2C_Write
  9016 ;; This function is called by:
  9017 ;;		_DS1621_Init
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text42
  9022  002332                     __ptext42:
  9023                           	opt stack 0
  9024  002332                     _I2C_Write_Cmd_Write_Data:
  9025                           	opt stack 23
  9026                           
  9027                           ;incstack = 0
  9028                           ;I2C_Write_Cmd_Write_Data@Device stored from wreg
  9029  002332  6E15               	movwf	I2C_Write_Cmd_Write_Data@Device,c
  9030                           
  9031                           ;I2C_Soft.c: 160: I2C_Start();
  9032  002334  EC69  F012         	call	_I2C_Start	;wreg free
  9033                           
  9034                           ;I2C_Soft.c: 161: I2C_Write((Device << 1) | 0);
  9035  002338  5015               	movf	I2C_Write_Cmd_Write_Data@Device,w,c
  9036  00233A  2415               	addwf	I2C_Write_Cmd_Write_Data@Device,w,c
  9037  00233C  ECCE  F010         	call	_I2C_Write
  9038                           
  9039                           ;I2C_Soft.c: 162: I2C_Write(Cmd);
  9040  002340  5013               	movf	I2C_Write_Cmd_Write_Data@Cmd,w,c
  9041  002342  ECCE  F010         	call	_I2C_Write
  9042                           
  9043                           ;I2C_Soft.c: 163: I2C_Write(Data_Out);
  9044  002346  5014               	movf	I2C_Write_Cmd_Write_Data@Data_Out,w,c
  9045  002348  ECCE  F010         	call	_I2C_Write
  9046                           
  9047                           ;I2C_Soft.c: 164: I2C_Stop();
  9048  00234C  EC60  F012         	call	_I2C_Stop	;wreg free
  9049  002350  0012               	return		;funcret
  9050  002352                     __end_of_I2C_Write_Cmd_Write_Data:
  9051                           	opt stack 0
  9052                           tblptru	equ	0xFF8
  9053                           tblptrh	equ	0xFF7
  9054                           tblptrl	equ	0xFF6
  9055                           tablat	equ	0xFF5
  9056                           prodh	equ	0xFF4
  9057                           prodl	equ	0xFF3
  9058                           intcon	equ	0xFF2
  9059                           intcon2	equ	0xFF1
  9060                           postinc0	equ	0xFEE
  9061                           wreg	equ	0xFE8
  9062                           postdec1	equ	0xFE5
  9063                           fsr1l	equ	0xFE1
  9064                           indf2	equ	0xFDF
  9065                           postinc2	equ	0xFDE
  9066                           postdec2	equ	0xFDD
  9067                           fsr2h	equ	0xFDA
  9068                           fsr2l	equ	0xFD9
  9069                           status	equ	0xFD8
  9070                           
  9071 ;; *************** function _I2C_Write_Cmd_Only *****************
  9072 ;; Defined at:
  9073 ;;		line 150 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  Device          1    wreg     unsigned char 
  9076 ;;  Cmd             1   18[COMRAM] unsigned char 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;  Device          1   19[COMRAM] unsigned char 
  9079 ;; Return value:  Size  Location     Type
  9080 ;;		None               void
  9081 ;; Registers used:
  9082 ;;		wreg, status,2, status,0, cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9088 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;Total ram usage:        2 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    5
  9095 ;; This function calls:
  9096 ;;		_I2C_Start
  9097 ;;		_I2C_Stop
  9098 ;;		_I2C_Write
  9099 ;; This function is called by:
  9100 ;;		_DS1621_Init
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text43
  9105  0023FE                     __ptext43:
  9106                           	opt stack 0
  9107  0023FE                     _I2C_Write_Cmd_Only:
  9108                           	opt stack 23
  9109                           
  9110                           ;incstack = 0
  9111                           ;I2C_Write_Cmd_Only@Device stored from wreg
  9112  0023FE  6E14               	movwf	I2C_Write_Cmd_Only@Device,c
  9113                           
  9114                           ;I2C_Soft.c: 152: I2C_Start();
  9115  002400  EC69  F012         	call	_I2C_Start	;wreg free
  9116                           
  9117                           ;I2C_Soft.c: 153: I2C_Write((Device << 1) | 0);
  9118  002404  5014               	movf	I2C_Write_Cmd_Only@Device,w,c
  9119  002406  2414               	addwf	I2C_Write_Cmd_Only@Device,w,c
  9120  002408  ECCE  F010         	call	_I2C_Write
  9121                           
  9122                           ;I2C_Soft.c: 154: I2C_Write(Cmd);
  9123  00240C  5013               	movf	I2C_Write_Cmd_Only@Cmd,w,c
  9124  00240E  ECCE  F010         	call	_I2C_Write
  9125                           
  9126                           ;I2C_Soft.c: 155: I2C_Stop();
  9127  002412  EC60  F012         	call	_I2C_Stop	;wreg free
  9128  002416  0012               	return		;funcret
  9129  002418                     __end_of_I2C_Write_Cmd_Only:
  9130                           	opt stack 0
  9131                           tblptru	equ	0xFF8
  9132                           tblptrh	equ	0xFF7
  9133                           tblptrl	equ	0xFF6
  9134                           tablat	equ	0xFF5
  9135                           prodh	equ	0xFF4
  9136                           prodl	equ	0xFF3
  9137                           intcon	equ	0xFF2
  9138                           intcon2	equ	0xFF1
  9139                           postinc0	equ	0xFEE
  9140                           wreg	equ	0xFE8
  9141                           postdec1	equ	0xFE5
  9142                           fsr1l	equ	0xFE1
  9143                           indf2	equ	0xFDF
  9144                           postinc2	equ	0xFDE
  9145                           postdec2	equ	0xFDD
  9146                           fsr2h	equ	0xFDA
  9147                           fsr2l	equ	0xFD9
  9148                           status	equ	0xFD8
  9149                           
  9150 ;; *************** function _Decrease_Speed *****************
  9151 ;; Defined at:
  9152 ;;		line 51 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Fan_Support.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;		None
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;		None
  9157 ;; Return value:  Size  Location     Type
  9158 ;;		None               void
  9159 ;; Registers used:
  9160 ;;		wreg, status,2, status,0, cstack
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9170 ;;Total ram usage:        0 bytes
  9171 ;; Hardware stack levels used:    1
  9172 ;; Hardware stack levels required when called:    6
  9173 ;; This function calls:
  9174 ;;		_Do_Beep
  9175 ;;		_do_update_pwm
  9176 ;; This function is called by:
  9177 ;;		_main
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text44
  9182  0023E2                     __ptext44:
  9183                           	opt stack 0
  9184  0023E2                     _Decrease_Speed:
  9185                           	opt stack 24
  9186                           
  9187                           ;Fan_Support.c: 53: if (duty_cycle == 100) {Do_Beep();Do_Beep;}
  9188                           
  9189                           ;incstack = 0
  9190  0023E2  0E64               	movlw	100
  9191  0023E4  185C               	xorwf	_duty_cycle,w,c
  9192  0023E6  A4D8               	btfss	status,2,c
  9193  0023E8  D003               	goto	l6492
  9194  0023EA  EC24  F012         	call	_Do_Beep	;wreg free
  9195  0023EE  D006               	goto	l54
  9196  0023F0                     l6492:
  9197                           
  9198                           ;Fan_Support.c: 54: else {duty_cycle -= 5;do_update_pwm(duty_cycle);}
  9199  0023F0  0E05               	movlw	5
  9200  0023F2  5E5C               	subwf	_duty_cycle,f,c
  9201  0023F4  505C               	movf	_duty_cycle,w,c
  9202  0023F6  EC8F  F00C         	call	_do_update_pwm
  9203  0023FA  D000               	goto	l54
  9204  0023FC                     l54:
  9205  0023FC  0012               	return		;funcret
  9206  0023FE                     __end_of_Decrease_Speed:
  9207                           	opt stack 0
  9208                           tblptru	equ	0xFF8
  9209                           tblptrh	equ	0xFF7
  9210                           tblptrl	equ	0xFF6
  9211                           tablat	equ	0xFF5
  9212                           prodh	equ	0xFF4
  9213                           prodl	equ	0xFF3
  9214                           intcon	equ	0xFF2
  9215                           intcon2	equ	0xFF1
  9216                           postinc0	equ	0xFEE
  9217                           wreg	equ	0xFE8
  9218                           postdec1	equ	0xFE5
  9219                           fsr1l	equ	0xFE1
  9220                           indf2	equ	0xFDF
  9221                           postinc2	equ	0xFDE
  9222                           postdec2	equ	0xFDD
  9223                           fsr2h	equ	0xFDA
  9224                           fsr2l	equ	0xFD9
  9225                           status	equ	0xFD8
  9226                           
  9227 ;; *************** function _do_update_pwm *****************
  9228 ;; Defined at:
  9229 ;;		line 57 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Fan_Support.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;  duty_cycle      1    wreg     unsigned char 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  duty_cycle      1   64[COMRAM] unsigned char 
  9234 ;;  dc_f            3   61[COMRAM] float 
  9235 ;;  dc_I            2   65[COMRAM] int 
  9236 ;; Return value:  Size  Location     Type
  9237 ;;		None               void
  9238 ;; Registers used:
  9239 ;;		wreg, status,2, status,0, cstack
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9246 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9247 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9248 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9249 ;;Total ram usage:        9 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    5
  9252 ;; This function calls:
  9253 ;;		___ftdiv
  9254 ;;		___ftmul
  9255 ;;		___fttol
  9256 ;;		___lbtoft
  9257 ;; This function is called by:
  9258 ;;		_get_RPM
  9259 ;;		_Turn_On_Fan
  9260 ;;		_Increase_Speed
  9261 ;;		_Decrease_Speed
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           	psect	text45
  9266  00191E                     __ptext45:
  9267                           	opt stack 0
  9268  00191E                     _do_update_pwm:
  9269                           	opt stack 24
  9270                           
  9271                           ;incstack = 0
  9272                           ;do_update_pwm@duty_cycle stored from wreg
  9273  00191E  6E41               	movwf	do_update_pwm@duty_cycle,c
  9274                           
  9275                           ;Fan_Support.c: 59: float dc_f;
  9276                           ;Fan_Support.c: 60: int dc_I;
  9277                           ;Fan_Support.c: 61: PR2 = 0b00000100 ;
  9278  001920  0E04               	movlw	4
  9279  001922  6ECB               	movwf	4043,c	;volatile
  9280                           
  9281                           ;Fan_Support.c: 62: T2CON = 0b00000111 ;
  9282  001924  0E07               	movlw	7
  9283  001926  6ECA               	movwf	4042,c	;volatile
  9284                           
  9285                           ;Fan_Support.c: 63: dc_f = ( 4.0 * duty_cycle / 20.0) ;
  9286  001928  0E00               	movlw	0
  9287  00192A  6E20               	movwf	___ftmul@f2,c
  9288  00192C  0E80               	movlw	128
  9289  00192E  6E21               	movwf	___ftmul@f2+1,c
  9290  001930  0E40               	movlw	64
  9291  001932  6E22               	movwf	___ftmul@f2+2,c
  9292  001934  5041               	movf	do_update_pwm@duty_cycle,w,c
  9293  001936  EC65  F011         	call	___lbtoft
  9294  00193A  C019  F01D         	movff	?___lbtoft,___ftmul@f1
  9295  00193E  C01A  F01E         	movff	?___lbtoft+1,___ftmul@f1+1
  9296  001942  C01B  F01F         	movff	?___lbtoft+2,___ftmul@f1+2
  9297  001946  ECE5  F009         	call	___ftmul	;wreg free
  9298  00194A  C01D  F02C         	movff	?___ftmul,___ftdiv@f1
  9299  00194E  C01E  F02D         	movff	?___ftmul+1,___ftdiv@f1+1
  9300  001952  C01F  F02E         	movff	?___ftmul+2,___ftdiv@f1+2
  9301  001956  0E00               	movlw	0
  9302  001958  6E2F               	movwf	___ftdiv@f2,c
  9303  00195A  0EA0               	movlw	160
  9304  00195C  6E30               	movwf	___ftdiv@f2+1,c
  9305  00195E  0E41               	movlw	65
  9306  001960  6E31               	movwf	___ftdiv@f2+2,c
  9307  001962  EC4D  F00B         	call	___ftdiv	;wreg free
  9308  001966  C02C  F03E         	movff	?___ftdiv,do_update_pwm@dc_f
  9309  00196A  C02D  F03F         	movff	?___ftdiv+1,do_update_pwm@dc_f+1
  9310  00196E  C02E  F040         	movff	?___ftdiv+2,do_update_pwm@dc_f+2
  9311                           
  9312                           ;Fan_Support.c: 65: dc_I = (int) dc_f;
  9313  001972  C03E  F011         	movff	do_update_pwm@dc_f,___fttol@f1
  9314  001976  C03F  F012         	movff	do_update_pwm@dc_f+1,___fttol@f1+1
  9315  00197A  C040  F013         	movff	do_update_pwm@dc_f+2,___fttol@f1+2
  9316  00197E  ECDA  F00A         	call	___fttol	;wreg free
  9317  001982  C011  F042         	movff	?___fttol,do_update_pwm@dc_I
  9318  001986  C012  F043         	movff	?___fttol+1,do_update_pwm@dc_I+1
  9319                           
  9320                           ;Fan_Support.c: 66: if (dc_I > duty_cycle) dc_I++;
  9321  00198A  5041               	movf	do_update_pwm@duty_cycle,w,c
  9322  00198C  6E3B               	movwf	??_do_update_pwm& (0+255),c
  9323  00198E  6A3C               	clrf	(??_do_update_pwm+1)& (0+255),c
  9324  001990  5042               	movf	do_update_pwm@dc_I,w,c
  9325  001992  5C3B               	subwf	??_do_update_pwm,w,c
  9326  001994  503C               	movf	??_do_update_pwm+1,w,c
  9327  001996  0A80               	xorlw	128
  9328  001998  6E3D               	movwf	(??_do_update_pwm+2)& (0+255),c
  9329  00199A  5043               	movf	do_update_pwm@dc_I+1,w,c
  9330  00199C  0A80               	xorlw	128
  9331  00199E  583D               	subwfb	(??_do_update_pwm+2)& (0+255),w,c
  9332  0019A0  B0D8               	btfsc	status,0,c
  9333  0019A2  D003               	goto	l5738
  9334  0019A4  4A42               	infsnz	do_update_pwm@dc_I,f,c
  9335  0019A6  2A43               	incf	do_update_pwm@dc_I+1,f,c
  9336  0019A8  D000               	goto	l5738
  9337  0019AA                     l5738:
  9338                           
  9339                           ;Fan_Support.c: 67: CCP1CON = ((dc_I & 0x03) << 4) | 0b00001100;
  9340  0019AA  C042  F03B         	movff	do_update_pwm@dc_I,??_do_update_pwm
  9341  0019AE  0E03               	movlw	3
  9342  0019B0  163B               	andwf	??_do_update_pwm,f,c
  9343  0019B2  383B               	swapf	??_do_update_pwm,w,c
  9344  0019B4  0BF0               	andlw	240
  9345  0019B6  090C               	iorlw	12
  9346  0019B8  6EBD               	movwf	4029,c	;volatile
  9347                           
  9348                           ;Fan_Support.c: 68: CCPR1L = (dc_I) >> 2;
  9349  0019BA  C042  F03B         	movff	do_update_pwm@dc_I,??_do_update_pwm
  9350  0019BE  C043  F03C         	movff	do_update_pwm@dc_I+1,??_do_update_pwm+1
  9351  0019C2  343C               	rlcf	??_do_update_pwm+1,w,c
  9352  0019C4  323C               	rrcf	??_do_update_pwm+1,f,c
  9353  0019C6  323B               	rrcf	??_do_update_pwm,f,c
  9354  0019C8  343C               	rlcf	??_do_update_pwm+1,w,c
  9355  0019CA  323C               	rrcf	??_do_update_pwm+1,f,c
  9356  0019CC  323B               	rrcf	??_do_update_pwm,f,c
  9357  0019CE  503B               	movf	??_do_update_pwm,w,c
  9358  0019D0  6EBE               	movwf	4030,c	;volatile
  9359  0019D2  0012               	return		;funcret
  9360  0019D4                     __end_of_do_update_pwm:
  9361                           	opt stack 0
  9362                           tblptru	equ	0xFF8
  9363                           tblptrh	equ	0xFF7
  9364                           tblptrl	equ	0xFF6
  9365                           tablat	equ	0xFF5
  9366                           prodh	equ	0xFF4
  9367                           prodl	equ	0xFF3
  9368                           intcon	equ	0xFF2
  9369                           intcon2	equ	0xFF1
  9370                           postinc0	equ	0xFEE
  9371                           wreg	equ	0xFE8
  9372                           postdec1	equ	0xFE5
  9373                           fsr1l	equ	0xFE1
  9374                           indf2	equ	0xFDF
  9375                           postinc2	equ	0xFDE
  9376                           postdec2	equ	0xFDD
  9377                           fsr2h	equ	0xFDA
  9378                           fsr2l	equ	0xFD9
  9379                           status	equ	0xFD8
  9380                           
  9381 ;; *************** function ___lbtoft *****************
  9382 ;; Defined at:
  9383 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;  c               1    wreg     unsigned char 
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;  c               1   27[COMRAM] unsigned char 
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  3   24[COMRAM] float 
  9390 ;; Registers used:
  9391 ;;		wreg, status,2, status,0, cstack
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9397 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9400 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;Total ram usage:        4 bytes
  9402 ;; Hardware stack levels used:    1
  9403 ;; Hardware stack levels required when called:    4
  9404 ;; This function calls:
  9405 ;;		___ftpack
  9406 ;; This function is called by:
  9407 ;;		_do_update_pwm
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           	psect	text46
  9412  0022CA                     __ptext46:
  9413                           	opt stack 0
  9414  0022CA                     ___lbtoft:
  9415                           	opt stack 24
  9416                           
  9417                           ;incstack = 0
  9418                           ;___lbtoft@c stored from wreg
  9419  0022CA  6E1C               	movwf	___lbtoft@c,c
  9420  0022CC  501C               	movf	___lbtoft@c,w,c
  9421  0022CE  6E11               	movwf	___ftpack@arg,c
  9422  0022D0  6A12               	clrf	___ftpack@arg+1,c
  9423  0022D2  6A13               	clrf	___ftpack@arg+2,c
  9424  0022D4  0E8E               	movlw	142
  9425  0022D6  6E14               	movwf	___ftpack@exp,c
  9426  0022D8  0E00               	movlw	0
  9427  0022DA  6E15               	movwf	___ftpack@sign,c
  9428  0022DC  EC2C  F00C         	call	___ftpack	;wreg free
  9429  0022E0  C011  F019         	movff	?___ftpack,?___lbtoft
  9430  0022E4  C012  F01A         	movff	?___ftpack+1,?___lbtoft+1
  9431  0022E8  C013  F01B         	movff	?___ftpack+2,?___lbtoft+2
  9432  0022EC  D000               	goto	l1331
  9433  0022EE                     l1331:
  9434  0022EE  0012               	return		;funcret
  9435  0022F0                     __end_of___lbtoft:
  9436                           	opt stack 0
  9437                           tblptru	equ	0xFF8
  9438                           tblptrh	equ	0xFF7
  9439                           tblptrl	equ	0xFF6
  9440                           tablat	equ	0xFF5
  9441                           prodh	equ	0xFF4
  9442                           prodl	equ	0xFF3
  9443                           intcon	equ	0xFF2
  9444                           intcon2	equ	0xFF1
  9445                           postinc0	equ	0xFEE
  9446                           wreg	equ	0xFE8
  9447                           postdec1	equ	0xFE5
  9448                           fsr1l	equ	0xFE1
  9449                           indf2	equ	0xFDF
  9450                           postinc2	equ	0xFDE
  9451                           postdec2	equ	0xFDD
  9452                           fsr2h	equ	0xFDA
  9453                           fsr2l	equ	0xFD9
  9454                           status	equ	0xFD8
  9455                           
  9456 ;; *************** function ___fttol *****************
  9457 ;; Defined at:
  9458 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  f1              3   16[COMRAM] float 
  9461 ;; Auto vars:     Size  Location     Type
  9462 ;;  lval            4   26[COMRAM] unsigned long 
  9463 ;;  exp1            1   30[COMRAM] unsigned char 
  9464 ;;  sign1           1   25[COMRAM] unsigned char 
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  4   16[COMRAM] long 
  9467 ;; Registers used:
  9468 ;;		wreg, status,2, status,0
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9475 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9476 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9477 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9478 ;;Total ram usage:       15 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; Hardware stack levels required when called:    3
  9481 ;; This function calls:
  9482 ;;		Nothing
  9483 ;; This function is called by:
  9484 ;;		_do_update_pwm
  9485 ;; This function uses a non-reentrant model
  9486 ;;
  9487                           
  9488                           	psect	text47
  9489  0015B4                     __ptext47:
  9490                           	opt stack 0
  9491  0015B4                     ___fttol:
  9492                           	opt stack 25
  9493                           
  9494                           ;incstack = 0
  9495  0015B4  C013  F015         	movff	___fttol@f1+2,??___fttol
  9496  0015B8  6A16               	clrf	(??___fttol+1)& (0+255),c
  9497  0015BA  6A17               	clrf	(??___fttol+2)& (0+255),c
  9498  0015BC  3412               	rlcf	___fttol@f1+1,w,c
  9499  0015BE  3615               	rlcf	??___fttol& (0+255),f,c
  9500  0015C0  E301               	bnc	u4111
  9501  0015C2  8016               	bsf	(??___fttol+1)& (0+255),0,c
  9502  0015C4                     u4111:
  9503  0015C4  5015               	movf	??___fttol,w,c
  9504  0015C6  6E1F               	movwf	___fttol@exp1,c
  9505  0015C8  501F               	movf	___fttol@exp1,w,c
  9506  0015CA  A4D8               	btfss	status,2,c
  9507  0015CC  D002               	goto	l5646
  9508  0015CE  D039               	goto	l5670
  9509  0015D0  D063               	goto	l1290
  9510  0015D2                     l5646:
  9511  0015D2  0E17               	movlw	23
  9512  0015D4  6E15               	movwf	??___fttol& (0+255),c
  9513  0015D6  C011  F016         	movff	___fttol@f1,??___fttol+1
  9514  0015DA  C012  F017         	movff	___fttol@f1+1,??___fttol+2
  9515  0015DE  C013  F018         	movff	___fttol@f1+2,??___fttol+3
  9516  0015E2  2815               	incf	??___fttol,w,c
  9517  0015E4  6E19               	movwf	(??___fttol+4)& (0+255),c
  9518  0015E6  D004               	goto	u4130
  9519  0015E8                     u4135:
  9520  0015E8  90D8               	bcf	status,0,c
  9521  0015EA  3218               	rrcf	??___fttol+3,f,c
  9522  0015EC  3217               	rrcf	??___fttol+2,f,c
  9523  0015EE  3216               	rrcf	??___fttol+1,f,c
  9524  0015F0                     u4130:
  9525  0015F0  2E19               	decfsz	(??___fttol+4)& (0+255),f,c
  9526  0015F2  D7FA               	goto	u4135
  9527  0015F4  5016               	movf	??___fttol+1,w,c
  9528  0015F6  6E1A               	movwf	___fttol@sign1,c
  9529  0015F8  8E12               	bsf	___fttol@f1+1,7,c
  9530  0015FA  0EFF               	movlw	255
  9531  0015FC  1611               	andwf	___fttol@f1,f,c
  9532  0015FE  0EFF               	movlw	255
  9533  001600  1612               	andwf	___fttol@f1+1,f,c
  9534  001602  0E00               	movlw	0
  9535  001604  1613               	andwf	___fttol@f1+2,f,c
  9536  001606  5011               	movf	___fttol@f1,w,c
  9537  001608  6E1B               	movwf	___fttol@lval,c
  9538  00160A  5012               	movf	___fttol@f1+1,w,c
  9539  00160C  6E1C               	movwf	___fttol@lval+1,c
  9540  00160E  5013               	movf	___fttol@f1+2,w,c
  9541  001610  6E1D               	movwf	___fttol@lval+2,c
  9542  001612  6A1E               	clrf	___fttol@lval+3,c
  9543  001614  0E8E               	movlw	142
  9544  001616  5E1F               	subwf	___fttol@exp1,f,c
  9545  001618  AE1F               	btfss	___fttol@exp1,7,c
  9546  00161A  D010               	goto	l5668
  9547  00161C  501F               	movf	___fttol@exp1,w,c
  9548  00161E  0A80               	xorlw	128
  9549  001620  0F8F               	addlw	143
  9550  001622  B0D8               	btfsc	status,0,c
  9551  001624  D003               	goto	l5664
  9552  001626  D00D               	goto	l5670
  9553  001628  D037               	goto	l1290
  9554  00162A  D000               	goto	l5664
  9555  00162C                     l5664:
  9556  00162C  90D8               	bcf	status,0,c
  9557  00162E  321E               	rrcf	___fttol@lval+3,f,c
  9558  001630  321D               	rrcf	___fttol@lval+2,f,c
  9559  001632  321C               	rrcf	___fttol@lval+1,f,c
  9560  001634  321B               	rrcf	___fttol@lval,f,c
  9561  001636  3E1F               	incfsz	___fttol@exp1,f,c
  9562  001638  D7F9               	goto	l5664
  9563  00163A  D019               	goto	l5678
  9564  00163C                     l5668:
  9565  00163C  0E17               	movlw	23
  9566  00163E  641F               	cpfsgt	___fttol@exp1,c
  9567  001640  D011               	goto	l5676
  9568  001642                     l5670:
  9569  001642  0E00               	movlw	0
  9570  001644  6E11               	movwf	?___fttol,c
  9571  001646  0E00               	movlw	0
  9572  001648  6E12               	movwf	?___fttol+1,c
  9573  00164A  0E00               	movlw	0
  9574  00164C  6E13               	movwf	?___fttol+2,c
  9575  00164E  0E00               	movlw	0
  9576  001650  6E14               	movwf	?___fttol+3,c
  9577  001652  D022               	goto	l1290
  9578  001654  D007               	goto	l5676
  9579  001656                     l5674:
  9580  001656  90D8               	bcf	status,0,c
  9581  001658  361B               	rlcf	___fttol@lval,f,c
  9582  00165A  361C               	rlcf	___fttol@lval+1,f,c
  9583  00165C  361D               	rlcf	___fttol@lval+2,f,c
  9584  00165E  361E               	rlcf	___fttol@lval+3,f,c
  9585  001660  061F               	decf	___fttol@exp1,f,c
  9586  001662  D000               	goto	l5676
  9587  001664                     l5676:
  9588  001664  501F               	movf	___fttol@exp1,w,c
  9589  001666  B4D8               	btfsc	status,2,c
  9590  001668  D002               	goto	l5678
  9591  00166A  D7F5               	goto	l5674
  9592  00166C  D000               	goto	l5678
  9593  00166E                     l5678:
  9594  00166E  501A               	movf	___fttol@sign1,w,c
  9595  001670  B4D8               	btfsc	status,2,c
  9596  001672  D009               	goto	l5682
  9597  001674  1E1E               	comf	___fttol@lval+3,f,c
  9598  001676  1E1D               	comf	___fttol@lval+2,f,c
  9599  001678  1E1C               	comf	___fttol@lval+1,f,c
  9600  00167A  6C1B               	negf	___fttol@lval,c
  9601  00167C  0E00               	movlw	0
  9602  00167E  221C               	addwfc	___fttol@lval+1,f,c
  9603  001680  221D               	addwfc	___fttol@lval+2,f,c
  9604  001682  221E               	addwfc	___fttol@lval+3,f,c
  9605  001684  D000               	goto	l5682
  9606  001686                     l5682:
  9607  001686  C01B  F011         	movff	___fttol@lval,?___fttol
  9608  00168A  C01C  F012         	movff	___fttol@lval+1,?___fttol+1
  9609  00168E  C01D  F013         	movff	___fttol@lval+2,?___fttol+2
  9610  001692  C01E  F014         	movff	___fttol@lval+3,?___fttol+3
  9611  001696  D000               	goto	l1290
  9612  001698                     l1290:
  9613  001698  0012               	return		;funcret
  9614  00169A                     __end_of___fttol:
  9615                           	opt stack 0
  9616                           tblptru	equ	0xFF8
  9617                           tblptrh	equ	0xFF7
  9618                           tblptrl	equ	0xFF6
  9619                           tablat	equ	0xFF5
  9620                           prodh	equ	0xFF4
  9621                           prodl	equ	0xFF3
  9622                           intcon	equ	0xFF2
  9623                           intcon2	equ	0xFF1
  9624                           postinc0	equ	0xFEE
  9625                           wreg	equ	0xFE8
  9626                           postdec1	equ	0xFE5
  9627                           fsr1l	equ	0xFE1
  9628                           indf2	equ	0xFDF
  9629                           postinc2	equ	0xFDE
  9630                           postdec2	equ	0xFDD
  9631                           fsr2h	equ	0xFDA
  9632                           fsr2l	equ	0xFD9
  9633                           status	equ	0xFD8
  9634                           
  9635 ;; *************** function ___ftmul *****************
  9636 ;; Defined at:
  9637 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  f1              3   28[COMRAM] float 
  9640 ;;  f2              3   31[COMRAM] float 
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;  f3_as_produc    3   38[COMRAM] unsigned um
  9643 ;;  sign            1   42[COMRAM] unsigned char 
  9644 ;;  cntr            1   41[COMRAM] unsigned char 
  9645 ;;  exp             1   37[COMRAM] unsigned char 
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  3   28[COMRAM] float 
  9648 ;; Registers used:
  9649 ;;		wreg, status,2, status,0, cstack
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9655 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9656 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9657 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9658 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9659 ;;Total ram usage:       15 bytes
  9660 ;; Hardware stack levels used:    1
  9661 ;; Hardware stack levels required when called:    4
  9662 ;; This function calls:
  9663 ;;		___ftpack
  9664 ;; This function is called by:
  9665 ;;		_do_update_pwm
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           	psect	text48
  9670  0013CA                     __ptext48:
  9671                           	opt stack 0
  9672  0013CA                     ___ftmul:
  9673                           	opt stack 24
  9674                           
  9675                           ;incstack = 0
  9676  0013CA  C01F  F023         	movff	___ftmul@f1+2,??___ftmul
  9677  0013CE  6A24               	clrf	(??___ftmul+1)& (0+255),c
  9678  0013D0  6A25               	clrf	(??___ftmul+2)& (0+255),c
  9679  0013D2  341E               	rlcf	___ftmul@f1+1,w,c
  9680  0013D4  3623               	rlcf	??___ftmul& (0+255),f,c
  9681  0013D6  E301               	bnc	u4051
  9682  0013D8  8024               	bsf	(??___ftmul+1)& (0+255),0,c
  9683  0013DA                     u4051:
  9684  0013DA  5023               	movf	??___ftmul,w,c
  9685  0013DC  6E26               	movwf	___ftmul@exp,c
  9686  0013DE  5026               	movf	___ftmul@exp,w,c
  9687  0013E0  A4D8               	btfss	status,2,c
  9688  0013E2  D002               	goto	l5598
  9689  0013E4  D00E               	goto	l5600
  9690  0013E6  D06C               	goto	l1269
  9691  0013E8                     l5598:
  9692  0013E8  C022  F023         	movff	___ftmul@f2+2,??___ftmul
  9693  0013EC  6A24               	clrf	(??___ftmul+1)& (0+255),c
  9694  0013EE  6A25               	clrf	(??___ftmul+2)& (0+255),c
  9695  0013F0  3421               	rlcf	___ftmul@f2+1,w,c
  9696  0013F2  3623               	rlcf	??___ftmul& (0+255),f,c
  9697  0013F4  E301               	bnc	u4071
  9698  0013F6  8024               	bsf	(??___ftmul+1)& (0+255),0,c
  9699  0013F8                     u4071:
  9700  0013F8  5023               	movf	??___ftmul,w,c
  9701  0013FA  6E2B               	movwf	___ftmul@sign,c
  9702  0013FC  502B               	movf	___ftmul@sign,w,c
  9703  0013FE  A4D8               	btfss	status,2,c
  9704  001400  D007               	goto	l5604
  9705  001402                     l5600:
  9706  001402  0E00               	movlw	0
  9707  001404  6E1D               	movwf	?___ftmul,c
  9708  001406  0E00               	movlw	0
  9709  001408  6E1E               	movwf	?___ftmul+1,c
  9710  00140A  0E00               	movlw	0
  9711  00140C  6E1F               	movwf	?___ftmul+2,c
  9712  00140E  D058               	goto	l1269
  9713  001410                     l5604:
  9714  001410  502B               	movf	___ftmul@sign,w,c
  9715  001412  0F7B               	addlw	123
  9716  001414  2626               	addwf	___ftmul@exp,f,c
  9717  001416  C01F  F02B         	movff	___ftmul@f1+2,___ftmul@sign
  9718  00141A  5022               	movf	___ftmul@f2+2,w,c
  9719  00141C  1A2B               	xorwf	___ftmul@sign,f,c
  9720  00141E  0E80               	movlw	128
  9721  001420  162B               	andwf	___ftmul@sign,f,c
  9722  001422  8E1E               	bsf	___ftmul@f1+1,7,c
  9723  001424  8E21               	bsf	___ftmul@f2+1,7,c
  9724  001426  0EFF               	movlw	255
  9725  001428  1620               	andwf	___ftmul@f2,f,c
  9726  00142A  0EFF               	movlw	255
  9727  00142C  1621               	andwf	___ftmul@f2+1,f,c
  9728  00142E  0E00               	movlw	0
  9729  001430  1622               	andwf	___ftmul@f2+2,f,c
  9730  001432  0E00               	movlw	0
  9731  001434  6E27               	movwf	___ftmul@f3_as_product,c
  9732  001436  0E00               	movlw	0
  9733  001438  6E28               	movwf	___ftmul@f3_as_product+1,c
  9734  00143A  0E00               	movlw	0
  9735  00143C  6E29               	movwf	___ftmul@f3_as_product+2,c
  9736  00143E  0E07               	movlw	7
  9737  001440  6E2A               	movwf	___ftmul@cntr,c
  9738  001442  D000               	goto	l5618
  9739  001444                     l5618:
  9740  001444  A01D               	btfss	___ftmul@f1,0,c
  9741  001446  D007               	goto	l5622
  9742  001448  5020               	movf	___ftmul@f2,w,c
  9743  00144A  2627               	addwf	___ftmul@f3_as_product,f,c
  9744  00144C  5021               	movf	___ftmul@f2+1,w,c
  9745  00144E  2228               	addwfc	___ftmul@f3_as_product+1,f,c
  9746  001450  5022               	movf	___ftmul@f2+2,w,c
  9747  001452  2229               	addwfc	___ftmul@f3_as_product+2,f,c
  9748  001454  D000               	goto	l5622
  9749  001456                     l5622:
  9750  001456  90D8               	bcf	status,0,c
  9751  001458  321F               	rrcf	___ftmul@f1+2,f,c
  9752  00145A  321E               	rrcf	___ftmul@f1+1,f,c
  9753  00145C  321D               	rrcf	___ftmul@f1,f,c
  9754  00145E  90D8               	bcf	status,0,c
  9755  001460  3620               	rlcf	___ftmul@f2,f,c
  9756  001462  3621               	rlcf	___ftmul@f2+1,f,c
  9757  001464  3622               	rlcf	___ftmul@f2+2,f,c
  9758  001466  2E2A               	decfsz	___ftmul@cntr,f,c
  9759  001468  D7ED               	goto	l5618
  9760  00146A  D000               	goto	l5626
  9761  00146C                     l5626:
  9762  00146C  0E09               	movlw	9
  9763  00146E  6E2A               	movwf	___ftmul@cntr,c
  9764  001470  D000               	goto	l5628
  9765  001472                     l5628:
  9766  001472  A01D               	btfss	___ftmul@f1,0,c
  9767  001474  D007               	goto	l5632
  9768  001476  5020               	movf	___ftmul@f2,w,c
  9769  001478  2627               	addwf	___ftmul@f3_as_product,f,c
  9770  00147A  5021               	movf	___ftmul@f2+1,w,c
  9771  00147C  2228               	addwfc	___ftmul@f3_as_product+1,f,c
  9772  00147E  5022               	movf	___ftmul@f2+2,w,c
  9773  001480  2229               	addwfc	___ftmul@f3_as_product+2,f,c
  9774  001482  D000               	goto	l5632
  9775  001484                     l5632:
  9776  001484  90D8               	bcf	status,0,c
  9777  001486  321F               	rrcf	___ftmul@f1+2,f,c
  9778  001488  321E               	rrcf	___ftmul@f1+1,f,c
  9779  00148A  321D               	rrcf	___ftmul@f1,f,c
  9780  00148C  90D8               	bcf	status,0,c
  9781  00148E  3229               	rrcf	___ftmul@f3_as_product+2,f,c
  9782  001490  3228               	rrcf	___ftmul@f3_as_product+1,f,c
  9783  001492  3227               	rrcf	___ftmul@f3_as_product,f,c
  9784  001494  2E2A               	decfsz	___ftmul@cntr,f,c
  9785  001496  D7ED               	goto	l5628
  9786  001498  D000               	goto	l5636
  9787  00149A                     l5636:
  9788  00149A  C027  F011         	movff	___ftmul@f3_as_product,___ftpack@arg
  9789  00149E  C028  F012         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9790  0014A2  C029  F013         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9791  0014A6  C026  F014         	movff	___ftmul@exp,___ftpack@exp
  9792  0014AA  C02B  F015         	movff	___ftmul@sign,___ftpack@sign
  9793  0014AE  EC2C  F00C         	call	___ftpack	;wreg free
  9794  0014B2  C011  F01D         	movff	?___ftpack,?___ftmul
  9795  0014B6  C012  F01E         	movff	?___ftpack+1,?___ftmul+1
  9796  0014BA  C013  F01F         	movff	?___ftpack+2,?___ftmul+2
  9797  0014BE  D000               	goto	l1269
  9798  0014C0                     l1269:
  9799  0014C0  0012               	return		;funcret
  9800  0014C2                     __end_of___ftmul:
  9801                           	opt stack 0
  9802                           tblptru	equ	0xFF8
  9803                           tblptrh	equ	0xFF7
  9804                           tblptrl	equ	0xFF6
  9805                           tablat	equ	0xFF5
  9806                           prodh	equ	0xFF4
  9807                           prodl	equ	0xFF3
  9808                           intcon	equ	0xFF2
  9809                           intcon2	equ	0xFF1
  9810                           postinc0	equ	0xFEE
  9811                           wreg	equ	0xFE8
  9812                           postdec1	equ	0xFE5
  9813                           fsr1l	equ	0xFE1
  9814                           indf2	equ	0xFDF
  9815                           postinc2	equ	0xFDE
  9816                           postdec2	equ	0xFDD
  9817                           fsr2h	equ	0xFDA
  9818                           fsr2l	equ	0xFD9
  9819                           status	equ	0xFD8
  9820                           
  9821 ;; *************** function ___ftdiv *****************
  9822 ;; Defined at:
  9823 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;  f1              3   43[COMRAM] float 
  9826 ;;  f2              3   46[COMRAM] float 
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;  f3              3   53[COMRAM] float 
  9829 ;;  sign            1   57[COMRAM] unsigned char 
  9830 ;;  exp             1   56[COMRAM] unsigned char 
  9831 ;;  cntr            1   52[COMRAM] unsigned char 
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  3   43[COMRAM] float 
  9834 ;; Registers used:
  9835 ;;		wreg, status,2, status,0, cstack
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9841 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;Total ram usage:       15 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; Hardware stack levels required when called:    4
  9848 ;; This function calls:
  9849 ;;		___ftpack
  9850 ;; This function is called by:
  9851 ;;		_do_update_pwm
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           	psect	text49
  9856  00169A                     __ptext49:
  9857                           	opt stack 0
  9858  00169A                     ___ftdiv:
  9859                           	opt stack 24
  9860                           
  9861                           ;incstack = 0
  9862  00169A  C02E  F032         	movff	___ftdiv@f1+2,??___ftdiv
  9863  00169E  6A33               	clrf	(??___ftdiv+1)& (0+255),c
  9864  0016A0  6A34               	clrf	(??___ftdiv+2)& (0+255),c
  9865  0016A2  342D               	rlcf	___ftdiv@f1+1,w,c
  9866  0016A4  3632               	rlcf	??___ftdiv& (0+255),f,c
  9867  0016A6  E301               	bnc	u4001
  9868  0016A8  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
  9869  0016AA                     u4001:
  9870  0016AA  5032               	movf	??___ftdiv,w,c
  9871  0016AC  6E39               	movwf	___ftdiv@exp,c
  9872  0016AE  5039               	movf	___ftdiv@exp,w,c
  9873  0016B0  A4D8               	btfss	status,2,c
  9874  0016B2  D002               	goto	l5552
  9875  0016B4  D00E               	goto	l5554
  9876  0016B6  D061               	goto	l1254
  9877  0016B8                     l5552:
  9878  0016B8  C031  F032         	movff	___ftdiv@f2+2,??___ftdiv
  9879  0016BC  6A33               	clrf	(??___ftdiv+1)& (0+255),c
  9880  0016BE  6A34               	clrf	(??___ftdiv+2)& (0+255),c
  9881  0016C0  3430               	rlcf	___ftdiv@f2+1,w,c
  9882  0016C2  3632               	rlcf	??___ftdiv& (0+255),f,c
  9883  0016C4  E301               	bnc	u4021
  9884  0016C6  8033               	bsf	(??___ftdiv+1)& (0+255),0,c
  9885  0016C8                     u4021:
  9886  0016C8  5032               	movf	??___ftdiv,w,c
  9887  0016CA  6E3A               	movwf	___ftdiv@sign,c
  9888  0016CC  503A               	movf	___ftdiv@sign,w,c
  9889  0016CE  A4D8               	btfss	status,2,c
  9890  0016D0  D007               	goto	l5558
  9891  0016D2                     l5554:
  9892  0016D2  0E00               	movlw	0
  9893  0016D4  6E2C               	movwf	?___ftdiv,c
  9894  0016D6  0E00               	movlw	0
  9895  0016D8  6E2D               	movwf	?___ftdiv+1,c
  9896  0016DA  0E00               	movlw	0
  9897  0016DC  6E2E               	movwf	?___ftdiv+2,c
  9898  0016DE  D04D               	goto	l1254
  9899  0016E0                     l5558:
  9900  0016E0  0E00               	movlw	0
  9901  0016E2  6E36               	movwf	___ftdiv@f3,c
  9902  0016E4  0E00               	movlw	0
  9903  0016E6  6E37               	movwf	___ftdiv@f3+1,c
  9904  0016E8  0E00               	movlw	0
  9905  0016EA  6E38               	movwf	___ftdiv@f3+2,c
  9906  0016EC  503A               	movf	___ftdiv@sign,w,c
  9907  0016EE  0F89               	addlw	137
  9908  0016F0  5E39               	subwf	___ftdiv@exp,f,c
  9909  0016F2  C02E  F03A         	movff	___ftdiv@f1+2,___ftdiv@sign
  9910  0016F6  5031               	movf	___ftdiv@f2+2,w,c
  9911  0016F8  1A3A               	xorwf	___ftdiv@sign,f,c
  9912  0016FA  0E80               	movlw	128
  9913  0016FC  163A               	andwf	___ftdiv@sign,f,c
  9914  0016FE  8E2D               	bsf	___ftdiv@f1+1,7,c
  9915  001700  0EFF               	movlw	255
  9916  001702  162C               	andwf	___ftdiv@f1,f,c
  9917  001704  0EFF               	movlw	255
  9918  001706  162D               	andwf	___ftdiv@f1+1,f,c
  9919  001708  0E00               	movlw	0
  9920  00170A  162E               	andwf	___ftdiv@f1+2,f,c
  9921  00170C  8E30               	bsf	___ftdiv@f2+1,7,c
  9922  00170E  0EFF               	movlw	255
  9923  001710  162F               	andwf	___ftdiv@f2,f,c
  9924  001712  0EFF               	movlw	255
  9925  001714  1630               	andwf	___ftdiv@f2+1,f,c
  9926  001716  0E00               	movlw	0
  9927  001718  1631               	andwf	___ftdiv@f2+2,f,c
  9928  00171A  0E18               	movlw	24
  9929  00171C  6E35               	movwf	___ftdiv@cntr,c
  9930  00171E  D000               	goto	l5578
  9931  001720                     l5578:
  9932  001720  90D8               	bcf	status,0,c
  9933  001722  3636               	rlcf	___ftdiv@f3,f,c
  9934  001724  3637               	rlcf	___ftdiv@f3+1,f,c
  9935  001726  3638               	rlcf	___ftdiv@f3+2,f,c
  9936  001728  502F               	movf	___ftdiv@f2,w,c
  9937  00172A  5C2C               	subwf	___ftdiv@f1,w,c
  9938  00172C  5030               	movf	___ftdiv@f2+1,w,c
  9939  00172E  582D               	subwfb	___ftdiv@f1+1,w,c
  9940  001730  5031               	movf	___ftdiv@f2+2,w,c
  9941  001732  582E               	subwfb	___ftdiv@f1+2,w,c
  9942  001734  A0D8               	btfss	status,0,c
  9943  001736  D007               	goto	l1257
  9944  001738  502F               	movf	___ftdiv@f2,w,c
  9945  00173A  5E2C               	subwf	___ftdiv@f1,f,c
  9946  00173C  5030               	movf	___ftdiv@f2+1,w,c
  9947  00173E  5A2D               	subwfb	___ftdiv@f1+1,f,c
  9948  001740  5031               	movf	___ftdiv@f2+2,w,c
  9949  001742  5A2E               	subwfb	___ftdiv@f1+2,f,c
  9950  001744  8036               	bsf	___ftdiv@f3,0,c
  9951  001746                     l1257:
  9952  001746  90D8               	bcf	status,0,c
  9953  001748  362C               	rlcf	___ftdiv@f1,f,c
  9954  00174A  362D               	rlcf	___ftdiv@f1+1,f,c
  9955  00174C  362E               	rlcf	___ftdiv@f1+2,f,c
  9956  00174E  2E35               	decfsz	___ftdiv@cntr,f,c
  9957  001750  D7E7               	goto	l5578
  9958  001752  D000               	goto	l5588
  9959  001754                     l5588:
  9960  001754  C036  F011         	movff	___ftdiv@f3,___ftpack@arg
  9961  001758  C037  F012         	movff	___ftdiv@f3+1,___ftpack@arg+1
  9962  00175C  C038  F013         	movff	___ftdiv@f3+2,___ftpack@arg+2
  9963  001760  C039  F014         	movff	___ftdiv@exp,___ftpack@exp
  9964  001764  C03A  F015         	movff	___ftdiv@sign,___ftpack@sign
  9965  001768  EC2C  F00C         	call	___ftpack	;wreg free
  9966  00176C  C011  F02C         	movff	?___ftpack,?___ftdiv
  9967  001770  C012  F02D         	movff	?___ftpack+1,?___ftdiv+1
  9968  001774  C013  F02E         	movff	?___ftpack+2,?___ftdiv+2
  9969  001778  D000               	goto	l1254
  9970  00177A                     l1254:
  9971  00177A  0012               	return		;funcret
  9972  00177C                     __end_of___ftdiv:
  9973                           	opt stack 0
  9974                           tblptru	equ	0xFF8
  9975                           tblptrh	equ	0xFF7
  9976                           tblptrl	equ	0xFF6
  9977                           tablat	equ	0xFF5
  9978                           prodh	equ	0xFF4
  9979                           prodl	equ	0xFF3
  9980                           intcon	equ	0xFF2
  9981                           intcon2	equ	0xFF1
  9982                           postinc0	equ	0xFEE
  9983                           wreg	equ	0xFE8
  9984                           postdec1	equ	0xFE5
  9985                           fsr1l	equ	0xFE1
  9986                           indf2	equ	0xFDF
  9987                           postinc2	equ	0xFDE
  9988                           postdec2	equ	0xFDD
  9989                           fsr2h	equ	0xFDA
  9990                           fsr2l	equ	0xFD9
  9991                           status	equ	0xFD8
  9992                           
  9993 ;; *************** function ___ftpack *****************
  9994 ;; Defined at:
  9995 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  arg             3   16[COMRAM] unsigned um
  9998 ;;  exp             1   19[COMRAM] unsigned char 
  9999 ;;  sign            1   20[COMRAM] unsigned char 
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;		None
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  3   16[COMRAM] float 
 10004 ;; Registers used:
 10005 ;;		wreg, status,2, status,0
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10011 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10013 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10014 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10015 ;;Total ram usage:        8 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:    3
 10018 ;; This function calls:
 10019 ;;		Nothing
 10020 ;; This function is called by:
 10021 ;;		___ftdiv
 10022 ;;		___ftmul
 10023 ;;		___lbtoft
 10024 ;; This function uses a non-reentrant model
 10025 ;;
 10026                           
 10027                           	psect	text50
 10028  001858                     __ptext50:
 10029                           	opt stack 0
 10030  001858                     ___ftpack:
 10031                           	opt stack 24
 10032                           
 10033                           ;incstack = 0
 10034  001858  5014               	movf	___ftpack@exp,w,c
 10035  00185A  B4D8               	btfsc	status,2,c
 10036  00185C  D005               	goto	l5426
 10037  00185E  5011               	movf	___ftpack@arg,w,c
 10038  001860  1012               	iorwf	___ftpack@arg+1,w,c
 10039  001862  1013               	iorwf	___ftpack@arg+2,w,c
 10040  001864  A4D8               	btfss	status,2,c
 10041  001866  D00E               	goto	l5432
 10042  001868                     l5426:
 10043  001868  0E00               	movlw	0
 10044  00186A  6E11               	movwf	?___ftpack,c
 10045  00186C  0E00               	movlw	0
 10046  00186E  6E12               	movwf	?___ftpack+1,c
 10047  001870  0E00               	movlw	0
 10048  001872  6E13               	movwf	?___ftpack+2,c
 10049  001874  D053               	goto	l1182
 10050  001876  D006               	goto	l5432
 10051  001878                     l5430:
 10052  001878  2A14               	incf	___ftpack@exp,f,c
 10053  00187A  90D8               	bcf	status,0,c
 10054  00187C  3213               	rrcf	___ftpack@arg+2,f,c
 10055  00187E  3212               	rrcf	___ftpack@arg+1,f,c
 10056  001880  3211               	rrcf	___ftpack@arg,f,c
 10057  001882  D000               	goto	l5432
 10058  001884                     l5432:
 10059  001884  0E00               	movlw	0
 10060  001886  1411               	andwf	___ftpack@arg,w,c
 10061  001888  6E16               	movwf	??___ftpack& (0+255),c
 10062  00188A  0E00               	movlw	0
 10063  00188C  1412               	andwf	___ftpack@arg+1,w,c
 10064  00188E  6E17               	movwf	(??___ftpack+1)& (0+255),c
 10065  001890  0EFE               	movlw	254
 10066  001892  1413               	andwf	___ftpack@arg+2,w,c
 10067  001894  6E18               	movwf	(??___ftpack+2)& (0+255),c
 10068  001896  5016               	movf	??___ftpack,w,c
 10069  001898  1017               	iorwf	??___ftpack+1,w,c
 10070  00189A  1018               	iorwf	??___ftpack+2,w,c
 10071  00189C  B4D8               	btfsc	status,2,c
 10072  00189E  D00E               	goto	l5438
 10073  0018A0  D7EB               	goto	l5430
 10074  0018A2  D00C               	goto	l5438
 10075  0018A4                     l5434:
 10076  0018A4  2A14               	incf	___ftpack@exp,f,c
 10077  0018A6  0E01               	movlw	1
 10078  0018A8  2611               	addwf	___ftpack@arg,f,c
 10079  0018AA  0E00               	movlw	0
 10080  0018AC  2212               	addwfc	___ftpack@arg+1,f,c
 10081  0018AE  0E00               	movlw	0
 10082  0018B0  2213               	addwfc	___ftpack@arg+2,f,c
 10083  0018B2  90D8               	bcf	status,0,c
 10084  0018B4  3213               	rrcf	___ftpack@arg+2,f,c
 10085  0018B6  3212               	rrcf	___ftpack@arg+1,f,c
 10086  0018B8  3211               	rrcf	___ftpack@arg,f,c
 10087  0018BA  D000               	goto	l5438
 10088  0018BC                     l5438:
 10089  0018BC  0E00               	movlw	0
 10090  0018BE  1411               	andwf	___ftpack@arg,w,c
 10091  0018C0  6E16               	movwf	??___ftpack& (0+255),c
 10092  0018C2  0E00               	movlw	0
 10093  0018C4  1412               	andwf	___ftpack@arg+1,w,c
 10094  0018C6  6E17               	movwf	(??___ftpack+1)& (0+255),c
 10095  0018C8  0EFF               	movlw	255
 10096  0018CA  1413               	andwf	___ftpack@arg+2,w,c
 10097  0018CC  6E18               	movwf	(??___ftpack+2)& (0+255),c
 10098  0018CE  5016               	movf	??___ftpack,w,c
 10099  0018D0  1017               	iorwf	??___ftpack+1,w,c
 10100  0018D2  1018               	iorwf	??___ftpack+2,w,c
 10101  0018D4  B4D8               	btfsc	status,2,c
 10102  0018D6  D008               	goto	l5442
 10103  0018D8  D7E5               	goto	l5434
 10104  0018DA  D006               	goto	l5442
 10105  0018DC                     l5440:
 10106  0018DC  0614               	decf	___ftpack@exp,f,c
 10107  0018DE  90D8               	bcf	status,0,c
 10108  0018E0  3611               	rlcf	___ftpack@arg,f,c
 10109  0018E2  3612               	rlcf	___ftpack@arg+1,f,c
 10110  0018E4  3613               	rlcf	___ftpack@arg+2,f,c
 10111  0018E6  D000               	goto	l5442
 10112  0018E8                     l5442:
 10113  0018E8  BE12               	btfsc	___ftpack@arg+1,7,c
 10114  0018EA  D004               	goto	l1193
 10115  0018EC  0E02               	movlw	2
 10116  0018EE  6014               	cpfslt	___ftpack@exp,c
 10117  0018F0  D7F5               	goto	l5440
 10118  0018F2  D000               	goto	l1193
 10119  0018F4                     l1193:
 10120  0018F4  B014               	btfsc	___ftpack@exp,0,c
 10121  0018F6  D002               	goto	l5448
 10122  0018F8  9E12               	bcf	___ftpack@arg+1,7,c
 10123  0018FA  D000               	goto	l5448
 10124  0018FC                     l5448:
 10125  0018FC  90D8               	bcf	status,0,c
 10126  0018FE  3214               	rrcf	___ftpack@exp,f,c
 10127  001900  5014               	movf	___ftpack@exp,w,c
 10128  001902  1213               	iorwf	___ftpack@arg+2,f,c
 10129  001904  5015               	movf	___ftpack@sign,w,c
 10130  001906  B4D8               	btfsc	status,2,c
 10131  001908  D002               	goto	l5454
 10132  00190A  8E13               	bsf	___ftpack@arg+2,7,c
 10133  00190C  D000               	goto	l5454
 10134  00190E                     l5454:
 10135  00190E  C011  F011         	movff	___ftpack@arg,?___ftpack
 10136  001912  C012  F012         	movff	___ftpack@arg+1,?___ftpack+1
 10137  001916  C013  F013         	movff	___ftpack@arg+2,?___ftpack+2
 10138  00191A  D000               	goto	l1182
 10139  00191C                     l1182:
 10140  00191C  0012               	return		;funcret
 10141  00191E                     __end_of___ftpack:
 10142                           	opt stack 0
 10143                           tblptru	equ	0xFF8
 10144                           tblptrh	equ	0xFF7
 10145                           tblptrl	equ	0xFF6
 10146                           tablat	equ	0xFF5
 10147                           prodh	equ	0xFF4
 10148                           prodl	equ	0xFF3
 10149                           intcon	equ	0xFF2
 10150                           intcon2	equ	0xFF1
 10151                           postinc0	equ	0xFEE
 10152                           wreg	equ	0xFE8
 10153                           postdec1	equ	0xFE5
 10154                           fsr1l	equ	0xFE1
 10155                           indf2	equ	0xFDF
 10156                           postinc2	equ	0xFDE
 10157                           postdec2	equ	0xFDD
 10158                           fsr2h	equ	0xFDA
 10159                           fsr2l	equ	0xFD9
 10160                           status	equ	0xFD8
 10161                           
 10162 ;; *************** function _Do_Beep *****************
 10163 ;; Defined at:
 10164 ;;		line 6 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Utils.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;		None
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;		None
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  2   20[None  ] int 
 10171 ;; Registers used:
 10172 ;;		wreg, status,2, cstack
 10173 ;; Tracked objects:
 10174 ;;		On entry : 0/0
 10175 ;;		On exit  : 0/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;Total ram usage:        0 bytes
 10183 ;; Hardware stack levels used:    1
 10184 ;; Hardware stack levels required when called:    4
 10185 ;; This function calls:
 10186 ;;		_Activate_Buzzer
 10187 ;;		_Deactivate_Buzzer
 10188 ;;		_Wait_Half_Second
 10189 ;; This function is called by:
 10190 ;;		_Increase_Speed
 10191 ;;		_Decrease_Speed
 10192 ;;		_main
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196                           	psect	text51
 10197  002448                     __ptext51:
 10198                           	opt stack 0
 10199  002448                     _Do_Beep:
 10200                           	opt stack 25
 10201                           
 10202                           ;Utils.c: 9: PORTBbits.RB7 = 1;
 10203                           
 10204                           ;incstack = 0
 10205  002448  8E81               	bsf	3969,7,c	;volatile
 10206                           
 10207                           ;Utils.c: 10: Activate_Buzzer();
 10208  00244A  EC57  F012         	call	_Activate_Buzzer	;wreg free
 10209                           
 10210                           ;Utils.c: 11: Wait_Half_Second();
 10211  00244E  EC0C  F012         	call	_Wait_Half_Second	;wreg free
 10212                           
 10213                           ;Utils.c: 13: PORTBbits.RB7 = 0;
 10214  002452  9E81               	bcf	3969,7,c	;volatile
 10215                           
 10216                           ;Utils.c: 14: Deactivate_Buzzer ();
 10217  002454  ECAD  F012         	call	_Deactivate_Buzzer	;wreg free
 10218                           
 10219                           ;Utils.c: 15: Wait_Half_Second();
 10220  002458  EC0C  F012         	call	_Wait_Half_Second	;wreg free
 10221  00245C  0012               	return		;funcret
 10222  00245E                     __end_of_Do_Beep:
 10223                           	opt stack 0
 10224                           tblptru	equ	0xFF8
 10225                           tblptrh	equ	0xFF7
 10226                           tblptrl	equ	0xFF6
 10227                           tablat	equ	0xFF5
 10228                           prodh	equ	0xFF4
 10229                           prodl	equ	0xFF3
 10230                           intcon	equ	0xFF2
 10231                           intcon2	equ	0xFF1
 10232                           postinc0	equ	0xFEE
 10233                           wreg	equ	0xFE8
 10234                           postdec1	equ	0xFE5
 10235                           fsr1l	equ	0xFE1
 10236                           indf2	equ	0xFDF
 10237                           postinc2	equ	0xFDE
 10238                           postdec2	equ	0xFDD
 10239                           fsr2h	equ	0xFDA
 10240                           fsr2l	equ	0xFD9
 10241                           status	equ	0xFD8
 10242                           
 10243 ;; *************** function _Wait_Half_Second *****************
 10244 ;; Defined at:
 10245 ;;		line 38 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Utils.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;		None
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;		None
 10250 ;; Return value:  Size  Location     Type
 10251 ;;		None               void
 10252 ;; Registers used:
 10253 ;;		wreg, status,2
 10254 ;; Tracked objects:
 10255 ;;		On entry : 0/0
 10256 ;;		On exit  : 0/0
 10257 ;;		Unchanged: 0/0
 10258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10263 ;;Total ram usage:        0 bytes
 10264 ;; Hardware stack levels used:    1
 10265 ;; Hardware stack levels required when called:    3
 10266 ;; This function calls:
 10267 ;;		Nothing
 10268 ;; This function is called by:
 10269 ;;		_Do_Beep
 10270 ;;		_Wait_One_Sec
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text52
 10275  002418                     __ptext52:
 10276                           	opt stack 0
 10277  002418                     _Wait_Half_Second:
 10278                           	opt stack 25
 10279                           
 10280                           ;Utils.c: 40: T0CON = 0x03;
 10281                           
 10282                           ;incstack = 0
 10283  002418  0E03               	movlw	3
 10284  00241A  6ED5               	movwf	4053,c	;volatile
 10285                           
 10286                           ;Utils.c: 41: TMR0L = 0xDB;
 10287  00241C  0EDB               	movlw	219
 10288  00241E  6ED6               	movwf	4054,c	;volatile
 10289                           
 10290                           ;Utils.c: 42: TMR0H = 0x0B;
 10291  002420  0E0B               	movlw	11
 10292  002422  6ED7               	movwf	4055,c	;volatile
 10293                           
 10294                           ;Utils.c: 43: INTCONbits.TMR0IF = 0;
 10295  002424  94F2               	bcf	intcon,2,c	;volatile
 10296                           
 10297                           ;Utils.c: 44: T0CONbits.TMR0ON = 1;
 10298  002426  8ED5               	bsf	4053,7,c	;volatile
 10299                           
 10300                           ;Utils.c: 45: while (INTCONbits.TMR0IF == 0);
 10301  002428  D000               	goto	l500
 10302  00242A                     l500:
 10303  00242A  A4F2               	btfss	intcon,2,c	;volatile
 10304  00242C  D7FE               	goto	l500
 10305                           
 10306                           ;Utils.c: 46: T0CONbits.TMR0ON = 0;
 10307  00242E  9ED5               	bcf	4053,7,c	;volatile
 10308  002430  0012               	return		;funcret
 10309  002432                     __end_of_Wait_Half_Second:
 10310                           	opt stack 0
 10311                           tblptru	equ	0xFF8
 10312                           tblptrh	equ	0xFF7
 10313                           tblptrl	equ	0xFF6
 10314                           tablat	equ	0xFF5
 10315                           prodh	equ	0xFF4
 10316                           prodl	equ	0xFF3
 10317                           intcon	equ	0xFF2
 10318                           intcon2	equ	0xFF1
 10319                           postinc0	equ	0xFEE
 10320                           wreg	equ	0xFE8
 10321                           postdec1	equ	0xFE5
 10322                           fsr1l	equ	0xFE1
 10323                           indf2	equ	0xFDF
 10324                           postinc2	equ	0xFDE
 10325                           postdec2	equ	0xFDD
 10326                           fsr2h	equ	0xFDA
 10327                           fsr2l	equ	0xFD9
 10328                           status	equ	0xFD8
 10329                           
 10330 ;; *************** function _Deactivate_Buzzer *****************
 10331 ;; Defined at:
 10332 ;;		line 33 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Utils.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;		None
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;		None
 10337 ;; Return value:  Size  Location     Type
 10338 ;;		None               void
 10339 ;; Registers used:
 10340 ;;		wreg, status,2
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10350 ;;Total ram usage:        0 bytes
 10351 ;; Hardware stack levels used:    1
 10352 ;; Hardware stack levels required when called:    3
 10353 ;; This function calls:
 10354 ;;		Nothing
 10355 ;; This function is called by:
 10356 ;;		_Do_Beep
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360                           	psect	text53
 10361  00255A                     __ptext53:
 10362                           	opt stack 0
 10363  00255A                     _Deactivate_Buzzer:
 10364                           	opt stack 25
 10365                           
 10366                           ;Utils.c: 35: CCP2CON = 0x0;
 10367                           
 10368                           ;incstack = 0
 10369  00255A  0E00               	movlw	0
 10370  00255C  6EBA               	movwf	4026,c	;volatile
 10371                           
 10372                           ;Utils.c: 36: PORTBbits.RB3 = 0;
 10373  00255E  9681               	bcf	3969,3,c	;volatile
 10374  002560  0012               	return		;funcret
 10375  002562                     __end_of_Deactivate_Buzzer:
 10376                           	opt stack 0
 10377                           tblptru	equ	0xFF8
 10378                           tblptrh	equ	0xFF7
 10379                           tblptrl	equ	0xFF6
 10380                           tablat	equ	0xFF5
 10381                           prodh	equ	0xFF4
 10382                           prodl	equ	0xFF3
 10383                           intcon	equ	0xFF2
 10384                           intcon2	equ	0xFF1
 10385                           postinc0	equ	0xFEE
 10386                           wreg	equ	0xFE8
 10387                           postdec1	equ	0xFE5
 10388                           fsr1l	equ	0xFE1
 10389                           indf2	equ	0xFDF
 10390                           postinc2	equ	0xFDE
 10391                           postdec2	equ	0xFDD
 10392                           fsr2h	equ	0xFDA
 10393                           fsr2l	equ	0xFD9
 10394                           status	equ	0xFD8
 10395                           
 10396 ;; *************** function _Activate_Buzzer *****************
 10397 ;; Defined at:
 10398 ;;		line 25 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Utils.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;		None
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;		None
 10403 ;; Return value:  Size  Location     Type
 10404 ;;		None               void
 10405 ;; Registers used:
 10406 ;;		wreg, status,2
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10416 ;;Total ram usage:        0 bytes
 10417 ;; Hardware stack levels used:    1
 10418 ;; Hardware stack levels required when called:    3
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_Do_Beep
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           	psect	text54
 10427  0024AE                     __ptext54:
 10428                           	opt stack 0
 10429  0024AE                     _Activate_Buzzer:
 10430                           	opt stack 25
 10431                           
 10432                           ;Utils.c: 27: PR2 = 0b11111001 ;
 10433                           
 10434                           ;incstack = 0
 10435  0024AE  0EF9               	movlw	249
 10436  0024B0  6ECB               	movwf	4043,c	;volatile
 10437                           
 10438                           ;Utils.c: 28: T2CON = 0b00000101 ;
 10439  0024B2  0E05               	movlw	5
 10440  0024B4  6ECA               	movwf	4042,c	;volatile
 10441                           
 10442                           ;Utils.c: 29: CCPR2L = 0b01001010 ;
 10443  0024B6  0E4A               	movlw	74
 10444  0024B8  6EBB               	movwf	4027,c	;volatile
 10445                           
 10446                           ;Utils.c: 30: CCP2CON = 0b00111100 ;
 10447  0024BA  0E3C               	movlw	60
 10448  0024BC  6EBA               	movwf	4026,c	;volatile
 10449  0024BE  0012               	return		;funcret
 10450  0024C0                     __end_of_Activate_Buzzer:
 10451                           	opt stack 0
 10452                           tblptru	equ	0xFF8
 10453                           tblptrh	equ	0xFF7
 10454                           tblptrl	equ	0xFF6
 10455                           tablat	equ	0xFF5
 10456                           prodh	equ	0xFF4
 10457                           prodl	equ	0xFF3
 10458                           intcon	equ	0xFF2
 10459                           intcon2	equ	0xFF1
 10460                           postinc0	equ	0xFEE
 10461                           wreg	equ	0xFE8
 10462                           postdec1	equ	0xFE5
 10463                           fsr1l	equ	0xFE1
 10464                           indf2	equ	0xFDF
 10465                           postinc2	equ	0xFDE
 10466                           postdec2	equ	0xFDD
 10467                           fsr2h	equ	0xFDA
 10468                           fsr2l	equ	0xFD9
 10469                           status	equ	0xFD8
 10470                           
 10471 ;; *************** function _DS3231_Setup_Time *****************
 10472 ;; Defined at:
 10473 ;;		line 63 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Support.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;		None
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  Address         1   19[COMRAM] unsigned char 
 10478 ;;  Device          1   18[COMRAM] unsigned char 
 10479 ;; Return value:  Size  Location     Type
 10480 ;;		None               void
 10481 ;; Registers used:
 10482 ;;		wreg, status,2, status,0, cstack
 10483 ;; Tracked objects:
 10484 ;;		On entry : 0/0
 10485 ;;		On exit  : 0/0
 10486 ;;		Unchanged: 0/0
 10487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10492 ;;Total ram usage:        2 bytes
 10493 ;; Hardware stack levels used:    1
 10494 ;; Hardware stack levels required when called:    5
 10495 ;; This function calls:
 10496 ;;		_I2C_Start
 10497 ;;		_I2C_Stop
 10498 ;;		_I2C_Write
 10499 ;; This function is called by:
 10500 ;;		_main
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text55
 10505  001E48                     __ptext55:
 10506                           	opt stack 0
 10507  001E48                     _DS3231_Setup_Time:
 10508                           	opt stack 25
 10509                           
 10510                           ;I2C_Support.c: 65: char Device = 0x68;
 10511                           
 10512                           ;incstack = 0
 10513  001E48  0E68               	movlw	104
 10514  001E4A  6E13               	movwf	DS3231_Setup_Time@Device,c
 10515                           
 10516                           ;I2C_Support.c: 66: char Address = 0x00;
 10517  001E4C  0E00               	movlw	0
 10518  001E4E  6E14               	movwf	DS3231_Setup_Time@Address,c
 10519                           
 10520                           ;I2C_Support.c: 67: I2C_Start();
 10521  001E50  EC69  F012         	call	_I2C_Start	;wreg free
 10522                           
 10523                           ;I2C_Support.c: 68: I2C_Write((Device << 1) | 0);
 10524  001E54  5013               	movf	DS3231_Setup_Time@Device,w,c
 10525  001E56  2413               	addwf	DS3231_Setup_Time@Device,w,c
 10526  001E58  ECCE  F010         	call	_I2C_Write
 10527                           
 10528                           ;I2C_Support.c: 69: I2C_Write(Address);
 10529  001E5C  5014               	movf	DS3231_Setup_Time@Address,w,c
 10530  001E5E  ECCE  F010         	call	_I2C_Write
 10531                           
 10532                           ;I2C_Support.c: 70: second = 0x26;
 10533  001E62  0E26               	movlw	38
 10534  001E64  6E62               	movwf	_second,c
 10535                           
 10536                           ;I2C_Support.c: 71: minute = 0x035;
 10537  001E66  0E35               	movlw	53
 10538  001E68  6E5F               	movwf	_minute,c
 10539                           
 10540                           ;I2C_Support.c: 72: hour = 0x07;
 10541  001E6A  0E07               	movlw	7
 10542  001E6C  6E5E               	movwf	_hour,c
 10543                           
 10544                           ;I2C_Support.c: 73: dow = 0x02;
 10545  001E6E  0E02               	movlw	2
 10546  001E70  6E5B               	movwf	_dow,c
 10547                           
 10548                           ;I2C_Support.c: 74: day = 0x07;
 10549  001E72  0E07               	movlw	7
 10550  001E74  6E5A               	movwf	_day,c
 10551                           
 10552                           ;I2C_Support.c: 75: month = 0x10;
 10553  001E76  0E10               	movlw	16
 10554  001E78  6E60               	movwf	_month,c
 10555                           
 10556                           ;I2C_Support.c: 76: year = 0x95;
 10557  001E7A  0E95               	movlw	149
 10558  001E7C  6E6C               	movwf	_year,c
 10559                           
 10560                           ;I2C_Support.c: 77: I2C_Write(second);
 10561  001E7E  5062               	movf	_second,w,c
 10562  001E80  ECCE  F010         	call	_I2C_Write
 10563                           
 10564                           ;I2C_Support.c: 78: I2C_Write(minute);
 10565  001E84  505F               	movf	_minute,w,c
 10566  001E86  ECCE  F010         	call	_I2C_Write
 10567                           
 10568                           ;I2C_Support.c: 79: I2C_Write(hour);
 10569  001E8A  505E               	movf	_hour,w,c
 10570  001E8C  ECCE  F010         	call	_I2C_Write
 10571                           
 10572                           ;I2C_Support.c: 80: I2C_Write(dow);
 10573  001E90  505B               	movf	_dow,w,c
 10574  001E92  ECCE  F010         	call	_I2C_Write
 10575                           
 10576                           ;I2C_Support.c: 81: I2C_Write(day);
 10577  001E96  505A               	movf	_day,w,c
 10578  001E98  ECCE  F010         	call	_I2C_Write
 10579                           
 10580                           ;I2C_Support.c: 82: I2C_Write(month);
 10581  001E9C  5060               	movf	_month,w,c
 10582  001E9E  ECCE  F010         	call	_I2C_Write
 10583                           
 10584                           ;I2C_Support.c: 83: I2C_Write(year);
 10585  001EA2  506C               	movf	_year,w,c
 10586  001EA4  ECCE  F010         	call	_I2C_Write
 10587                           
 10588                           ;I2C_Support.c: 84: I2C_Stop();
 10589  001EA8  EC60  F012         	call	_I2C_Stop	;wreg free
 10590  001EAC  0012               	return		;funcret
 10591  001EAE                     __end_of_DS3231_Setup_Time:
 10592                           	opt stack 0
 10593                           tblptru	equ	0xFF8
 10594                           tblptrh	equ	0xFF7
 10595                           tblptrl	equ	0xFF6
 10596                           tablat	equ	0xFF5
 10597                           prodh	equ	0xFF4
 10598                           prodl	equ	0xFF3
 10599                           intcon	equ	0xFF2
 10600                           intcon2	equ	0xFF1
 10601                           postinc0	equ	0xFEE
 10602                           wreg	equ	0xFE8
 10603                           postdec1	equ	0xFE5
 10604                           fsr1l	equ	0xFE1
 10605                           indf2	equ	0xFDF
 10606                           postinc2	equ	0xFDE
 10607                           postdec2	equ	0xFDD
 10608                           fsr2h	equ	0xFDA
 10609                           fsr2l	equ	0xFD9
 10610                           status	equ	0xFD8
 10611                           
 10612 ;; *************** function _DS3231_Read_Time *****************
 10613 ;; Defined at:
 10614 ;;		line 44 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Support.c"
 10615 ;; Parameters:    Size  Location     Type
 10616 ;;		None
 10617 ;; Auto vars:     Size  Location     Type
 10618 ;;  Device          1   20[COMRAM] unsigned char 
 10619 ;;  Address         1   19[COMRAM] unsigned char 
 10620 ;; Return value:  Size  Location     Type
 10621 ;;		None               void
 10622 ;; Registers used:
 10623 ;;		wreg, status,2, status,0, cstack
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10633 ;;Total ram usage:        2 bytes
 10634 ;; Hardware stack levels used:    1
 10635 ;; Hardware stack levels required when called:    6
 10636 ;; This function calls:
 10637 ;;		_I2C_ReStart
 10638 ;;		_I2C_Read
 10639 ;;		_I2C_Start
 10640 ;;		_I2C_Stop
 10641 ;;		_I2C_Write
 10642 ;; This function is called by:
 10643 ;;		_main
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text56
 10648  001EAE                     __ptext56:
 10649                           	opt stack 0
 10650  001EAE                     _DS3231_Read_Time:
 10651                           	opt stack 24
 10652                           
 10653                           ;I2C_Support.c: 46: char Device = 0x68;
 10654                           
 10655                           ;incstack = 0
 10656  001EAE  0E68               	movlw	104
 10657  001EB0  6E15               	movwf	DS3231_Read_Time@Device,c
 10658                           
 10659                           ;I2C_Support.c: 47: char Address = 0x00;
 10660  001EB2  0E00               	movlw	0
 10661  001EB4  6E14               	movwf	DS3231_Read_Time@Address,c
 10662                           
 10663                           ;I2C_Support.c: 48: I2C_Start();
 10664  001EB6  EC69  F012         	call	_I2C_Start	;wreg free
 10665                           
 10666                           ;I2C_Support.c: 49: I2C_Write((Device << 1) | 0);
 10667  001EBA  5015               	movf	DS3231_Read_Time@Device,w,c
 10668  001EBC  2415               	addwf	DS3231_Read_Time@Device,w,c
 10669  001EBE  ECCE  F010         	call	_I2C_Write
 10670                           
 10671                           ;I2C_Support.c: 50: I2C_Write(Address);
 10672  001EC2  5014               	movf	DS3231_Read_Time@Address,w,c
 10673  001EC4  ECCE  F010         	call	_I2C_Write
 10674                           
 10675                           ;I2C_Support.c: 51: I2C_ReStart();
 10676  001EC8  EC2F  F012         	call	_I2C_ReStart	;wreg free
 10677                           
 10678                           ;I2C_Support.c: 52: I2C_Write((Device << 1) | 1);
 10679  001ECC  80D8               	bsf	status,0,c
 10680  001ECE  3415               	rlcf	DS3231_Read_Time@Device,w,c
 10681  001ED0  ECCE  F010         	call	_I2C_Write
 10682                           
 10683                           ;I2C_Support.c: 53: second = I2C_Read(1);
 10684  001ED4  0E01               	movlw	1
 10685  001ED6  EC6C  F010         	call	_I2C_Read
 10686  001EDA  6E62               	movwf	_second,c
 10687                           
 10688                           ;I2C_Support.c: 54: minute = I2C_Read(1);
 10689  001EDC  0E01               	movlw	1
 10690  001EDE  EC6C  F010         	call	_I2C_Read
 10691  001EE2  6E5F               	movwf	_minute,c
 10692                           
 10693                           ;I2C_Support.c: 55: hour = I2C_Read(1);
 10694  001EE4  0E01               	movlw	1
 10695  001EE6  EC6C  F010         	call	_I2C_Read
 10696  001EEA  6E5E               	movwf	_hour,c
 10697                           
 10698                           ;I2C_Support.c: 56: dow = I2C_Read(1);
 10699  001EEC  0E01               	movlw	1
 10700  001EEE  EC6C  F010         	call	_I2C_Read
 10701  001EF2  6E5B               	movwf	_dow,c
 10702                           
 10703                           ;I2C_Support.c: 57: day = I2C_Read(1);
 10704  001EF4  0E01               	movlw	1
 10705  001EF6  EC6C  F010         	call	_I2C_Read
 10706  001EFA  6E5A               	movwf	_day,c
 10707                           
 10708                           ;I2C_Support.c: 58: month = I2C_Read(1);
 10709  001EFC  0E01               	movlw	1
 10710  001EFE  EC6C  F010         	call	_I2C_Read
 10711  001F02  6E60               	movwf	_month,c
 10712                           
 10713                           ;I2C_Support.c: 59: year = I2C_Read(0);
 10714  001F04  0E00               	movlw	0
 10715  001F06  EC6C  F010         	call	_I2C_Read
 10716  001F0A  6E6C               	movwf	_year,c
 10717                           
 10718                           ;I2C_Support.c: 60: I2C_Stop();
 10719  001F0C  EC60  F012         	call	_I2C_Stop	;wreg free
 10720  001F10  0012               	return		;funcret
 10721  001F12                     __end_of_DS3231_Read_Time:
 10722                           	opt stack 0
 10723                           tblptru	equ	0xFF8
 10724                           tblptrh	equ	0xFF7
 10725                           tblptrl	equ	0xFF6
 10726                           tablat	equ	0xFF5
 10727                           prodh	equ	0xFF4
 10728                           prodl	equ	0xFF3
 10729                           intcon	equ	0xFF2
 10730                           intcon2	equ	0xFF1
 10731                           postinc0	equ	0xFEE
 10732                           wreg	equ	0xFE8
 10733                           postdec1	equ	0xFE5
 10734                           fsr1l	equ	0xFE1
 10735                           indf2	equ	0xFDF
 10736                           postinc2	equ	0xFDE
 10737                           postdec2	equ	0xFDD
 10738                           fsr2h	equ	0xFDA
 10739                           fsr2l	equ	0xFD9
 10740                           status	equ	0xFD8
 10741                           
 10742 ;; *************** function _DS1621_Read_Temp *****************
 10743 ;; Defined at:
 10744 ;;		line 29 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Support.c"
 10745 ;; Parameters:    Size  Location     Type
 10746 ;;		None
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  Device          1   23[COMRAM] unsigned char 
 10749 ;;  Data_Ret        1   22[COMRAM] unsigned char 
 10750 ;;  Cmd             1   21[COMRAM] unsigned char 
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  2   19[COMRAM] int 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2, status,0, cstack
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10761 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10763 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10764 ;;Total ram usage:        5 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    6
 10767 ;; This function calls:
 10768 ;;		_I2C_ReStart
 10769 ;;		_I2C_Read
 10770 ;;		_I2C_Start
 10771 ;;		_I2C_Stop
 10772 ;;		_I2C_Write
 10773 ;; This function is called by:
 10774 ;;		_main
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text57
 10779  0021DA                     __ptext57:
 10780                           	opt stack 0
 10781  0021DA                     _DS1621_Read_Temp:
 10782                           	opt stack 24
 10783                           
 10784                           ;I2C_Support.c: 31: char Device = 0x48;
 10785                           
 10786                           ;incstack = 0
 10787  0021DA  0E48               	movlw	72
 10788  0021DC  6E18               	movwf	DS1621_Read_Temp@Device,c
 10789                           
 10790                           ;I2C_Support.c: 32: char Cmd = 0xAA;
 10791  0021DE  0EAA               	movlw	170
 10792  0021E0  6E16               	movwf	DS1621_Read_Temp@Cmd,c
 10793                           
 10794                           ;I2C_Support.c: 33: char Data_Ret;
 10795                           ;I2C_Support.c: 34: I2C_Start();
 10796  0021E2  EC69  F012         	call	_I2C_Start	;wreg free
 10797                           
 10798                           ;I2C_Support.c: 35: I2C_Write((Device << 1) | 0);
 10799  0021E6  5018               	movf	DS1621_Read_Temp@Device,w,c
 10800  0021E8  2418               	addwf	DS1621_Read_Temp@Device,w,c
 10801  0021EA  ECCE  F010         	call	_I2C_Write
 10802                           
 10803                           ;I2C_Support.c: 36: I2C_Write(Cmd);
 10804  0021EE  5016               	movf	DS1621_Read_Temp@Cmd,w,c
 10805  0021F0  ECCE  F010         	call	_I2C_Write
 10806                           
 10807                           ;I2C_Support.c: 37: I2C_ReStart();
 10808  0021F4  EC2F  F012         	call	_I2C_ReStart	;wreg free
 10809                           
 10810                           ;I2C_Support.c: 38: I2C_Write((Device << 1) | 1);
 10811  0021F8  80D8               	bsf	status,0,c
 10812  0021FA  3418               	rlcf	DS1621_Read_Temp@Device,w,c
 10813  0021FC  ECCE  F010         	call	_I2C_Write
 10814                           
 10815                           ;I2C_Support.c: 39: Data_Ret = I2C_Read(0);
 10816  002200  0E00               	movlw	0
 10817  002202  EC6C  F010         	call	_I2C_Read
 10818  002206  6E17               	movwf	DS1621_Read_Temp@Data_Ret,c
 10819                           
 10820                           ;I2C_Support.c: 40: I2C_Stop();
 10821  002208  EC60  F012         	call	_I2C_Stop	;wreg free
 10822                           
 10823                           ;I2C_Support.c: 41: return Data_Ret;
 10824  00220C  C017  F014         	movff	DS1621_Read_Temp@Data_Ret,?_DS1621_Read_Temp
 10825  002210  6A15               	clrf	?_DS1621_Read_Temp+1,c
 10826  002212  D000               	goto	l173
 10827  002214                     l173:
 10828  002214  0012               	return		;funcret
 10829  002216                     __end_of_DS1621_Read_Temp:
 10830                           	opt stack 0
 10831                           tblptru	equ	0xFF8
 10832                           tblptrh	equ	0xFF7
 10833                           tblptrl	equ	0xFF6
 10834                           tablat	equ	0xFF5
 10835                           prodh	equ	0xFF4
 10836                           prodl	equ	0xFF3
 10837                           intcon	equ	0xFF2
 10838                           intcon2	equ	0xFF1
 10839                           postinc0	equ	0xFEE
 10840                           wreg	equ	0xFE8
 10841                           postdec1	equ	0xFE5
 10842                           fsr1l	equ	0xFE1
 10843                           indf2	equ	0xFDF
 10844                           postinc2	equ	0xFDE
 10845                           postdec2	equ	0xFDD
 10846                           fsr2h	equ	0xFDA
 10847                           fsr2l	equ	0xFD9
 10848                           status	equ	0xFD8
 10849                           
 10850 ;; *************** function _I2C_Write *****************
 10851 ;; Defined at:
 10852 ;;		line 81 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  outByte         1    wreg     unsigned char 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  outByte         1   16[COMRAM] unsigned char 
 10857 ;;  n               1   17[COMRAM] unsigned char 
 10858 ;; Return value:  Size  Location     Type
 10859 ;;		None               void
 10860 ;; Registers used:
 10861 ;;		wreg, status,2, status,0, cstack
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10871 ;;Total ram usage:        2 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; Hardware stack levels required when called:    4
 10874 ;; This function calls:
 10875 ;;		_i2cHighScl
 10876 ;;		_i2cHighSda
 10877 ;;		_i2cLowScl
 10878 ;;		_i2cLowSda
 10879 ;; This function is called by:
 10880 ;;		_I2C_Write_Cmd_Only
 10881 ;;		_I2C_Write_Cmd_Write_Data
 10882 ;;		_DS1621_Read_Temp
 10883 ;;		_DS3231_Read_Time
 10884 ;;		_DS3231_Setup_Time
 10885 ;;		_I2C_Write_Address_Read_One_Byte
 10886 ;;		_I2C_Write_Address_Write_One_Byte
 10887 ;;		_I2C_Write_Cmd_Read_One_Byte
 10888 ;; This function uses a non-reentrant model
 10889 ;;
 10890                           
 10891                           	psect	text58
 10892  00219C                     __ptext58:
 10893                           	opt stack 0
 10894  00219C                     _I2C_Write:
 10895                           	opt stack 23
 10896                           
 10897                           ;incstack = 0
 10898                           ;I2C_Write@outByte stored from wreg
 10899  00219C  6E11               	movwf	I2C_Write@outByte,c
 10900                           
 10901                           ;I2C_Soft.c: 83: unsigned char n;
 10902                           ;I2C_Soft.c: 84: for(n=0; n<8; n++)
 10903  00219E  0E00               	movlw	0
 10904  0021A0  6E12               	movwf	I2C_Write@n,c
 10905  0021A2                     l5460:
 10906  0021A2  0E07               	movlw	7
 10907  0021A4  6412               	cpfsgt	I2C_Write@n,c
 10908  0021A6  D001               	goto	l111
 10909  0021A8  D011               	goto	l5478
 10910  0021AA                     l111:
 10911                           
 10912                           ;I2C_Soft.c: 85: {
 10913                           ;I2C_Soft.c: 86: if(outByte&0x80) i2cHighSda();
 10914  0021AA  AE11               	btfss	I2C_Write@outByte,7,c
 10915  0021AC  D003               	goto	l5466
 10916  0021AE  ECB5  F012         	call	_i2cHighSda	;wreg free
 10917  0021B2  D003               	goto	l5468
 10918  0021B4                     l5466:
 10919                           
 10920                           ;I2C_Soft.c: 87: else i2cLowSda();
 10921  0021B4  ECA8  F012         	call	_i2cLowSda	;wreg free
 10922  0021B8  D000               	goto	l5468
 10923  0021BA                     l5468:
 10924                           
 10925                           ;I2C_Soft.c: 88: i2cHighScl();
 10926  0021BA  EC92  F012         	call	_i2cHighScl	;wreg free
 10927                           
 10928                           ;I2C_Soft.c: 89: i2cLowScl();
 10929  0021BE  ECB1  F012         	call	_i2cLowScl	;wreg free
 10930                           
 10931                           ;I2C_Soft.c: 90: outByte = outByte << 1;
 10932  0021C2  5011               	movf	I2C_Write@outByte,w,c
 10933  0021C4  2411               	addwf	I2C_Write@outByte,w,c
 10934  0021C6  6E11               	movwf	I2C_Write@outByte,c
 10935  0021C8  2A12               	incf	I2C_Write@n,f,c
 10936  0021CA  D7EB               	goto	l5460
 10937  0021CC                     l5478:
 10938                           
 10939                           ;I2C_Soft.c: 91: }
 10940                           ;I2C_Soft.c: 92: i2cHighSda();
 10941  0021CC  ECB5  F012         	call	_i2cHighSda	;wreg free
 10942                           
 10943                           ;I2C_Soft.c: 93: i2cHighScl();
 10944  0021D0  EC92  F012         	call	_i2cHighScl	;wreg free
 10945                           
 10946                           ;I2C_Soft.c: 94: i2cLowScl();
 10947  0021D4  ECB1  F012         	call	_i2cLowScl	;wreg free
 10948  0021D8  0012               	return		;funcret
 10949  0021DA                     __end_of_I2C_Write:
 10950                           	opt stack 0
 10951                           tblptru	equ	0xFF8
 10952                           tblptrh	equ	0xFF7
 10953                           tblptrl	equ	0xFF6
 10954                           tablat	equ	0xFF5
 10955                           prodh	equ	0xFF4
 10956                           prodl	equ	0xFF3
 10957                           intcon	equ	0xFF2
 10958                           intcon2	equ	0xFF1
 10959                           postinc0	equ	0xFEE
 10960                           wreg	equ	0xFE8
 10961                           postdec1	equ	0xFE5
 10962                           fsr1l	equ	0xFE1
 10963                           indf2	equ	0xFDF
 10964                           postinc2	equ	0xFDE
 10965                           postdec2	equ	0xFDD
 10966                           fsr2h	equ	0xFDA
 10967                           fsr2l	equ	0xFD9
 10968                           status	equ	0xFD8
 10969                           
 10970 ;; *************** function _I2C_Stop *****************
 10971 ;; Defined at:
 10972 ;;		line 116 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;		None
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;		None
 10977 ;; Return value:  Size  Location     Type
 10978 ;;		None               void
 10979 ;; Registers used:
 10980 ;;		wreg, cstack
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10990 ;;Total ram usage:        0 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; Hardware stack levels required when called:    4
 10993 ;; This function calls:
 10994 ;;		_i2cHighScl
 10995 ;;		_i2cHighSda
 10996 ;;		_i2cLowScl
 10997 ;;		_i2cLowSda
 10998 ;; This function is called by:
 10999 ;;		_I2C_Write_Cmd_Only
 11000 ;;		_I2C_Write_Cmd_Write_Data
 11001 ;;		_DS1621_Read_Temp
 11002 ;;		_DS3231_Read_Time
 11003 ;;		_DS3231_Setup_Time
 11004 ;;		_I2C_Write_Address_Read_One_Byte
 11005 ;;		_I2C_Write_Address_Write_One_Byte
 11006 ;;		_I2C_Write_Cmd_Read_One_Byte
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           	psect	text59
 11011  0024C0                     __ptext59:
 11012                           	opt stack 0
 11013  0024C0                     _I2C_Stop:
 11014                           	opt stack 23
 11015                           
 11016                           ;I2C_Soft.c: 118: i2cLowScl();
 11017                           
 11018                           ;incstack = 0
 11019  0024C0  ECB1  F012         	call	_i2cLowScl	;wreg free
 11020                           
 11021                           ;I2C_Soft.c: 119: i2cLowSda();
 11022  0024C4  ECA8  F012         	call	_i2cLowSda	;wreg free
 11023                           
 11024                           ;I2C_Soft.c: 120: i2cHighScl();
 11025  0024C8  EC92  F012         	call	_i2cHighScl	;wreg free
 11026                           
 11027                           ;I2C_Soft.c: 121: i2cHighSda();
 11028  0024CC  ECB5  F012         	call	_i2cHighSda	;wreg free
 11029  0024D0  0012               	return		;funcret
 11030  0024D2                     __end_of_I2C_Stop:
 11031                           	opt stack 0
 11032                           tblptru	equ	0xFF8
 11033                           tblptrh	equ	0xFF7
 11034                           tblptrl	equ	0xFF6
 11035                           tablat	equ	0xFF5
 11036                           prodh	equ	0xFF4
 11037                           prodl	equ	0xFF3
 11038                           intcon	equ	0xFF2
 11039                           intcon2	equ	0xFF1
 11040                           postinc0	equ	0xFEE
 11041                           wreg	equ	0xFE8
 11042                           postdec1	equ	0xFE5
 11043                           fsr1l	equ	0xFE1
 11044                           indf2	equ	0xFDF
 11045                           postinc2	equ	0xFDE
 11046                           postdec2	equ	0xFDD
 11047                           fsr2h	equ	0xFDA
 11048                           fsr2l	equ	0xFD9
 11049                           status	equ	0xFD8
 11050                           
 11051 ;; *************** function _I2C_Start *****************
 11052 ;; Defined at:
 11053 ;;		line 99 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;		None
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;		None
 11058 ;; Return value:  Size  Location     Type
 11059 ;;		None               void
 11060 ;; Registers used:
 11061 ;;		wreg, cstack
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11071 ;;Total ram usage:        0 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:    4
 11074 ;; This function calls:
 11075 ;;		_i2cHighScl
 11076 ;;		_i2cHighSda
 11077 ;;		_i2cLowScl
 11078 ;;		_i2cLowSda
 11079 ;; This function is called by:
 11080 ;;		_I2C_Write_Cmd_Only
 11081 ;;		_I2C_Write_Cmd_Write_Data
 11082 ;;		_DS1621_Read_Temp
 11083 ;;		_DS3231_Read_Time
 11084 ;;		_DS3231_Setup_Time
 11085 ;;		_I2C_Write_Address_Read_One_Byte
 11086 ;;		_I2C_Write_Address_Write_One_Byte
 11087 ;;		_I2C_Write_Cmd_Read_One_Byte
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           	psect	text60
 11092  0024D2                     __ptext60:
 11093                           	opt stack 0
 11094  0024D2                     _I2C_Start:
 11095                           	opt stack 23
 11096                           
 11097                           ;I2C_Soft.c: 101: i2cHighSda();
 11098                           
 11099                           ;incstack = 0
 11100  0024D2  ECB5  F012         	call	_i2cHighSda	;wreg free
 11101                           
 11102                           ;I2C_Soft.c: 102: i2cHighScl();
 11103  0024D6  EC92  F012         	call	_i2cHighScl	;wreg free
 11104                           
 11105                           ;I2C_Soft.c: 103: i2cLowSda();
 11106  0024DA  ECA8  F012         	call	_i2cLowSda	;wreg free
 11107                           
 11108                           ;I2C_Soft.c: 104: i2cLowScl();
 11109  0024DE  ECB1  F012         	call	_i2cLowScl	;wreg free
 11110  0024E2  0012               	return		;funcret
 11111  0024E4                     __end_of_I2C_Start:
 11112                           	opt stack 0
 11113                           tblptru	equ	0xFF8
 11114                           tblptrh	equ	0xFF7
 11115                           tblptrl	equ	0xFF6
 11116                           tablat	equ	0xFF5
 11117                           prodh	equ	0xFF4
 11118                           prodl	equ	0xFF3
 11119                           intcon	equ	0xFF2
 11120                           intcon2	equ	0xFF1
 11121                           postinc0	equ	0xFEE
 11122                           wreg	equ	0xFE8
 11123                           postdec1	equ	0xFE5
 11124                           fsr1l	equ	0xFE1
 11125                           indf2	equ	0xFDF
 11126                           postinc2	equ	0xFDE
 11127                           postdec2	equ	0xFDD
 11128                           fsr2h	equ	0xFDA
 11129                           fsr2l	equ	0xFD9
 11130                           status	equ	0xFD8
 11131                           
 11132 ;; *************** function _I2C_Read *****************
 11133 ;; Defined at:
 11134 ;;		line 60 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  ack             1    wreg     unsigned char 
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;  ack             1   16[COMRAM] unsigned char 
 11139 ;;  inByte          1   18[COMRAM] unsigned char 
 11140 ;;  n               1   17[COMRAM] unsigned char 
 11141 ;; Return value:  Size  Location     Type
 11142 ;;                  1    wreg      unsigned char 
 11143 ;; Registers used:
 11144 ;;		wreg, status,2, status,0, cstack
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11151 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;Total ram usage:        3 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:    5
 11157 ;; This function calls:
 11158 ;;		_i2cAck
 11159 ;;		_i2cHighScl
 11160 ;;		_i2cHighSda
 11161 ;;		_i2cLowScl
 11162 ;;		_i2cNack
 11163 ;; This function is called by:
 11164 ;;		_DS1621_Read_Temp
 11165 ;;		_DS3231_Read_Time
 11166 ;;		_I2C_Write_Address_Read_One_Byte
 11167 ;;		_I2C_Write_Cmd_Read_One_Byte
 11168 ;; This function uses a non-reentrant model
 11169 ;;
 11170                           
 11171                           	psect	text61
 11172  0020D8                     __ptext61:
 11173                           	opt stack 0
 11174  0020D8                     _I2C_Read:
 11175                           	opt stack 24
 11176                           
 11177                           ;incstack = 0
 11178                           ;I2C_Read@ack stored from wreg
 11179  0020D8  6E11               	movwf	I2C_Read@ack,c
 11180                           
 11181                           ;I2C_Soft.c: 62: unsigned char inByte, n;
 11182                           ;I2C_Soft.c: 63: i2cHighSda();
 11183  0020DA  ECB5  F012         	call	_i2cHighSda	;wreg free
 11184                           
 11185                           ;I2C_Soft.c: 64: for (n=0; n<8; n++)
 11186  0020DE  0E00               	movlw	0
 11187  0020E0  6E12               	movwf	I2C_Read@n,c
 11188  0020E2                     l6202:
 11189  0020E2  0E07               	movlw	7
 11190  0020E4  6412               	cpfsgt	I2C_Read@n,c
 11191  0020E6  D001               	goto	l6206
 11192  0020E8  D00F               	goto	l6220
 11193  0020EA                     l6206:
 11194                           
 11195                           ;I2C_Soft.c: 65: {
 11196                           ;I2C_Soft.c: 66: i2cHighScl();
 11197  0020EA  EC92  F012         	call	_i2cHighScl	;wreg free
 11198                           
 11199                           ;I2C_Soft.c: 68: if (PORTDbits.RD7)
 11200  0020EE  AE83               	btfss	3971,7,c	;volatile
 11201  0020F0  D003               	goto	l6212
 11202                           
 11203                           ;I2C_Soft.c: 69: inByte = (inByte << 1) | 0x01;
 11204  0020F2  80D8               	bsf	status,0,c
 11205  0020F4  3613               	rlcf	I2C_Read@inByte,f,c
 11206  0020F6  D004               	goto	l6214
 11207  0020F8                     l6212:
 11208                           
 11209                           ;I2C_Soft.c: 70: else
 11210                           ;I2C_Soft.c: 71: inByte = inByte << 1;
 11211  0020F8  5013               	movf	I2C_Read@inByte,w,c
 11212  0020FA  2413               	addwf	I2C_Read@inByte,w,c
 11213  0020FC  6E13               	movwf	I2C_Read@inByte,c
 11214  0020FE  D000               	goto	l6214
 11215  002100                     l6214:
 11216                           
 11217                           ;I2C_Soft.c: 72: i2cLowScl();
 11218  002100  ECB1  F012         	call	_i2cLowScl	;wreg free
 11219  002104  2A12               	incf	I2C_Read@n,f,c
 11220  002106  D7ED               	goto	l6202
 11221  002108                     l6220:
 11222                           
 11223                           ;I2C_Soft.c: 73: }
 11224                           ;I2C_Soft.c: 74: if (ack) i2cAck();
 11225  002108  5011               	movf	I2C_Read@ack,w,c
 11226  00210A  B4D8               	btfsc	status,2,c
 11227  00210C  D003               	goto	l6224
 11228  00210E  EC72  F012         	call	_i2cAck	;wreg free
 11229  002112  D003               	goto	l6226
 11230  002114                     l6224:
 11231                           
 11232                           ;I2C_Soft.c: 75: else i2cNack();
 11233  002114  ECA3  F012         	call	_i2cNack	;wreg free
 11234  002118  D000               	goto	l6226
 11235  00211A                     l6226:
 11236                           
 11237                           ;I2C_Soft.c: 78: return(inByte);
 11238  00211A  5013               	movf	I2C_Read@inByte,w,c
 11239  00211C  D000               	goto	l108
 11240  00211E                     l108:
 11241  00211E  0012               	return		;funcret
 11242  002120                     __end_of_I2C_Read:
 11243                           	opt stack 0
 11244                           tblptru	equ	0xFF8
 11245                           tblptrh	equ	0xFF7
 11246                           tblptrl	equ	0xFF6
 11247                           tablat	equ	0xFF5
 11248                           prodh	equ	0xFF4
 11249                           prodl	equ	0xFF3
 11250                           intcon	equ	0xFF2
 11251                           intcon2	equ	0xFF1
 11252                           postinc0	equ	0xFEE
 11253                           wreg	equ	0xFE8
 11254                           postdec1	equ	0xFE5
 11255                           fsr1l	equ	0xFE1
 11256                           indf2	equ	0xFDF
 11257                           postinc2	equ	0xFDE
 11258                           postdec2	equ	0xFDD
 11259                           fsr2h	equ	0xFDA
 11260                           fsr2l	equ	0xFD9
 11261                           status	equ	0xFD8
 11262                           
 11263 ;; *************** function _i2cNack *****************
 11264 ;; Defined at:
 11265 ;;		line 40 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;		None
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;		None
 11270 ;; Return value:  Size  Location     Type
 11271 ;;		None               void
 11272 ;; Registers used:
 11273 ;;		wreg, cstack
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;Total ram usage:        0 bytes
 11284 ;; Hardware stack levels used:    1
 11285 ;; Hardware stack levels required when called:    4
 11286 ;; This function calls:
 11287 ;;		_i2cHighScl
 11288 ;;		_i2cLowScl
 11289 ;; This function is called by:
 11290 ;;		_I2C_Read
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           
 11294                           	psect	text62
 11295  002546                     __ptext62:
 11296                           	opt stack 0
 11297  002546                     _i2cNack:
 11298                           	opt stack 24
 11299                           
 11300                           ;I2C_Soft.c: 42: i2cHighScl();
 11301                           
 11302                           ;incstack = 0
 11303  002546  EC92  F012         	call	_i2cHighScl	;wreg free
 11304                           
 11305                           ;I2C_Soft.c: 43: i2cLowScl();
 11306  00254A  ECB1  F012         	call	_i2cLowScl	;wreg free
 11307  00254E  0012               	return		;funcret
 11308  002550                     __end_of_i2cNack:
 11309                           	opt stack 0
 11310                           tblptru	equ	0xFF8
 11311                           tblptrh	equ	0xFF7
 11312                           tblptrl	equ	0xFF6
 11313                           tablat	equ	0xFF5
 11314                           prodh	equ	0xFF4
 11315                           prodl	equ	0xFF3
 11316                           intcon	equ	0xFF2
 11317                           intcon2	equ	0xFF1
 11318                           postinc0	equ	0xFEE
 11319                           wreg	equ	0xFE8
 11320                           postdec1	equ	0xFE5
 11321                           fsr1l	equ	0xFE1
 11322                           indf2	equ	0xFDF
 11323                           postinc2	equ	0xFDE
 11324                           postdec2	equ	0xFDD
 11325                           fsr2h	equ	0xFDA
 11326                           fsr2l	equ	0xFD9
 11327                           status	equ	0xFD8
 11328                           
 11329 ;; *************** function _i2cAck *****************
 11330 ;; Defined at:
 11331 ;;		line 46 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;		None
 11334 ;; Auto vars:     Size  Location     Type
 11335 ;;		None
 11336 ;; Return value:  Size  Location     Type
 11337 ;;		None               void
 11338 ;; Registers used:
 11339 ;;		wreg, cstack
 11340 ;; Tracked objects:
 11341 ;;		On entry : 0/0
 11342 ;;		On exit  : 0/0
 11343 ;;		Unchanged: 0/0
 11344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11349 ;;Total ram usage:        0 bytes
 11350 ;; Hardware stack levels used:    1
 11351 ;; Hardware stack levels required when called:    4
 11352 ;; This function calls:
 11353 ;;		_i2cHighScl
 11354 ;;		_i2cHighSda
 11355 ;;		_i2cLowScl
 11356 ;;		_i2cLowSda
 11357 ;; This function is called by:
 11358 ;;		_I2C_Read
 11359 ;; This function uses a non-reentrant model
 11360 ;;
 11361                           
 11362                           	psect	text63
 11363  0024E4                     __ptext63:
 11364                           	opt stack 0
 11365  0024E4                     _i2cAck:
 11366                           	opt stack 24
 11367                           
 11368                           ;I2C_Soft.c: 48: i2cLowSda();
 11369                           
 11370                           ;incstack = 0
 11371  0024E4  ECA8  F012         	call	_i2cLowSda	;wreg free
 11372                           
 11373                           ;I2C_Soft.c: 49: i2cHighScl();
 11374  0024E8  EC92  F012         	call	_i2cHighScl	;wreg free
 11375                           
 11376                           ;I2C_Soft.c: 50: i2cLowScl();
 11377  0024EC  ECB1  F012         	call	_i2cLowScl	;wreg free
 11378                           
 11379                           ;I2C_Soft.c: 51: i2cHighSda();
 11380  0024F0  ECB5  F012         	call	_i2cHighSda	;wreg free
 11381  0024F4  0012               	return		;funcret
 11382  0024F6                     __end_of_i2cAck:
 11383                           	opt stack 0
 11384                           tblptru	equ	0xFF8
 11385                           tblptrh	equ	0xFF7
 11386                           tblptrl	equ	0xFF6
 11387                           tablat	equ	0xFF5
 11388                           prodh	equ	0xFF4
 11389                           prodl	equ	0xFF3
 11390                           intcon	equ	0xFF2
 11391                           intcon2	equ	0xFF1
 11392                           postinc0	equ	0xFEE
 11393                           wreg	equ	0xFE8
 11394                           postdec1	equ	0xFE5
 11395                           fsr1l	equ	0xFE1
 11396                           indf2	equ	0xFDF
 11397                           postinc2	equ	0xFDE
 11398                           postdec2	equ	0xFDD
 11399                           fsr2h	equ	0xFDA
 11400                           fsr2l	equ	0xFD9
 11401                           status	equ	0xFD8
 11402                           
 11403 ;; *************** function _I2C_ReStart *****************
 11404 ;; Defined at:
 11405 ;;		line 107 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;		None
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;		None
 11410 ;; Return value:  Size  Location     Type
 11411 ;;		None               void
 11412 ;; Registers used:
 11413 ;;		wreg, cstack
 11414 ;; Tracked objects:
 11415 ;;		On entry : 0/0
 11416 ;;		On exit  : 0/0
 11417 ;;		Unchanged: 0/0
 11418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;Total ram usage:        0 bytes
 11424 ;; Hardware stack levels used:    1
 11425 ;; Hardware stack levels required when called:    4
 11426 ;; This function calls:
 11427 ;;		_i2cHighScl
 11428 ;;		_i2cHighSda
 11429 ;;		_i2cLowScl
 11430 ;;		_i2cLowSda
 11431 ;; This function is called by:
 11432 ;;		_DS1621_Read_Temp
 11433 ;;		_DS3231_Read_Time
 11434 ;;		_I2C_Write_Address_Read_One_Byte
 11435 ;;		_I2C_Write_Cmd_Read_One_Byte
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text64
 11440  00245E                     __ptext64:
 11441                           	opt stack 0
 11442  00245E                     _I2C_ReStart:
 11443                           	opt stack 25
 11444                           
 11445                           ;I2C_Soft.c: 109: i2cLowScl();
 11446                           
 11447                           ;incstack = 0
 11448  00245E  ECB1  F012         	call	_i2cLowScl	;wreg free
 11449                           
 11450                           ;I2C_Soft.c: 110: i2cHighSda();
 11451  002462  ECB5  F012         	call	_i2cHighSda	;wreg free
 11452                           
 11453                           ;I2C_Soft.c: 111: i2cHighScl();
 11454  002466  EC92  F012         	call	_i2cHighScl	;wreg free
 11455                           
 11456                           ;I2C_Soft.c: 112: i2cLowSda();
 11457  00246A  ECA8  F012         	call	_i2cLowSda	;wreg free
 11458                           
 11459                           ;I2C_Soft.c: 113: i2cLowScl();
 11460  00246E  ECB1  F012         	call	_i2cLowScl	;wreg free
 11461  002472  0012               	return		;funcret
 11462  002474                     __end_of_I2C_ReStart:
 11463                           	opt stack 0
 11464                           tblptru	equ	0xFF8
 11465                           tblptrh	equ	0xFF7
 11466                           tblptrl	equ	0xFF6
 11467                           tablat	equ	0xFF5
 11468                           prodh	equ	0xFF4
 11469                           prodl	equ	0xFF3
 11470                           intcon	equ	0xFF2
 11471                           intcon2	equ	0xFF1
 11472                           postinc0	equ	0xFEE
 11473                           wreg	equ	0xFE8
 11474                           postdec1	equ	0xFE5
 11475                           fsr1l	equ	0xFE1
 11476                           indf2	equ	0xFDF
 11477                           postinc2	equ	0xFDE
 11478                           postdec2	equ	0xFDD
 11479                           fsr2h	equ	0xFDA
 11480                           fsr2l	equ	0xFD9
 11481                           status	equ	0xFD8
 11482                           
 11483 ;; *************** function _i2cLowSda *****************
 11484 ;; Defined at:
 11485 ;;		line 33 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;		None
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;		None               void
 11492 ;; Registers used:
 11493 ;;		None
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11503 ;;Total ram usage:        0 bytes
 11504 ;; Hardware stack levels used:    1
 11505 ;; Hardware stack levels required when called:    3
 11506 ;; This function calls:
 11507 ;;		Nothing
 11508 ;; This function is called by:
 11509 ;;		_i2cAck
 11510 ;;		_I2C_Write
 11511 ;;		_I2C_Start
 11512 ;;		_I2C_ReStart
 11513 ;;		_I2C_Stop
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517                           	psect	text65
 11518  002550                     __ptext65:
 11519                           	opt stack 0
 11520  002550                     _i2cLowSda:
 11521                           	opt stack 23
 11522                           
 11523                           ;I2C_Soft.c: 35: PORTDbits.RD7 = 0;
 11524                           
 11525                           ;incstack = 0
 11526  002550  9E83               	bcf	3971,7,c	;volatile
 11527                           
 11528                           ;I2C_Soft.c: 36: TRISDbits.RD7 = 0;
 11529  002552  9E95               	bcf	3989,7,c	;volatile
 11530                           
 11531                           ;I2C_Soft.c: 37: _delay((unsigned long)((2)*(8000000/4000000.0)));
 11532  002554  D000               	nop2		;2 cycle nop
 11533  002556  D000               	nop2		;2 cycle nop
 11534  002558  0012               	return		;funcret
 11535  00255A                     __end_of_i2cLowSda:
 11536                           	opt stack 0
 11537                           tblptru	equ	0xFF8
 11538                           tblptrh	equ	0xFF7
 11539                           tblptrl	equ	0xFF6
 11540                           tablat	equ	0xFF5
 11541                           prodh	equ	0xFF4
 11542                           prodl	equ	0xFF3
 11543                           intcon	equ	0xFF2
 11544                           intcon2	equ	0xFF1
 11545                           postinc0	equ	0xFEE
 11546                           wreg	equ	0xFE8
 11547                           postdec1	equ	0xFE5
 11548                           fsr1l	equ	0xFE1
 11549                           indf2	equ	0xFDF
 11550                           postinc2	equ	0xFDE
 11551                           postdec2	equ	0xFDD
 11552                           fsr2h	equ	0xFDA
 11553                           fsr2l	equ	0xFD9
 11554                           status	equ	0xFD8
 11555                           
 11556 ;; *************** function _i2cLowScl *****************
 11557 ;; Defined at:
 11558 ;;		line 20 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 11559 ;; Parameters:    Size  Location     Type
 11560 ;;		None
 11561 ;; Auto vars:     Size  Location     Type
 11562 ;;		None
 11563 ;; Return value:  Size  Location     Type
 11564 ;;		None               void
 11565 ;; Registers used:
 11566 ;;		None
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11576 ;;Total ram usage:        0 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:    3
 11579 ;; This function calls:
 11580 ;;		Nothing
 11581 ;; This function is called by:
 11582 ;;		_i2cNack
 11583 ;;		_i2cAck
 11584 ;;		_I2C_Read
 11585 ;;		_I2C_Write
 11586 ;;		_I2C_Start
 11587 ;;		_I2C_ReStart
 11588 ;;		_I2C_Stop
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           	psect	text66
 11593  002562                     __ptext66:
 11594                           	opt stack 0
 11595  002562                     _i2cLowScl:
 11596                           	opt stack 23
 11597                           
 11598                           ;I2C_Soft.c: 22: PORTBbits.RB4 = 0;
 11599                           
 11600                           ;incstack = 0
 11601  002562  9881               	bcf	3969,4,c	;volatile
 11602                           
 11603                           ;I2C_Soft.c: 23: TRISBbits.RB4 = 0;
 11604  002564  9893               	bcf	3987,4,c	;volatile
 11605                           
 11606                           ;I2C_Soft.c: 24: _delay((unsigned long)((1)*(8000000/4000000.0)));
 11607  002566  D000               	nop2		;2 cycle nop
 11608  002568  0012               	return		;funcret
 11609  00256A                     __end_of_i2cLowScl:
 11610                           	opt stack 0
 11611                           tblptru	equ	0xFF8
 11612                           tblptrh	equ	0xFF7
 11613                           tblptrl	equ	0xFF6
 11614                           tablat	equ	0xFF5
 11615                           prodh	equ	0xFF4
 11616                           prodl	equ	0xFF3
 11617                           intcon	equ	0xFF2
 11618                           intcon2	equ	0xFF1
 11619                           postinc0	equ	0xFEE
 11620                           wreg	equ	0xFE8
 11621                           postdec1	equ	0xFE5
 11622                           fsr1l	equ	0xFE1
 11623                           indf2	equ	0xFDF
 11624                           postinc2	equ	0xFDE
 11625                           postdec2	equ	0xFDD
 11626                           fsr2h	equ	0xFDA
 11627                           fsr2l	equ	0xFD9
 11628                           status	equ	0xFD8
 11629                           
 11630 ;; *************** function _i2cHighSda *****************
 11631 ;; Defined at:
 11632 ;;		line 27 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;		None
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;		None
 11637 ;; Return value:  Size  Location     Type
 11638 ;;		None               void
 11639 ;; Registers used:
 11640 ;;		None
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;Total ram usage:        0 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; Hardware stack levels required when called:    3
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		_i2cAck
 11657 ;;		_I2C_Init
 11658 ;;		_I2C_Read
 11659 ;;		_I2C_Write
 11660 ;;		_I2C_Start
 11661 ;;		_I2C_ReStart
 11662 ;;		_I2C_Stop
 11663 ;; This function uses a non-reentrant model
 11664 ;;
 11665                           
 11666                           	psect	text67
 11667  00256A                     __ptext67:
 11668                           	opt stack 0
 11669  00256A                     _i2cHighSda:
 11670                           	opt stack 25
 11671                           
 11672                           ;I2C_Soft.c: 29: TRISDbits.RD7 = 1;
 11673                           
 11674                           ;incstack = 0
 11675  00256A  8E95               	bsf	3989,7,c	;volatile
 11676                           
 11677                           ;I2C_Soft.c: 30: _delay((unsigned long)((2)*(8000000/4000000.0)));
 11678  00256C  D000               	nop2		;2 cycle nop
 11679  00256E  D000               	nop2		;2 cycle nop
 11680  002570  0012               	return		;funcret
 11681  002572                     __end_of_i2cHighSda:
 11682                           	opt stack 0
 11683                           tblptru	equ	0xFF8
 11684                           tblptrh	equ	0xFF7
 11685                           tblptrl	equ	0xFF6
 11686                           tablat	equ	0xFF5
 11687                           prodh	equ	0xFF4
 11688                           prodl	equ	0xFF3
 11689                           intcon	equ	0xFF2
 11690                           intcon2	equ	0xFF1
 11691                           postinc0	equ	0xFEE
 11692                           wreg	equ	0xFE8
 11693                           postdec1	equ	0xFE5
 11694                           fsr1l	equ	0xFE1
 11695                           indf2	equ	0xFDF
 11696                           postinc2	equ	0xFDE
 11697                           postdec2	equ	0xFDD
 11698                           fsr2h	equ	0xFDA
 11699                           fsr2l	equ	0xFD9
 11700                           status	equ	0xFD8
 11701                           
 11702 ;; *************** function _i2cHighScl *****************
 11703 ;; Defined at:
 11704 ;;		line 14 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/I2C_Soft.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;		None
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;		None
 11709 ;; Return value:  Size  Location     Type
 11710 ;;		None               void
 11711 ;; Registers used:
 11712 ;;		wreg
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11722 ;;Total ram usage:        0 bytes
 11723 ;; Hardware stack levels used:    1
 11724 ;; Hardware stack levels required when called:    3
 11725 ;; This function calls:
 11726 ;;		Nothing
 11727 ;; This function is called by:
 11728 ;;		_i2cNack
 11729 ;;		_i2cAck
 11730 ;;		_I2C_Init
 11731 ;;		_I2C_Read
 11732 ;;		_I2C_Write
 11733 ;;		_I2C_Start
 11734 ;;		_I2C_ReStart
 11735 ;;		_I2C_Stop
 11736 ;; This function uses a non-reentrant model
 11737 ;;
 11738                           
 11739                           	psect	text68
 11740  002524                     __ptext68:
 11741                           	opt stack 0
 11742  002524                     _i2cHighScl:
 11743                           	opt stack 25
 11744                           
 11745                           ;I2C_Soft.c: 16: TRISBbits.RB4 = 1;
 11746                           
 11747                           ;incstack = 0
 11748  002524  8893               	bsf	3987,4,c	;volatile
 11749                           
 11750                           ;I2C_Soft.c: 17: _delay((unsigned long)((10)*(8000000/4000000.0)));
 11751  002526  0E06               	movlw	6
 11752  002528                     u5527:
 11753  002528  2EE8               	decfsz	wreg,f,c
 11754  00252A  D7FE               	goto	u5527
 11755  00252C  D000               	nop2		;nop
 11756  00252E  0012               	return		;funcret
 11757  002530                     __end_of_i2cHighScl:
 11758                           	opt stack 0
 11759                           tblptru	equ	0xFF8
 11760                           tblptrh	equ	0xFF7
 11761                           tblptrl	equ	0xFF6
 11762                           tablat	equ	0xFF5
 11763                           prodh	equ	0xFF4
 11764                           prodl	equ	0xFF3
 11765                           intcon	equ	0xFF2
 11766                           intcon2	equ	0xFF1
 11767                           postinc0	equ	0xFEE
 11768                           wreg	equ	0xFE8
 11769                           postdec1	equ	0xFE5
 11770                           fsr1l	equ	0xFE1
 11771                           indf2	equ	0xFDF
 11772                           postinc2	equ	0xFDE
 11773                           postdec2	equ	0xFDD
 11774                           fsr2h	equ	0xFDA
 11775                           fsr2l	equ	0xFD9
 11776                           status	equ	0xFD8
 11777                           
 11778 ;; *************** function _chkisr *****************
 11779 ;; Defined at:
 11780 ;;		line 30 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Interrupt.c"
 11781 ;; Parameters:    Size  Location     Type
 11782 ;;		None
 11783 ;; Auto vars:     Size  Location     Type
 11784 ;;		None
 11785 ;; Return value:  Size  Location     Type
 11786 ;;		None               void
 11787 ;; Registers used:
 11788 ;;		wreg, status,2, status,0, cstack
 11789 ;; Tracked objects:
 11790 ;;		On entry : 0/0
 11791 ;;		On exit  : 0/0
 11792 ;;		Unchanged: 0/0
 11793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11796 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11797 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;Total ram usage:       14 bytes
 11799 ;; Hardware stack levels used:    1
 11800 ;; Hardware stack levels required when called:    2
 11801 ;; This function calls:
 11802 ;;		_INT0_isr
 11803 ;;		_TIMER1_isr
 11804 ;; This function is called by:
 11805 ;;		Interrupt level 2
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	intcode
 11810  000008                     __pintcode:
 11811                           	opt stack 0
 11812  000008                     _chkisr:
 11813                           	opt stack 20
 11814                           
 11815                           ;incstack = 0
 11816  000008  CFFA F003          	movff	pclath,??_chkisr
 11817  00000C  CFFB F004          	movff	pclatu,??_chkisr+1
 11818  000010  CFE9 F005          	movff	fsr0l,??_chkisr+2
 11819  000014  ED40  F00E         	call	int_func,f	;refresh shadow registers
 11820                           pclatu	equ	0xFFB
 11821                           pclath	equ	0xFFA
 11822                           tblptru	equ	0xFF8
 11823                           tblptrh	equ	0xFF7
 11824                           tblptrl	equ	0xFF6
 11825                           tablat	equ	0xFF5
 11826                           prodh	equ	0xFF4
 11827                           prodl	equ	0xFF3
 11828                           intcon	equ	0xFF2
 11829                           intcon2	equ	0xFF1
 11830                           postinc0	equ	0xFEE
 11831                           fsr0l	equ	0xFE9
 11832                           wreg	equ	0xFE8
 11833                           postdec1	equ	0xFE5
 11834                           fsr1l	equ	0xFE1
 11835                           indf2	equ	0xFDF
 11836                           postinc2	equ	0xFDE
 11837                           postdec2	equ	0xFDD
 11838                           fsr2h	equ	0xFDA
 11839                           fsr2l	equ	0xFD9
 11840                           status	equ	0xFD8
 11841                           
 11842                           	psect	intcode_body
 11843  001C80                     __pintcode_body:
 11844                           	opt stack 20
 11845  001C80                     int_func:
 11846                           	opt stack 20
 11847  001C80  0006               	pop		; remove dummy address from shadow register refresh
 11848  001C82  CFEA F006          	movff	fsr0h,??_chkisr+3
 11849  001C86  CFE1 F007          	movff	fsr1l,??_chkisr+4
 11850  001C8A  CFE2 F008          	movff	fsr1h,??_chkisr+5
 11851  001C8E  CFD9 F009          	movff	fsr2l,??_chkisr+6
 11852  001C92  CFDA F00A          	movff	fsr2h,??_chkisr+7
 11853  001C96  CFF3 F00B          	movff	prodl,??_chkisr+8
 11854  001C9A  CFF4 F00C          	movff	prodh,??_chkisr+9
 11855  001C9E  CFF6 F00D          	movff	tblptrl,??_chkisr+10
 11856  001CA2  CFF7 F00E          	movff	tblptrh,??_chkisr+11
 11857  001CA6  CFF8 F00F          	movff	tblptru,??_chkisr+12
 11858  001CAA  CFF5 F010          	movff	tablat,??_chkisr+13
 11859                           
 11860                           ;Interrupt.c: 32: if (PIR1bits.TMR1IF == 1) TIMER1_isr();
 11861  001CAE  A09E               	btfss	3998,0,c	;volatile
 11862  001CB0  D003               	goto	i2l5012
 11863  001CB2  EC98  F012         	call	_TIMER1_isr	;wreg free
 11864  001CB6  D000               	goto	i2l5012
 11865  001CB8                     i2l5012:
 11866                           
 11867                           ;Interrupt.c: 33: if (INTCONbits.INT0IF == 1) INT0_isr();
 11868  001CB8  A2F2               	btfss	intcon,1,c	;volatile
 11869  001CBA  D003               	goto	i2l221
 11870  001CBC  EC79  F007         	call	_INT0_isr	;wreg free
 11871  001CC0  D000               	goto	i2l221
 11872  001CC2                     i2l221:
 11873  001CC2  C010  FFF5         	movff	??_chkisr+13,tablat
 11874  001CC6  C00F  FFF8         	movff	??_chkisr+12,tblptru
 11875  001CCA  C00E  FFF7         	movff	??_chkisr+11,tblptrh
 11876  001CCE  C00D  FFF6         	movff	??_chkisr+10,tblptrl
 11877  001CD2  C00C  FFF4         	movff	??_chkisr+9,prodh
 11878  001CD6  C00B  FFF3         	movff	??_chkisr+8,prodl
 11879  001CDA  C00A  FFDA         	movff	??_chkisr+7,fsr2h
 11880  001CDE  C009  FFD9         	movff	??_chkisr+6,fsr2l
 11881  001CE2  C008  FFE2         	movff	??_chkisr+5,fsr1h
 11882  001CE6  C007  FFE1         	movff	??_chkisr+4,fsr1l
 11883  001CEA  C006  FFEA         	movff	??_chkisr+3,fsr0h
 11884  001CEE  C005  FFE9         	movff	??_chkisr+2,fsr0l
 11885  001CF2  C004  FFFB         	movff	??_chkisr+1,pclatu
 11886  001CF6  C003  FFFA         	movff	??_chkisr,pclath
 11887  001CFA  0011               	retfie		f
 11888  001CFC                     __end_of_chkisr:
 11889                           	opt stack 0
 11890                           pclatu	equ	0xFFB
 11891                           pclath	equ	0xFFA
 11892                           tblptru	equ	0xFF8
 11893                           tblptrh	equ	0xFF7
 11894                           tblptrl	equ	0xFF6
 11895                           tablat	equ	0xFF5
 11896                           prodh	equ	0xFF4
 11897                           prodl	equ	0xFF3
 11898                           intcon	equ	0xFF2
 11899                           intcon2	equ	0xFF1
 11900                           postinc0	equ	0xFEE
 11901                           fsr0h	equ	0xFEA
 11902                           fsr0l	equ	0xFE9
 11903                           wreg	equ	0xFE8
 11904                           postdec1	equ	0xFE5
 11905                           fsr1h	equ	0xFE2
 11906                           fsr1l	equ	0xFE1
 11907                           indf2	equ	0xFDF
 11908                           postinc2	equ	0xFDE
 11909                           postdec2	equ	0xFDD
 11910                           fsr2h	equ	0xFDA
 11911                           fsr2l	equ	0xFD9
 11912                           status	equ	0xFD8
 11913                           
 11914 ;; *************** function _TIMER1_isr *****************
 11915 ;; Defined at:
 11916 ;;		line 37 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Interrupt.c"
 11917 ;; Parameters:    Size  Location     Type
 11918 ;;		None
 11919 ;; Auto vars:     Size  Location     Type
 11920 ;;		None
 11921 ;; Return value:  Size  Location     Type
 11922 ;;		None               void
 11923 ;; Registers used:
 11924 ;;		wreg, status,2
 11925 ;; Tracked objects:
 11926 ;;		On entry : 0/0
 11927 ;;		On exit  : 0/0
 11928 ;;		Unchanged: 0/0
 11929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11934 ;;Total ram usage:        0 bytes
 11935 ;; Hardware stack levels used:    1
 11936 ;; This function calls:
 11937 ;;		Nothing
 11938 ;; This function is called by:
 11939 ;;		_chkisr
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           	psect	text70
 11944  002530                     __ptext70:
 11945                           	opt stack 0
 11946  002530                     _TIMER1_isr:
 11947                           	opt stack 21
 11948                           
 11949                           ;Interrupt.c: 39: Nec_state = 0;
 11950                           
 11951                           ;incstack = 0
 11952  002530  0E00               	movlw	0
 11953  002532  6E52               	movwf	_Nec_state,c
 11954                           
 11955                           ;Interrupt.c: 40: INTCON2bits.INTEDG0 = 0;
 11956  002534  9CF1               	bcf	intcon2,6,c	;volatile
 11957                           
 11958                           ;Interrupt.c: 41: T1CONbits.TMR1ON = 0;
 11959  002536  90CD               	bcf	4045,0,c	;volatile
 11960                           
 11961                           ;Interrupt.c: 42: PIR1bits.TMR1IF = 0;
 11962  002538  909E               	bcf	3998,0,c	;volatile
 11963  00253A  0012               	return		;funcret
 11964  00253C                     __end_of_TIMER1_isr:
 11965                           	opt stack 0
 11966                           pclatu	equ	0xFFB
 11967                           pclath	equ	0xFFA
 11968                           tblptru	equ	0xFF8
 11969                           tblptrh	equ	0xFF7
 11970                           tblptrl	equ	0xFF6
 11971                           tablat	equ	0xFF5
 11972                           prodh	equ	0xFF4
 11973                           prodl	equ	0xFF3
 11974                           intcon	equ	0xFF2
 11975                           intcon2	equ	0xFF1
 11976                           postinc0	equ	0xFEE
 11977                           fsr0h	equ	0xFEA
 11978                           fsr0l	equ	0xFE9
 11979                           wreg	equ	0xFE8
 11980                           postdec1	equ	0xFE5
 11981                           fsr1h	equ	0xFE2
 11982                           fsr1l	equ	0xFE1
 11983                           indf2	equ	0xFDF
 11984                           postinc2	equ	0xFDE
 11985                           postdec2	equ	0xFDD
 11986                           fsr2h	equ	0xFDA
 11987                           fsr2l	equ	0xFD9
 11988                           status	equ	0xFD8
 11989                           
 11990 ;; *************** function _INT0_isr *****************
 11991 ;; Defined at:
 11992 ;;		line 51 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Interrupt.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;		None
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;		None
 11997 ;; Return value:  Size  Location     Type
 11998 ;;		None               void
 11999 ;; Registers used:
 12000 ;;		wreg, status,2, status,0, cstack
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12010 ;;Total ram usage:        2 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; Hardware stack levels required when called:    1
 12013 ;; This function calls:
 12014 ;;		_force_nec_state0
 12015 ;; This function is called by:
 12016 ;;		_chkisr
 12017 ;; This function uses a non-reentrant model
 12018 ;;
 12019                           
 12020                           	psect	text71
 12021  000EF2                     __ptext71:
 12022                           	opt stack 0
 12023  000EF2                     _INT0_isr:
 12024                           	opt stack 20
 12025                           
 12026                           ;Interrupt.c: 53: INTCONbits.INT0IF = 0;
 12027                           
 12028                           ;incstack = 0
 12029  000EF2  92F2               	bcf	intcon,1,c	;volatile
 12030                           
 12031                           ;Interrupt.c: 54: if (Nec_state != 0)
 12032  000EF4  5052               	movf	_Nec_state,w,c
 12033  000EF6  B4D8               	btfsc	status,2,c
 12034  000EF8  D09E               	goto	i2l4736
 12035                           
 12036                           ;Interrupt.c: 55: {
 12037                           ;Interrupt.c: 56: Time_Elapsed = (TMR1H << 8) | TMR1L;
 12038  000EFA  50CE               	movf	4046,w,c	;volatile
 12039  000EFC  CFCF F001          	movff	4047,??_INT0_isr	;volatile
 12040  000F00  6A02               	clrf	(??_INT0_isr+1)& (0+255),c
 12041  000F02  C001  F002         	movff	??_INT0_isr,??_INT0_isr+1
 12042  000F06  6A01               	clrf	??_INT0_isr,c
 12043  000F08  1001               	iorwf	??_INT0_isr,w,c
 12044  000F0A  6E48               	movwf	_Time_Elapsed,c
 12045  000F0C  5002               	movf	??_INT0_isr+1,w,c
 12046  000F0E  6E49               	movwf	_Time_Elapsed+1,c
 12047                           
 12048                           ;Interrupt.c: 57: TMR1H = 0;
 12049  000F10  0E00               	movlw	0
 12050  000F12  6ECF               	movwf	4047,c	;volatile
 12051                           
 12052                           ;Interrupt.c: 58: TMR1L = 0;
 12053  000F14  0E00               	movlw	0
 12054  000F16  6ECE               	movwf	4046,c	;volatile
 12055                           
 12056                           ;Interrupt.c: 59: }
 12057                           ;Interrupt.c: 61: switch(Nec_state)
 12058  000F18  D08E               	goto	i2l4736
 12059  000F1A                     i2l4666:
 12060                           
 12061                           ;Interrupt.c: 64: {
 12062                           ;Interrupt.c: 66: TMR1H = 0;
 12063  000F1A  0E00               	movlw	0
 12064  000F1C  6ECF               	movwf	4047,c	;volatile
 12065                           
 12066                           ;Interrupt.c: 67: TMR1L = 0;
 12067  000F1E  0E00               	movlw	0
 12068  000F20  6ECE               	movwf	4046,c	;volatile
 12069                           
 12070                           ;Interrupt.c: 68: PIR1bits.TMR1IF = 0;
 12071  000F22  909E               	bcf	3998,0,c	;volatile
 12072                           
 12073                           ;Interrupt.c: 69: T1CON= 0x90;
 12074  000F24  0E90               	movlw	144
 12075  000F26  6ECD               	movwf	4045,c	;volatile
 12076                           
 12077                           ;Interrupt.c: 70: T1CONbits.TMR1ON = 1;
 12078  000F28  80CD               	bsf	4045,0,c	;volatile
 12079                           
 12080                           ;Interrupt.c: 71: bit_count = 0;
 12081  000F2A  0E00               	movlw	0
 12082  000F2C  6E58               	movwf	_bit_count,c
 12083                           
 12084                           ;Interrupt.c: 72: Nec_code = 0;
 12085  000F2E  0E00               	movlw	0
 12086  000F30  0100               	movlb	0	; () banked
 12087  000F32  6FF6               	movwf	_Nec_code& (0+255),b
 12088  000F34  0E00               	movlw	0
 12089  000F36  6FF7               	movwf	(_Nec_code+1)& (0+255),b
 12090  000F38  0E00               	movlw	0
 12091  000F3A  6FF8               	movwf	(_Nec_code+2)& (0+255),b
 12092  000F3C  0E00               	movlw	0
 12093  000F3E  6FF9               	movwf	(_Nec_code+3)& (0+255),b
 12094                           
 12095                           ;Interrupt.c: 73: Nec_state = 1;
 12096  000F40  0E01               	movlw	1
 12097  000F42  6E52               	movwf	_Nec_state,c
 12098  000F44  D076               	goto	i2l4730
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;Interrupt.c: 75: return;
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;Interrupt.c: 74: INTCON2bits.INTEDG0 = 1;
 12105  000F46  D088               	goto	i2l233
 12106  000F48                     i2l4676:
 12107                           
 12108                           ;Interrupt.c: 79: {
 12109                           ;Interrupt.c: 80: if (Time_Elapsed <=9500 && Time_Elapsed >=8500)
 12110  000F48  0E1D               	movlw	29
 12111  000F4A  5C48               	subwf	_Time_Elapsed,w,c
 12112  000F4C  0E25               	movlw	37
 12113  000F4E  5849               	subwfb	_Time_Elapsed+1,w,c
 12114  000F50  B0D8               	btfsc	status,0,c
 12115  000F52  D009               	goto	i2l4682
 12116  000F54  0E34               	movlw	52
 12117  000F56  5C48               	subwf	_Time_Elapsed,w,c
 12118  000F58  0E21               	movlw	33
 12119  000F5A  5849               	subwfb	_Time_Elapsed+1,w,c
 12120  000F5C  A0D8               	btfss	status,0,c
 12121  000F5E  D003               	goto	i2l4682
 12122                           
 12123                           ;Interrupt.c: 81: {
 12124                           ;Interrupt.c: 82: Nec_state = 2;
 12125  000F60  0E02               	movlw	2
 12126  000F62  6E52               	movwf	_Nec_state,c
 12127                           
 12128                           ;Interrupt.c: 83: }
 12129  000F64  D02A               	goto	i2l4708
 12130  000F66                     i2l4682:
 12131                           
 12132                           ;Interrupt.c: 84: else
 12133                           ;Interrupt.c: 85: {
 12134                           ;Interrupt.c: 86: force_nec_state0();
 12135  000F66  ECB9  F012         	call	_force_nec_state0	;wreg free
 12136  000F6A  D027               	goto	i2l4708
 12137  000F6C  D026               	goto	i2l4708
 12138                           
 12139                           ;Interrupt.c: 89: return;
 12140                           
 12141                           ;Interrupt.c: 87: }
 12142                           ;Interrupt.c: 88: INTCON2bits.INTEDG0 = 0;
 12143  000F6E  D074               	goto	i2l233
 12144  000F70                     i2l4688:
 12145                           
 12146                           ;Interrupt.c: 93: {
 12147                           ;Interrupt.c: 94: if (Time_Elapsed <=5000 && Time_Elapsed >=4000)
 12148  000F70  0E89               	movlw	137
 12149  000F72  5C48               	subwf	_Time_Elapsed,w,c
 12150  000F74  0E13               	movlw	19
 12151  000F76  5849               	subwfb	_Time_Elapsed+1,w,c
 12152  000F78  B0D8               	btfsc	status,0,c
 12153  000F7A  D009               	goto	i2l4694
 12154  000F7C  0EA0               	movlw	160
 12155  000F7E  5C48               	subwf	_Time_Elapsed,w,c
 12156  000F80  0E0F               	movlw	15
 12157  000F82  5849               	subwfb	_Time_Elapsed+1,w,c
 12158  000F84  A0D8               	btfss	status,0,c
 12159  000F86  D003               	goto	i2l4694
 12160  000F88                     
 12161                           ;Interrupt.c: 95: {
 12162                           ;Interrupt.c: 96: Nec_state = 3;
 12163  000F88  0E03               	movlw	3
 12164  000F8A  6E52               	movwf	_Nec_state,c
 12165                           
 12166                           ;Interrupt.c: 98: }
 12167  000F8C  D052               	goto	i2l4730
 12168  000F8E                     i2l4694:
 12169                           
 12170                           ;Interrupt.c: 99: else
 12171                           ;Interrupt.c: 100: {
 12172                           ;Interrupt.c: 101: force_nec_state0();
 12173  000F8E  ECB9  F012         	call	_force_nec_state0	;wreg free
 12174  000F92  D04F               	goto	i2l4730
 12175  000F94  D04E               	goto	i2l4730
 12176                           
 12177                           ;Interrupt.c: 104: return;
 12178                           
 12179                           ;Interrupt.c: 102: }
 12180                           ;Interrupt.c: 103: INTCON2bits.INTEDG0 = 1;
 12181  000F96  D060               	goto	i2l233
 12182  000F98                     i2l4700:
 12183                           
 12184                           ;Interrupt.c: 108: {
 12185                           ;Interrupt.c: 109: if (Time_Elapsed <=700 && Time_Elapsed >=400)
 12186  000F98  0EBD               	movlw	189
 12187  000F9A  5C48               	subwf	_Time_Elapsed,w,c
 12188  000F9C  0E02               	movlw	2
 12189  000F9E  5849               	subwfb	_Time_Elapsed+1,w,c
 12190  000FA0  B0D8               	btfsc	status,0,c
 12191  000FA2  D008               	goto	i2l4706
 12192  000FA4  0E90               	movlw	144
 12193  000FA6  5C48               	subwf	_Time_Elapsed,w,c
 12194  000FA8  0E01               	movlw	1
 12195  000FAA  5849               	subwfb	_Time_Elapsed+1,w,c
 12196  000FAC  A0D8               	btfss	status,0,c
 12197  000FAE  D002               	goto	i2l4706
 12198                           
 12199                           ;Interrupt.c: 110: {
 12200                           ;Interrupt.c: 111: Nec_state = 4;
 12201  000FB0  0E04               	movlw	4
 12202  000FB2  D7D7               	goto	L7
 12203  000FB4                     i2l4706:
 12204                           
 12205                           ;Interrupt.c: 113: else
 12206                           ;Interrupt.c: 114: {
 12207                           ;Interrupt.c: 115: force_nec_state0();
 12208  000FB4  ECB9  F012         	call	_force_nec_state0	;wreg free
 12209  000FB8  D000               	goto	i2l4708
 12210  000FBA                     i2l4708:
 12211                           
 12212                           ;Interrupt.c: 116: }
 12213                           ;Interrupt.c: 117: INTCON2bits.INTEDG0 = 0;
 12214  000FBA  9CF1               	bcf	intcon2,6,c	;volatile
 12215                           
 12216                           ;Interrupt.c: 118: return;
 12217  000FBC  D04D               	goto	i2l233
 12218  000FBE                     i2l4712:
 12219                           
 12220                           ;Interrupt.c: 122: {
 12221                           ;Interrupt.c: 123: if (Time_Elapsed <=1800 && Time_Elapsed >=400)
 12222  000FBE  0E09               	movlw	9
 12223  000FC0  5C48               	subwf	_Time_Elapsed,w,c
 12224  000FC2  0E07               	movlw	7
 12225  000FC4  5849               	subwfb	_Time_Elapsed+1,w,c
 12226  000FC6  B0D8               	btfsc	status,0,c
 12227  000FC8  D031               	goto	i2l4728
 12228  000FCA  0E90               	movlw	144
 12229  000FCC  5C48               	subwf	_Time_Elapsed,w,c
 12230  000FCE  0E01               	movlw	1
 12231  000FD0  5849               	subwfb	_Time_Elapsed+1,w,c
 12232  000FD2  A0D8               	btfss	status,0,c
 12233  000FD4  D02B               	goto	i2l4728
 12234                           
 12235                           ;Interrupt.c: 124: {
 12236                           ;Interrupt.c: 125: Nec_code = Nec_code << 1;
 12237  000FD6  90D8               	bcf	status,0,c
 12238  000FD8  0100               	movlb	0	; () banked
 12239  000FDA  35F6               	rlcf	_Nec_code& (0+255),w,b
 12240  000FDC  0100               	movlb	0	; () banked
 12241  000FDE  6FF6               	movwf	_Nec_code& (0+255),b
 12242  000FE0  0100               	movlb	0	; () banked
 12243  000FE2  35F7               	rlcf	(_Nec_code+1)& (0+255),w,b
 12244  000FE4  0100               	movlb	0	; () banked
 12245  000FE6  6FF7               	movwf	(_Nec_code+1)& (0+255),b
 12246  000FE8  0100               	movlb	0	; () banked
 12247  000FEA  35F8               	rlcf	(_Nec_code+2)& (0+255),w,b
 12248  000FEC  0100               	movlb	0	; () banked
 12249  000FEE  6FF8               	movwf	(_Nec_code+2)& (0+255),b
 12250  000FF0  0100               	movlb	0	; () banked
 12251  000FF2  35F9               	rlcf	(_Nec_code+3)& (0+255),w,b
 12252  000FF4  0100               	movlb	0	; () banked
 12253  000FF6  6FF9               	movwf	(_Nec_code+3)& (0+255),b
 12254                           
 12255                           ;Interrupt.c: 127: if (Time_Elapsed > 1000)
 12256  000FF8  0EE9               	movlw	233
 12257  000FFA  5C48               	subwf	_Time_Elapsed,w,c
 12258  000FFC  0E03               	movlw	3
 12259  000FFE  5849               	subwfb	_Time_Elapsed+1,w,c
 12260  001000  A0D8               	btfss	status,0,c
 12261  001002  D008               	goto	i2l4720
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;Interrupt.c: 129: {
 12265                           ;Interrupt.c: 130: Nec_code += 1;
 12266  001004  0E01               	movlw	1
 12267  001006  0100               	movlb	0	; () banked
 12268  001008  27F6               	addwf	_Nec_code& (0+255),f,b
 12269  00100A  0E00               	movlw	0
 12270  00100C  23F7               	addwfc	(_Nec_code+1)& (0+255),f,b
 12271  00100E  23F8               	addwfc	(_Nec_code+2)& (0+255),f,b
 12272  001010  23F9               	addwfc	(_Nec_code+3)& (0+255),f,b
 12273  001012  D000               	goto	i2l4720
 12274  001014                     i2l4720:
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;Interrupt.c: 131: }
 12278                           ;Interrupt.c: 132: bit_count++;
 12279  001014  2A58               	incf	_bit_count,f,c
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;Interrupt.c: 133: if (bit_count > 31)
 12283  001016  0E1F               	movlw	31
 12284  001018  6458               	cpfsgt	_bit_count,c
 12285  00101A  D7B6               	goto	L8
 12286                           
 12287                           ; BSR set to: 0
 12288                           ;Interrupt.c: 134: {
 12289                           ;Interrupt.c: 135: nec_ok = 1;
 12290  00101C  0E00               	movlw	0
 12291  00101E  6E4B               	movwf	_nec_ok+1,c
 12292  001020  0E01               	movlw	1
 12293  001022  6E4A               	movwf	_nec_ok,c
 12294                           
 12295                           ; BSR set to: 0
 12296                           ;Interrupt.c: 136: INTCONbits.INT0IE = 0;
 12297  001024  98F2               	bcf	intcon,4,c	;volatile
 12298                           
 12299                           ;Interrupt.c: 137: Nec_state = 0;
 12300  001026  0E00               	movlw	0
 12301  001028  6E52               	movwf	_Nec_state,c
 12302  00102A  D7AE               	goto	L8
 12303  00102C                     i2l4728:
 12304                           
 12305                           ;Interrupt.c: 142: else
 12306                           ;Interrupt.c: 143: {
 12307                           ;Interrupt.c: 144: force_nec_state0();
 12308  00102C  ECB9  F012         	call	_force_nec_state0	;wreg free
 12309  001030  D000               	goto	i2l4730
 12310  001032                     i2l4730:
 12311                           
 12312                           ;Interrupt.c: 145: }
 12313                           ;Interrupt.c: 146: INTCON2bits.INTEDG0 = 1;
 12314  001032  8CF1               	bsf	intcon2,6,c	;volatile
 12315                           
 12316                           ;Interrupt.c: 148: }
 12317                           ;Interrupt.c: 149: }
 12318                           
 12319                           ;Interrupt.c: 147: return;
 12320  001034  D011               	goto	i2l233
 12321  001036                     i2l4736:
 12322  001036  5052               	movf	_Nec_state,w,c
 12323                           
 12324                           ; Switch size 1, requested type "space"
 12325                           ; Number of cases is 5, Range of values is 0 to 4
 12326                           ; switch strategies available:
 12327                           ; Name         Instructions Cycles
 12328                           ; simple_byte           16     9 (average)
 12329                           ;	Chosen strategy is simple_byte
 12330  001038  0A00               	xorlw	0	; case 0
 12331  00103A  B4D8               	btfsc	status,2,c
 12332  00103C  D76E               	goto	i2l4666
 12333  00103E  0A01               	xorlw	1	; case 1
 12334  001040  B4D8               	btfsc	status,2,c
 12335  001042  D782               	goto	i2l4676
 12336  001044  0A03               	xorlw	3	; case 2
 12337  001046  B4D8               	btfsc	status,2,c
 12338  001048  D793               	goto	i2l4688
 12339  00104A  0A01               	xorlw	1	; case 3
 12340  00104C  B4D8               	btfsc	status,2,c
 12341  00104E  D7A4               	goto	i2l4700
 12342  001050  0A07               	xorlw	7	; case 4
 12343  001052  B4D8               	btfsc	status,2,c
 12344  001054  D7B4               	goto	i2l4712
 12345  001056  D000               	goto	i2l233
 12346  001058                     i2l233:
 12347  001058  0012               	return		;funcret
 12348  00105A                     __end_of_INT0_isr:
 12349                           	opt stack 0
 12350                           pclatu	equ	0xFFB
 12351                           pclath	equ	0xFFA
 12352                           tblptru	equ	0xFF8
 12353                           tblptrh	equ	0xFF7
 12354                           tblptrl	equ	0xFF6
 12355                           tablat	equ	0xFF5
 12356                           prodh	equ	0xFF4
 12357                           prodl	equ	0xFF3
 12358                           intcon	equ	0xFF2
 12359                           intcon2	equ	0xFF1
 12360                           postinc0	equ	0xFEE
 12361                           fsr0h	equ	0xFEA
 12362                           fsr0l	equ	0xFE9
 12363                           wreg	equ	0xFE8
 12364                           postdec1	equ	0xFE5
 12365                           fsr1h	equ	0xFE2
 12366                           fsr1l	equ	0xFE1
 12367                           indf2	equ	0xFDF
 12368                           postinc2	equ	0xFDE
 12369                           postdec2	equ	0xFDD
 12370                           fsr2h	equ	0xFDA
 12371                           fsr2l	equ	0xFD9
 12372                           status	equ	0xFD8
 12373                           
 12374 ;; *************** function _force_nec_state0 *****************
 12375 ;; Defined at:
 12376 ;;		line 45 in file "C:/Users/Michael Luna/Desktop/ECE3301L/Lab12/Lab12_sample_Sp22/Interrupt.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;		None
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;		None
 12381 ;; Return value:  Size  Location     Type
 12382 ;;		None               void
 12383 ;; Registers used:
 12384 ;;		wreg, status,2
 12385 ;; Tracked objects:
 12386 ;;		On entry : 0/0
 12387 ;;		On exit  : 0/0
 12388 ;;		Unchanged: 0/0
 12389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12394 ;;Total ram usage:        0 bytes
 12395 ;; Hardware stack levels used:    1
 12396 ;; This function calls:
 12397 ;;		Nothing
 12398 ;; This function is called by:
 12399 ;;		_INT0_isr
 12400 ;; This function uses a non-reentrant model
 12401 ;;
 12402                           
 12403                           	psect	text72
 12404  002572                     __ptext72:
 12405                           	opt stack 0
 12406  002572                     _force_nec_state0:
 12407                           	opt stack 20
 12408                           
 12409                           ;Interrupt.c: 47: Nec_state=0;
 12410                           
 12411                           ;incstack = 0
 12412  002572  0E00               	movlw	0
 12413  002574  6E52               	movwf	_Nec_state,c
 12414                           
 12415                           ;Interrupt.c: 48: T1CONbits.TMR1ON = 0;
 12416  002576  90CD               	bcf	4045,0,c	;volatile
 12417  002578  0012               	return		;funcret
 12418  00257A                     __end_of_force_nec_state0:
 12419                           	opt stack 0
 12420                           pclatu	equ	0xFFB
 12421                           pclath	equ	0xFFA
 12422                           tblptru	equ	0xFF8
 12423                           tblptrh	equ	0xFF7
 12424                           tblptrl	equ	0xFF6
 12425                           tablat	equ	0xFF5
 12426                           prodh	equ	0xFF4
 12427                           prodl	equ	0xFF3
 12428                           intcon	equ	0xFF2
 12429                           intcon2	equ	0xFF1
 12430                           postinc0	equ	0xFEE
 12431                           fsr0h	equ	0xFEA
 12432                           fsr0l	equ	0xFE9
 12433                           wreg	equ	0xFE8
 12434                           postdec1	equ	0xFE5
 12435                           fsr1h	equ	0xFE2
 12436                           fsr1l	equ	0xFE1
 12437                           indf2	equ	0xFDF
 12438                           postinc2	equ	0xFDE
 12439                           postdec2	equ	0xFDD
 12440                           fsr2h	equ	0xFDA
 12441                           fsr2l	equ	0xFD9
 12442                           status	equ	0xFD8
 12443                           pclatu	equ	0xFFB
 12444                           pclath	equ	0xFFA
 12445                           tblptru	equ	0xFF8
 12446                           tblptrh	equ	0xFF7
 12447                           tblptrl	equ	0xFF6
 12448                           tablat	equ	0xFF5
 12449                           prodh	equ	0xFF4
 12450                           prodl	equ	0xFF3
 12451                           intcon	equ	0xFF2
 12452                           intcon2	equ	0xFF1
 12453                           postinc0	equ	0xFEE
 12454                           fsr0h	equ	0xFEA
 12455                           fsr0l	equ	0xFE9
 12456                           wreg	equ	0xFE8
 12457                           postdec1	equ	0xFE5
 12458                           fsr1h	equ	0xFE2
 12459                           fsr1l	equ	0xFE1
 12460                           indf2	equ	0xFDF
 12461                           postinc2	equ	0xFDE
 12462                           postdec2	equ	0xFDD
 12463                           fsr2h	equ	0xFDA
 12464                           fsr2l	equ	0xFD9
 12465                           status	equ	0xFD8
 12466                           
 12467                           	psect	rparam
 12468  0000                     pclatu	equ	0xFFB
 12469                           pclath	equ	0xFFA
 12470                           tblptru	equ	0xFF8
 12471                           tblptrh	equ	0xFF7
 12472                           tblptrl	equ	0xFF6
 12473                           tablat	equ	0xFF5
 12474                           prodh	equ	0xFF4
 12475                           prodl	equ	0xFF3
 12476                           intcon	equ	0xFF2
 12477                           intcon2	equ	0xFF1
 12478                           postinc0	equ	0xFEE
 12479                           fsr0h	equ	0xFEA
 12480                           fsr0l	equ	0xFE9
 12481                           wreg	equ	0xFE8
 12482                           postdec1	equ	0xFE5
 12483                           fsr1h	equ	0xFE2
 12484                           fsr1l	equ	0xFE1
 12485                           indf2	equ	0xFDF
 12486                           postinc2	equ	0xFDE
 12487                           postdec2	equ	0xFDD
 12488                           fsr2h	equ	0xFDA
 12489                           fsr2l	equ	0xFD9
 12490                           status	equ	0xFD8


Data Sizes:
    Strings     287
    Constant    547
    Data        185
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     67     111
    BANK0           128     11     128
    BANK1           256     18      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    nbr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), RPM_Txt(BANK0[5]), DC_Txt(BANK0[4]), Fan_SW_Txt(BANK0[4]), 
		 -> date(BANK0[9]), time(BANK0[9]), tempF(BANK0[4]), tempC(BANK0[4]), 
		 -> buffer(BANK1[33]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), RPM_Txt(BANK0[5]), DC_Txt(BANK0[4]), Fan_SW_Txt(BANK0[4]), 
		 -> date(BANK0[9]), time(BANK0[9]), tempF(BANK0[4]), tempC(BANK0[4]), 
		 -> buffer(BANK1[33]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[3]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[2]), 
		 -> STR_13(CODE[3]), STR_12(CODE[13]), STR_11(CODE[22]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK0[4]), buffer(BANK1[33]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK0[4]), buffer(BANK1[33]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_10(CODE[15]), STR_9(CODE[22]), STR_8(CODE[33]), STR_7(CODE[16]), 
		 -> STR_6(CODE[20]), STR_5(CODE[21]), STR_4(CODE[30]), STR_3(CODE[15]), 
		 -> STR_2(CODE[16]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), Fan_SW_Txt(BANK0[4]), buffer(BANK1[33]), 

    txt	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), buffer(BANK1[33]), 

    drawtext@_text	PTR unsigned char  size(2) Largest target is 33
		 -> NULL(NULL[0]), RPM_Txt(BANK0[5]), DC_Txt(BANK0[4]), Fan_SW_Txt(BANK0[4]), 
		 -> date(BANK0[9]), time(BANK0[9]), tempF(BANK0[4]), tempC(BANK0[4]), 
		 -> buffer(BANK1[33]), 


Critical Paths under _main in COMRAM

    _get_RPM->_do_update_pwm
    _Update_Screen->_drawtext
    ___awmod->___awdiv
    ___awdiv->___wmul
    _Turn_On_Fan->_do_update_pwm
    _Turn_Off_Fan->_printf
    _printf->___llmod
    ___llmod->___lldiv
    _Initialize_Screen->_drawtext
    _fillScreen->_fillRectangle
    _fillRectangle->_setAddrWindow
    _drawtext->_drawChar
    _drawChar->_fillRect
    _fillRect->_drawFastVLine
    _drawFastVLine->_setAddrWindow
    _drawCircle->_drawPixel
    _drawPixel->_setAddrWindow
    _setAddrWindow->_write_command
    _setAddrWindow->_write_data
    _Rcmd3->_delay_ms
    _Rcmd2red->_write_command
    _Rcmd2red->_write_data
    _Rcmd1->_delay_ms
    _write_data->_spiwrite
    _write_command->_spiwrite
    _LCD_Reset->_delay_ms
    _delay_ms->___wmul
    _Increase_Speed->_do_update_pwm
    _Do_Init->_DS1621_Init
    _init_UART->_OpenUSART
    _DS1621_Init->_I2C_Write_Cmd_Write_Data
    _I2C_Write_Cmd_Write_Data->_I2C_Write
    _I2C_Write_Cmd_Only->_I2C_Write
    _Decrease_Speed->_do_update_pwm
    _do_update_pwm->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    _DS3231_Setup_Time->_I2C_Write
    _DS3231_Read_Time->_I2C_Read
    _DS1621_Read_Temp->_I2C_Read

Critical Paths under _chkisr in COMRAM

    _chkisr->_INT0_isr

Critical Paths under _main in BANK0

    _main->_Update_Screen
    _Update_Screen->_drawtext
    _Initialize_Screen->_drawtext

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _Toggle_Fan->_printf
    _Turn_On_Fan->_printf
    _Turn_Off_Fan->_printf

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  129654
                                             13 BANK1      5     5      0
                   _DS1621_Read_Temp
                   _DS3231_Read_Time
                  _DS3231_Setup_Time
                     _Decrease_Speed
                            _Do_Beep
                            _Do_Init
                     _Increase_Speed
                  _Initialize_Screen
                         _Toggle_Fan
                      _Update_Screen
                            ___awdiv
                             ___wmul
                            _get_RPM
                             _printf
 ---------------------------------------------------------------------------------
 (1) _get_RPM                                              4     2      2   12967
                                              0 BANK0      4     2      2
                            ___awdiv
                             ___wmul
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (1) _Update_Screen                                        4     4      0   25521
                                              7 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                           _drawtext
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1819
                                             30 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2447
                                             22 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Toggle_Fan                                           0     0      0   23073
                       _Turn_Off_Fan
                        _Turn_On_Fan
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Turn_On_Fan                                          0     0      0   13911
                      _do_update_pwm
                             _printf
 ---------------------------------------------------------------------------------
 (2) _Turn_Off_Fan                                         0     0      0    4581
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              40    26     14    4581
                                             38 COMRAM    18     4     14
                                              0 BANK1     13    13      0
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             16 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     386
                                             29 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     549
                                             16 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Initialize_Screen                                    0     0      0   38710
                          _LCD_Reset
            _TFT_GreenTab_Initialize
                         _drawCircle
                           _drawtext
                         _fillScreen
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     2      4    1803
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _fillScreen                                           2     0      2    2396
                                             35 COMRAM     2     0      2
                      _fillRectangle
 ---------------------------------------------------------------------------------
 (3) _fillRectangle                                       12     7      5    2288
                                             23 COMRAM    12     7      5
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _drawtext                                            17     9      8   19387
                                             56 COMRAM    10     2      8
                                              0 BANK0      7     7      0
                           _drawChar
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     207
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _drawChar                                            11     4      7   12308
                                             45 COMRAM    11     4      7
                             ___wmul
                          _drawPixel
                           _fillRect
 ---------------------------------------------------------------------------------
 (4) _fillRect                                            11     6      5    4404
                                             34 COMRAM    11     6      5
                      _drawFastVLine
 ---------------------------------------------------------------------------------
 (5) _drawFastVLine                                       11     7      4    3534
                                             23 COMRAM    11     7      4
                      _setAddrWindow
                           _spiwrite
 ---------------------------------------------------------------------------------
 (2) _drawCircle                                          20    12      8    7512
                                             27 COMRAM    20    12      8
                          _drawPixel
 ---------------------------------------------------------------------------------
 (4) _drawPixel                                            4     1      3    4879
                                             23 COMRAM     4     1      3
                      _setAddrWindow
                         _write_data
 ---------------------------------------------------------------------------------
 (6) _setAddrWindow                                        4     1      3    1178
                                             19 COMRAM     4     1      3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _TFT_GreenTab_Initialize                              0     0      0    5248
                              _Rcmd1
                           _Rcmd2red
                              _Rcmd3
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd3                                                0     0      0    2494
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd2red                                             0     0      0     130
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (3) _Rcmd1                                                0     0      0    2494
                           _delay_ms
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (7) _write_data                                           1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (7) _write_command                                        1     1      0      65
                                             18 COMRAM     1     1      0
                           _spiwrite
 ---------------------------------------------------------------------------------
 (6) _spiwrite                                             2     2      0      34
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Reset                                            0     0      0    2364
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             6     4      2    2364
                                             22 COMRAM     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1156
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Increase_Speed                                       0     0      0    9330
                            _Do_Beep
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0    1181
                        _DS1621_Init
                           _I2C_Init
                     _init_INTERRUPT
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     387
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     387
                                             16 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _init_INTERRUPT                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             4     0      4      77
                                             16 COMRAM     4     0      4
                         _i2cHighScl
                         _i2cHighSda
 ---------------------------------------------------------------------------------
 (2) _DS1621_Init                                          1     1      0     717
                                             21 COMRAM     1     1      0
                 _I2C_Write_Cmd_Only
           _I2C_Write_Cmd_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Write_Data                             3     1      2     380
                                             18 COMRAM     3     1      2
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Cmd_Only                                   2     1      1     272
                                             18 COMRAM     2     1      1
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _Decrease_Speed                                       0     0      0    9330
                            _Do_Beep
                      _do_update_pwm
 ---------------------------------------------------------------------------------
 (2) _do_update_pwm                                        9     9      0    9330
                                             58 COMRAM     9     9      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             4     1      3    2435
                                             24 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     448
                                             16 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3160
                                             28 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3092
                                             43 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             16 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _Do_Beep                                              0     0      0       0
                    _Activate_Buzzer
                  _Deactivate_Buzzer
                   _Wait_Half_Second
 ---------------------------------------------------------------------------------
 (3) _Wait_Half_Second                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Deactivate_Buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Activate_Buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DS3231_Setup_Time                                    2     2      0     201
                                             18 COMRAM     2     2      0
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS3231_Read_Time                                     2     2      0     430
                                             19 COMRAM     2     2      0
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _DS1621_Read_Temp                                     5     3      2     464
                                             19 COMRAM     5     3      2
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            2     2      0     133
                                             16 COMRAM     2     2      0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             3     3      0     198
                                             16 COMRAM     3     3      0
                             _i2cAck
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                            _i2cNack
 ---------------------------------------------------------------------------------
 (3) _i2cNack                                              0     0      0       0
                         _i2cHighScl
                          _i2cLowScl
 ---------------------------------------------------------------------------------
 (3) _i2cAck                                               0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
                         _i2cHighScl
                         _i2cHighSda
                          _i2cLowScl
                          _i2cLowSda
 ---------------------------------------------------------------------------------
 (5) _i2cLowSda                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _i2cLowScl                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighSda                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2cHighScl                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _chkisr                                              14    14      0       0
                                              2 COMRAM    14    14      0
                           _INT0_isr
                         _TIMER1_isr
 ---------------------------------------------------------------------------------
 (10) _TIMER1_isr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT0_isr                                            2     2      0       0
                                              0 COMRAM     2     2      0
                   _force_nec_state0
 ---------------------------------------------------------------------------------
 (11) _force_nec_state0                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1621_Read_Temp
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Read_Time
     _I2C_ReStart
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Read
       _i2cAck
         _i2cHighScl
         _i2cHighSda
         _i2cLowScl
         _i2cLowSda
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cNack
         _i2cHighScl
         _i2cLowScl
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _DS3231_Setup_Time
     _I2C_Start
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Stop
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
     _I2C_Write
       _i2cHighScl
       _i2cHighSda
       _i2cLowScl
       _i2cLowSda
   _Decrease_Speed
     _Do_Beep
       _Activate_Buzzer
       _Deactivate_Buzzer
       _Wait_Half_Second
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
       ___lbtoft
         ___ftpack
   _Do_Beep
     _Activate_Buzzer
     _Deactivate_Buzzer
     _Wait_Half_Second
   _Do_Init
     _DS1621_Init
       _I2C_Write_Cmd_Only
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
       _I2C_Write_Cmd_Write_Data
         _I2C_Start
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Stop
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
         _I2C_Write
           _i2cHighScl
           _i2cHighSda
           _i2cLowScl
           _i2cLowSda
     _I2C_Init
       _i2cHighScl
       _i2cHighSda
     _init_INTERRUPT
     _init_UART
       _OpenUSART
   _Increase_Speed
     _Do_Beep
       _Activate_Buzzer
       _Deactivate_Buzzer
       _Wait_Half_Second
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
       ___lbtoft
         ___ftpack
   _Initialize_Screen
     _LCD_Reset
       _delay_ms
         ___wmul
     _TFT_GreenTab_Initialize
       _Rcmd1
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd2red
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _Rcmd3
         _delay_ms
           ___wmul
         _write_command
           _spiwrite
         _write_data
           _spiwrite
       _write_command
         _spiwrite
       _write_data
         _spiwrite
     _drawCircle
       _drawPixel
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _write_data
           _spiwrite
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _fillScreen
       _fillRectangle
         _setAddrWindow
           _write_command
             _spiwrite
           _write_data
             _spiwrite
         _spiwrite
     _strcpy
   _Toggle_Fan
     _Turn_Off_Fan
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
         _putch
     _Turn_On_Fan
       _do_update_pwm
         ___ftdiv
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
         ___lbtoft
           ___ftpack
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
         _putch
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
       _putch
   _Update_Screen
     ___awdiv
       ___wmul (ARG)
     ___awmod
       ___awdiv (ARG)
         ___wmul (ARG)
     _drawtext
       _drawChar
         ___wmul
         _drawPixel
           _setAddrWindow
             _write_command
               _spiwrite
             _write_data
               _spiwrite
           _write_data
             _spiwrite
         _fillRect
           _drawFastVLine
             _setAddrWindow
               _write_command
                 _spiwrite
               _write_data
                 _spiwrite
             _spiwrite
       _strlen
     _strcpy
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _get_RPM
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _do_update_pwm
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
       ___lbtoft
         ___ftpack
   _printf
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     _isdigit
     _putch

 _chkisr (ROOT)
   _INT0_isr
     _force_nec_state0
   _TIMER1_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     12      5D       7       36.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      B      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     43      6F       1       87.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     14C      34        0.0%
DATA                 0      0     14C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Apr 28 12:34:14 2022

                      drawCircle@f 002A                        drawCircle@r 0020  
                      drawCircle@x 002C                        drawCircle@y 002E  
               __size_of_I2C_Start 0012                        _SSPSTATbits 000FC7  
               __size_of_I2C_Write 003E                       drawCircle@x0 001C  
                     drawCircle@y0 001E                                 l33 208E  
                               l54 23FC                                 l38 2330  
                               l49 23E0                       ___awdiv@sign 001C  
             __size_of_Turn_On_Fan 001C                ___wmul@multiplicand 0013  
                  ??_Update_Screen 00F2                                l111 21AA  
                              l108 211E                                l401 1832  
                              l402 1854                                l500 242A  
                              l173 2214                                l409 0E06  
                              l345 1B7C                                l361 11AE  
                              l370 1104                                l339 2276  
                              l363 1088                                l285 1F5C  
                              l295 2482                                l800 01B0  
                              l398 1856                                l670 251A  
                              l399 17C2                                l862 1D98  
                              l838 04F0                                l686 0C66  
                              l871 1DDA                                _FAN 0050  
                              l866 1DB2                                l874 22C8  
                              l867 1DB4                                l868 1DBE  
                              l869 1DC0                                l797 0140  
                ?_Wait_Half_Second 0001                                _PR2 000FCB  
                              _day 005A                  _Deactivate_Buzzer 255A  
             __size_of_I2C_ReStart 0016                                _dow 005B  
                              _nbr 00FC                                _rpm 004C  
            __size_of_Turn_Off_Fan 0016                                _rps 00FE  
                              _txt 004E                       ___awmod@sign 0024  
                              wreg 000FE8                 ??_Wait_Half_Second 0011  
               ?_Deactivate_Buzzer 0001                         _Fan_SW_Txt 00DF  
                  ??_fillRectangle 001D                       __CFG_LVP$OFF 000000  
          _TFT_GreenTab_Initialize 2278                       ___ftdiv@cntr 0035  
                     ___ftdiv@sign 003A                       __CFG_WDT$OFF 000000  
                   drawFastVLine@h 0019                               l1080 1BFE  
                             l1305 2310                               l1331 22EE  
                             l1067 1A68                               l1182 191C  
                             l1254 177A                               l1334 1AE4  
                             l1344 1D5A                               l1193 18F4  
                             l1257 1746                               l1290 1698  
                             l1436 215C                     drawFastVLine@x 0022  
                             l1269 14C0                     drawFastVLine@y 0018  
                             l6012 1076                               l6030 10FC  
                             l6022 1094                               l6040 114E  
                             l6016 1084                               l6008 106A  
                             l6104 1850                               l6202 20E2  
                             l6130 1D88                               l5402 1B3E  
                             l6026 10C4                               l6018 108C  
                             l6212 20F8                               l6220 2108  
                             l5412 1B64                               l6028 10F8  
                             l6060 212A                               l6300 13AC  
                             l6214 2100                               l6206 20EA  
                             l5430 1878                               l6134 1D90  
                             l6126 1D7E                               l5414 1B72  
                             l6046 117A                               l6038 1126  
                             l6054 11AA                               l6062 2130  
                             l6302 13B4                               l7102 0B16  
                             l6224 2114                               l5440 18DC  
                             l5432 1884                               l5600 1402  
                             l6048 11A2                               l6072 178C  
                             l6400 1A12                               l6226 211A  
                             l5442 18E8                               l5434 18A4  
                             l5426 1868                               l6146 1DAA  
                             l6138 1D9C                               l6322 0DEC  
                             l6090 1828                               l6402 1A1C  
                             l7122 0BDE                               l5460 21A2  
                             l5604 1410                               l5516 2258  
                             l5524 2008                               l5700 1AA2  
                             l6420 1A5E                               l6412 1A42  
                             l6404 1A24                               l7140 0C2A  
                             l5454 190E                               l5438 18BC  
                             l5622 1456                               l6350 0EDC  
                             l6094 1836                               l6078 17FA  
                             l5542 2308     I2C_Write_Cmd_Write_Data@Device 0015  
                             l5448 18FC                               l5552 16B8  
                             l5632 1484                               l5528 2024  
                             l5720 1D24                               l5800 01FC  
                             l6416 1A4E                               l6440 1BB0  
                             l6432 1B94                               l7152 0C74  
                             l5466 21B4                               l5554 16D2  
                             l5626 146C                               l5618 1444  
                             l6098 1840                               l5810 024A  
                             l5802 0202                               l6442 1BBA  
                             l7170 0CF2                               l7162 0CD4  
                             l7146 0C52                               l5468 21BA  
                             l5636 149A                               l5628 1472  
                             l6292 135A                               l6276 12EC  
                             l5708 1AD4                               l5724 1D4A  
                             l5716 1D0E                               l5820 0266  
                             l6444 1BC2                               l6452 1BE4  
                             l6436 1BA2                               l7156 0C8E  
                             l5478 21CC                               l5558 16E0  
                             l5670 1642                               l5646 15D2  
                             l5398 1B06                               l5718 1D1C  
                             l5814 0252                               l5806 0210  
                             l5830 02A8                               l5750 0050  
                             l7182 0D24                               l7166 0CDE  
                             l5664 162C                               l6288 133C  
                             l6376 2220                               l5824 02A0  
                             l5816 0258                               l5832 02BC  
                             l5760 0092                               l5744 002A  
                             l6456 1BF4                               l6448 1BD8  
                             l5578 1720                               l5682 1686  
                             l5674 1656                               l5738 19AA  
                             l6378 222A                               l5850 0338  
                             l5842 0312                               l5770 0100  
                             l5754 005C                               l6394 19FC  
                             l7186 0D32                               l7178 0D16  
                             l5588 1754                               l5676 1664  
                             l5668 163C                               l6492 23F0  
                             l6484 23D4                               l5852 0344  
                             l5844 031E                               l5756 0072  
                             l5748 003E                               l6388 19EA  
                             l6740 0604                               l6724 056E  
                             l5598 13E8                               l5678 166E  
                             l5870 042C                               l5862 038C  
                             l5838 02DE                               l5782 0168  
                             l5774 010A                               l6478 232A  
                             l6734 05C4                               l6718 052E  
                             l5696 1A8C                               l5880 04B8  
                             l5856 0362                               l5768 00F8  
                             l5698 1A9A                               l5858 036E  
                             l5866 03A0                               l5786 0190  
                             l5882 04D2                               l6770 0698  
                             l5868 03B2                               l5876 049A  
                             l5796 01D2                               l5878 04AE  
                             l6768 0682                               STR_1 FFD0  
                             STR_2 FF95                               STR_3 FFB4  
                             STR_4 FF01                               STR_5 FF4B  
                             STR_6 FF60                               STR_7 FF85  
                             STR_8 FEE0                               STR_9 FF35  
                             u4001 16AA                               u4021 16C8  
                             u4111 15C4                               u4130 15F0  
                             u4051 13DA                               u4071 13F8  
                             u4135 15E8                               u3800 1B34  
                             u4610 115C                               u5430 0C66  
                             u4900 1316                               u5527 2528  
                             u4680 17BA                               u4690 17F0  
                             _RBPU 007F8F                               _TRMT 007D61  
                     _DS1621_tempC 0044                       _DS1621_tempF 0046  
              ??_Deactivate_Buzzer 0011                               _date 00C4  
                             _main 0B06                               _font FCBD  
                     ___ftpack@arg 0011                               _hour 005E  
                     ___ftpack@exp 0014                   __end_of_I2C_Init 2546  
                 __end_of_I2C_Read 2120                               _time 00CD  
                             _year 006C                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             _wrap 006F                   __end_of_I2C_Stop 24D2  
                             pclat 000FFA                 __size_of_LCD_Reset 0012  
                             prodh 000FF4                               prodl 000FF3  
                  __end_of_Do_Beep 245E                               start 0018  
      __size_of_I2C_Write_Cmd_Only 001A                    __end_of_Do_Init 20D8  
                   _Increase_Speed 23C6                    ??_drawFastVLine 001C  
                     ___ftmul@cntr 002A                    __end_of_i2cNack 2550  
                     ___param_bank 000010                       ___ftmul@sign 002B  
                     ___fttol@exp1 001F                       _Turn_Off_Fan 2432  
                     ___fttol@lval 001B                        ?_TIMER1_isr 0001  
                 __end_of_INT0_isr 105A          __end_of_Deactivate_Buzzer 2562  
                  ??_do_update_pwm 003B                    drawFastVLine@hi 0020  
                  drawFastVLine@lo 0021                              ?_main 0001  
                  __end_of___awdiv 1A6A                    drawCircle@ddF_x 0026  
                            STR_10 FFA5                    drawCircle@ddF_y 0028  
                            STR_11 FF1F                              STR_20 FFED  
                            STR_12 FFC3                              STR_13 FFF9  
                            STR_21 FFF1                              STR_14 FFF3  
                            STR_22 FF74                              STR_15 FFE3  
                            STR_16 FFE8                              STR_17 FFDD  
                            STR_18 FFFC                              STR_19 FFF5  
                  __end_of___awmod 1C00                    __end_of___ftdiv 177C  
                  __end_of___lldiv 1AF6                    __end_of___ftmul 14C2  
                            _T0CON 000FD5                    ___awdiv@divisor 0019  
                            _T1CON 000FCD                    __end_of___llmod 1D6C  
                  __end_of___fttol 169A                              _T2CON 000FCA  
                            _T3CON 000FB1                              i2l221 1CC2  
                            i2l233 1058                    ___awdiv@counter 001B  
                  drawCircle@color 0022                              _RCSTA 000FAB  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                            _TMR3L 000FB2                              _SPBRG 000FAF  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TXREG 000FAD                              _TXSTA 000FAC  
                  __end_of_get_RPM 2090                              _Rcmd1 11B0  
                            _Rcmd3 14C2                              _nRBPU 007F8F  
                       _i2cHighSda 256A                         _i2cHighScl 2524  
                  __end_of_dpowers FEC0                              _color 0100  
                            _font2 FDBC                              _found 005D  
                  __end_of_isdigit 2312                              _tempC 00E3  
                            _tempF 00E7                              _month 0060  
                    ___ftpack@sign 0015                              _putch 2516  
                            main@i 0159                              main@j 015B  
                __end_of_I2C_Start 24E4                  __end_of_I2C_Write 21DA  
                   __CFG_BOREN$OFF 000000                              tablat 000FF5  
                            status 000FD8             __end_of_Increase_Speed 23E2  
                ?_DS1621_Read_Temp 0014                    write_data@data_ 0013  
               ??_DS1621_Read_Temp 0016                    __initialization 1C00  
                     __end_of_main 0D44                       __end_of_font FDBC  
                 __end_of_Rcmd2red 219C                   ??_Decrease_Speed 0044  
                           ??_main 0158                      ___fttol@sign1 001A  
                    __activetblptr 000002                  ?_DS3231_Read_Time 0001  
                __end_of_LCD_Reset 24AE          ??_TFT_GreenTab_Initialize 001D  
               ??_DS3231_Read_Time 0014                             ?_Rcmd1 0001  
                           ?_Rcmd3 0001            __size_of_init_INTERRUPT 001E  
                        I2C_Init@c 0011                          I2C_Read@n 0012  
                           _ADCON1 000FC1                DS1621_Read_Temp@Cmd 0016  
                 ___llmod@dividend 001E                             _CCPR1L 000FBE  
                           _CCPR2L 000FBB                   ___awdiv@dividend 0017  
               __size_of_i2cLowSda 000A                 __size_of_i2cLowScl 0008  
                           ?_putch 0001                   __end_of___ftpack 191E  
                 __end_of___lbtoft 22F0                          ??_Do_Beep 0011  
                           _DC_Txt 00DB                             i2l5012 1CB8  
                        ??_Do_Init 0017                             i2l4700 0F98  
                           i2l4720 1014                             i2l4712 0FBE  
                           i2l4730 1032                             i2l4706 0FB4  
                           i2l4708 0FBA                             i2l4728 102C  
                           i2l4736 1036                             i2l4682 0F66  
                           i2l4666 0F1A                             i2l4676 0F48  
                           i2l4694 0F8E                             i2l4688 0F70  
                           _OSCCON 000FD3                __size_of_TIMER1_isr 000C  
                           _SPBRGH 000FB0                             _SSPBUF 000FC9  
                  ?_Increase_Speed 0001                          ??_i2cNack 0011  
                     _Alarm_SW_Txt 00BE                   _force_nec_state0 2572  
                 __end_of_delay_ms 1F64                             _i2cAck 24E4  
                 __end_of_fillRect 2048                   __end_of_drawChar 11B0  
               __size_of_OpenUSART 0070           __size_of_Activate_Buzzer 0012  
                           ___wmul 22A2                          ??___awdiv 001B  
                 __end_of_drawtext 13CA                          ??___awmod 0023  
                        ??___ftdiv 0032                          ??___lldiv 0019  
                        ??___ftmul 0023                          ??___llmod 0026  
                        ??___fttol 0015                             _chkisr 0008  
                           _array1 0080                             _buffer 012A  
                           _nec_ok 004A                             clear_0 1C06  
                           clear_1 1C12                   ___awdiv@quotient 001D  
                           _minute 005F                             _second 0062  
          DS3231_Setup_Time@Device 0013                    ___awmod@divisor 0021  
                        ??_get_RPM 0044         __size_of_Deactivate_Buzzer 0008  
                  ___awmod@counter 0023                             _printf 001C  
                     drawtext@size 0040                             _strcpy 2216  
                           _strlen 2120              ___ftmul@f3_as_product 0027  
                       _Toggle_Fan 2312                       __pdataCOMRAM 006D  
                        ??_isdigit 0011                          ?_I2C_Init 0011  
                        ?_I2C_Read 0001                          ?_I2C_Stop 0001  
                     __mediumconst FCBC                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
 __end_of_I2C_Write_Cmd_Write_Data 2352                        ?_i2cHighSda 0001  
                      ?_i2cHighScl 0001                             putch@c 0011  
                 __end_of_spiwrite 2488                         __accesstop 0080  
          __end_of__initialization 1C76                          ?_INT0_isr 0001  
               _setup_alarm_minute 0064                 _setup_alarm_second 0065  
                    ___rparam_used 000001                         ___ftdiv@f1 002C  
                       ___ftdiv@f2 002F                         ___ftdiv@f3 0036  
                       ___lbtoft@c 001C                         ___ftmul@f1 001D  
                       ___ftmul@f2 0020                         ___fttol@f1 0011  
                    __end_of_Rcmd1 12C0                      __end_of_Rcmd3 15B4  
                   __pcstackCOMRAM 0001                       __pidataBANK0 1DDC  
                     __pidataBANK1 1FB2                      __end_of_font2 FE98  
                __end_of_i2cLowSda 255A                  __end_of_i2cLowScl 256A  
                    __end_of_putch 2524                     drawPixel@color 0019  
           __size_of_write_command 0010                         ??_I2C_Init 0015  
                       ??_I2C_Read 0011                       _alarm_minute 0056  
                     _alarm_second 0057                         ??_I2C_Stop 0011  
                          ??_Rcmd1 001D                            ??_Rcmd3 001D  
               __size_of_drawPixel 0030                  __end_of_OpenUSART 1DDC  
                          ??_putch 0011                         __pbssBANK0 00F6  
                 _setup_alarm_hour 0063                   _setup_alarm_time 009E  
                    ??_DS1621_Init 0016                          ?_Rcmd2red 0001  
               __size_of_init_UART 0014          __size_of_Wait_Half_Second 001A  
                  spiwrite@spidata 0012                         _alarm_date 0054  
                       ??_INT0_isr 0001                         _alarm_hour 0055  
                       _alarm_time 0095                            ?_i2cAck 0001  
               __CFG_CCP2MX$PORTBE 000000                      ??_Turn_On_Fan 0044  
                   I2C_Read@inByte 0013                            ?___wmul 0011  
              __size_of_i2cHighSda 0008                __size_of_i2cHighScl 000C  
                          ?_chkisr 0001             __size_of_setAddrWindow 004E  
                          _CCP1CON 000FBD   I2C_Write_Cmd_Write_Data@Data_Out 0014  
                          _CCP2CON 000FBA                       ??_TIMER1_isr 0001  
                    ??_I2C_ReStart 0011                            _ALARMEN 00FA  
                        ?___ftpack 0011                          ?___lbtoft 0019  
                       I2C_Write@n 0012                            ?_printf 0027  
                          ?_strcpy 0011                            ?_strlen 0011  
                      ?_Toggle_Fan 0001                  ??_Activate_Buzzer 0011  
                       _fillScreen 23AA              __end_of_Update_Screen 089C  
                       _drawCircle 0D44                     _init_INTERRUPT 2352  
                        ?_delay_ms 0017                          ?_fillRect 0023  
                        ?_drawChar 002E                            _SSPCON1 000FC6  
                          _SSPSTAT 000FC7                            _RPM_Txt 00D6  
            __end_of_fillRectangle 1858                            _Do_Beep 2448  
                        ?_drawtext 0039                  _DS3231_Setup_Time 1E48  
                          _Do_Init 2090           _I2C_Write_Cmd_Write_Data 2332  
       __end_of_I2C_Write_Cmd_Only 2418                         ??_Rcmd2red 0014  
           DS1621_Read_Temp@Device 0018                            _i2cNack 2546  
               __end_of_TIMER1_isr 253C                 ?_DS3231_Setup_Time 0001  
                    _write_command 2506                          _I2C_Start 24D2  
                        _I2C_Write 219C                    __size_of_i2cAck 0012  
                          __Hparam 0000                            __Lparam 0000  
              __end_of_DS1621_Init 238E                  __end_of_drawPixel 2278  
              ??_DS3231_Setup_Time 0013              __end_of_drawFastVLine 1B7E  
                          ___awdiv 19D4                            ___awmod 1B7E  
                          ___ftdiv 169A                            ___lldiv 1A6A  
                  __size_of___wmul 0028                            ___ftmul 13CA  
                          ___llmod 1CFC                            ___fttol 15B4  
                  __size_of_chkisr 1CF4                          ?_spiwrite 0001  
                          __pcinit 1C00                         ??___ftpack 0016  
                       ??___lbtoft 001C                            __ramtop 1000  
                          _get_RPM 2048                            __ptext0 0B06  
                          __ptext1 2048                            __ptext2 04F2  
                          __ptext3 1B7E                            __ptext4 19D4  
                          __ptext5 2312          __size_of_DS1621_Read_Temp 003C  
                          __ptext6 238E                            __ptext7 2432  
                          __ptext8 001C                            __ptext9 2516  
                  __size_of_printf 04D6                  __end_of_init_UART 249C  
              __end_of_Turn_On_Fan 23AA             __end_of_init_INTERRUPT 2370  
                        _T0CONbits 000FD5                    __size_of_strcpy 0032  
                  __size_of_strlen 003E                  __end_of_hexpowers FEE0  
         __end_of_force_nec_state0 257A                          _T1CONbits 000FCD  
         DS3231_Setup_Time@Address 0014                            _dpowers FE98  
            __end_of_do_update_pwm 19D4                            _isdigit 22F0  
                 ___awmod@dividend 001F                         _duty_cycle 005C  
                       ??_delay_ms 0019                __end_of_I2C_ReStart 2474  
                    drawtext@_text 003A                      drawtext@color 003C  
                       ??_fillRect 0028          __end_of_DS3231_Setup_Time 1EAE  
                 ??_Increase_Speed 0044                         ??_drawChar 0035  
                        _LCD_Reset 249C                      _setAddrWindow 1F64  
                   __pintcode_body 1C80                         delay_ms@ms 0017  
             end_of_initialization 1C76                         ??_drawtext 0041  
                   ?_write_command 0001                      __Lmediumconst FCBC  
        __size_of_DS3231_Read_Time 0064                            int_func 1C80  
          DS3231_Read_Time@Address 0014                         ?_I2C_Start 0001  
                       ?_I2C_Write 0001                         get_RPM@RPS 00ED  
              __size_of_Toggle_Fan 0020                    ___lldiv@divisor 0015  
                  ___lldiv@counter 001D                         _tempSecond 006E  
                        _RCSTAbits 000FAB                            printf@c 0157  
                          printf@f 0027                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                         ??_spiwrite 0011  
                          strlen@s 0011        I2C_Write_Cmd_Write_Data@Cmd 0013  
                        _PORTAbits 000F80                   drawtext@cursor_x 00F1  
                 drawtext@cursor_y 00F0                          _PORTBbits 000F81  
                        _PORTCbits 000F82                          _PORTDbits 000F83  
                        _PORTEbits 000F84                   I2C_Write@outByte 0011  
                  ?_init_INTERRUPT 0001                         _setup_date 00A7  
                      ?_fillScreen 0024                         _setup_hour 0067  
                       _setup_time 00B0                         _setup_year 006B  
                      ?_drawCircle 001C                         drawChar@bg 0032  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                        _TRISDbits 000F95                       ??_i2cHighSda 0011  
                     ??_i2cHighScl 0011                  __size_of_I2C_Init 000A  
                __size_of_I2C_Read 0048                  __size_of_I2C_Stop 0012  
                   ?_setAddrWindow 0014                         ?_LCD_Reset 0001  
                 drawtext@textsize 00EC                         drawPixel@x 001B  
                       drawPixel@y 0018                   _Wait_Half_Second 2418  
                      _DS1621_Init 2370                        ___ftdiv@exp 0039  
                      printf@width 0154                          _TXSTAbits 000FAC  
                __size_of_INT0_isr 0168                     __end_of_i2cAck 24F6  
                      ___ftmul@exp 0026           DS1621_Read_Temp@Data_Ret 0017  
                      _Turn_On_Fan 238E                 __end_of_i2cHighSda 2572  
               __end_of_i2cHighScl 2530                     __end_of___wmul 22CA  
                    delay_ms@count 001B                         _write_data 24F6  
                    __pidataCOMRAM 257A                     __end_of_chkisr 1CFC  
         ?_TFT_GreenTab_Initialize 0001                        _I2C_ReStart 245E  
                       drawtext@bg 003E                          _Nec_code1 0051  
                        _i2cLowSda 2550                          _i2cLowScl 2562  
                   __end_of_printf 04F2                     __end_of_strcpy 2248  
                   __end_of_strlen 215E                          _Nec_state 0052  
              start_initialization 1C00             Update_Screen@neg_tempF 00F4  
       __size_of_DS3231_Setup_Time 0066            __size_of_Decrease_Speed 001C  
                  ??_write_command 0013                          _OpenUSART 1D6C  
                  ___llmod@divisor 0022                   __CFG_OSC$INTIO67 000000  
                      ??_I2C_Start 0011                    ___llmod@counter 0026  
                      ??_I2C_Write 0011                           ??_i2cAck 0011  
                __size_of_Rcmd2red 003E                __size_of_fillScreen 001C  
              __size_of_drawCircle 01AE                    _Activate_Buzzer 24AE  
                         ??___wmul 0015                      ?_Turn_Off_Fan 0001  
                         ??_chkisr 0003                        __pdataBANK0 0080  
                      __pdataBANK1 0100                    setAddrWindow@x0 0017  
                  setAddrWindow@x1 0015                    setAddrWindow@y0 0014  
                  setAddrWindow@y1 0016                           ??_printf 0035  
                 _DS1621_Read_Temp 21DA                           ??_strcpy 0015  
                         ??_strlen 0013                       ??_Toggle_Fan 0044  
                       ?_i2cLowSda 0001                         ?_i2cLowScl 0001  
                __size_of___ftpack 00C6                  __size_of___lbtoft 0026  
                      __pbssCOMRAM 0044         ??_I2C_Write_Cmd_Write_Data 0015  
                  ??_setAddrWindow 0017                      __pcstackBANK0 00EB  
                    __pcstackBANK1 014B                        ??_LCD_Reset 001D  
                     _isdigit$2552 0012                  __size_of_delay_ms 0052  
                         ?_Do_Beep 0001                           ?_Do_Init 0001  
                __size_of_fillRect 004A                  __size_of_drawChar 0156  
                       ?_OpenUSART 0011                   _DS3231_Read_Time 1EAE  
                         ?_i2cNack 0001                  __size_of_drawtext 010A  
               __end_of_Toggle_Fan 2332                        I2C_Read@ack 0011  
                        _bit_count 0058                          __pintcode 0008  
  __end_of_TFT_GreenTab_Initialize 22A2                     ??_Turn_Off_Fan 0039  
                    __pmediumconst FCBC                           ?___awdiv 0017  
                         ?___awmod 001F                           ?___ftdiv 002C  
                         ?___lldiv 0011                           ?___ftmul 001D  
                         ?___llmod 001E                           ?___fttol 0011  
                        __tft_type 0053                 _I2C_Write_Cmd_Only 23FE  
               drawFastVLine@color 001A                        ?_write_data 0001  
                        _drawPixel 2248                           ?_get_RPM 00EB  
                __size_of_spiwrite 0014                ?_I2C_Write_Cmd_Only 0013  
                ?_force_nec_state0 0001                           ?_isdigit 0001  
                         _I2C_Init 253C                           _I2C_Read 20D8  
                         _I2C_Stop 24C0                  _Initialize_Screen 089C  
                   __size_of_Rcmd1 0110                     __size_of_Rcmd3 00F2  
                        _init_UART 2488                 ??_force_nec_state0 0001  
         I2C_Write_Cmd_Only@Device 0014                          _hexpowers FEC0  
               ?_Initialize_Screen 0001                     __size_of_putch 000E  
          __end_of_Activate_Buzzer 24C0                     ___wmul@product 0015  
              ??_Initialize_Screen 0043                           _INT0_isr 0EF2  
             ??_I2C_Write_Cmd_Only 0014                           _PIE1bits 000F9D  
           __size_of_Update_Screen 03AA             DS3231_Read_Time@Device 0015  
                         _PIR1bits 000F9E                   ??_init_INTERRUPT 0011  
                        _setup_day 0066                  DS1621_Init@Device 0016  
                        fillRect@h 0025                          fillRect@i 002C  
                        fillRect@w 0024                          fillRect@x 002B  
                        fillRect@y 0023                          drawChar@c 002F  
                        drawChar@i 0038                          drawChar@j 0037  
                        drawChar@x 0036                          drawChar@y 002E  
                       ?_drawPixel 0018             __size_of_fillRectangle 00DC  
         __end_of_Wait_Half_Second 2432                  ___wmul@multiplier 0011  
        __end_of_Initialize_Screen 0B06                        ??_i2cLowSda 0011  
                      ??_i2cLowScl 0011                       ??_fillScreen 0026  
                     ??_drawCircle 0024                         printf@flag 0156  
                       printf@prec 014C                         ?_init_UART 0001  
                   _Decrease_Speed 23E2                        _INTCON2bits 000FF1  
                        copy_data0 1C2C                          copy_data1 1C4C  
                        drawtext@i 00EE             __size_of_drawFastVLine 0088  
                        drawtext@x 00EB                          drawtext@y 0039  
                         _Nec_code 00F6                  write_command@cmd_ 0013  
                      ??_OpenUSART 0013                   __size_of_Do_Beep 0016  
                     ?_DS1621_Init 0001                           _Rcmd2red 215E  
                 __size_of_Do_Init 0048                __size_of_write_data 0010  
                  OpenUSART@config 0013                       _Time_Elapsed 0048  
                 __size_of_i2cNack 000A                      _RTC_ALARM_Txt 00C2  
                         __Hrparam 0000             __size_of_do_update_pwm 00B6  
               __end_of_fillScreen 23C6                           __Lrparam 0000  
               __end_of_drawCircle 0EF2                       ?_Turn_On_Fan 0001  
                 __size_of___awdiv 0096                   __size_of___awmod 0082  
                 __size_of___ftdiv 00E2                   __size_of___lldiv 008C  
                 __size_of___ftmul 00F8                   __size_of___llmod 0070  
                 __size_of___fttol 00E6                           ___ftpack 1858  
                         ___lbtoft 22CA                       ?_I2C_ReStart 0001  
                 __size_of_get_RPM 0048                      _Update_Screen 04F2  
                   _setup_fan_temp 006D                     _setup_fan_text 00B9  
                 __size_of_isdigit 0022                           _delay_ms 1F12  
           __end_of_Decrease_Speed 23FE                           __ptext10 22F0  
                         __ptext11 1CFC                           __ptext20 1FFE  
                         __ptext12 1A6A                           __ptext21 1AF6  
                         __ptext13 089C                           __ptext30 2506  
                         __ptext22 0D44                           __ptext14 2216  
                         __ptext31 2474                           __ptext23 2248  
                         __ptext15 23AA                           __ptext40 253C  
                         __ptext32 249C                           __ptext24 1F64  
                         __ptext16 177C                           __ptext41 2370  
                         __ptext33 1F12                           __ptext25 2278  
                         __ptext17 12C0                           __ptext50 1858  
                         __ptext42 2332                           __ptext34 22A2  
                         __ptext26 14C2                           __ptext18 2120  
                         __ptext51 2448                           __ptext43 23FE  
                         __ptext35 23C6                           __ptext27 215E  
                         __ptext19 105A                           __ptext60 24D2  
                         __ptext52 2418                           __ptext44 23E2  
                         __ptext36 2090                           __ptext28 11B0  
                         __ptext61 20D8                           __ptext53 255A  
                         __ptext45 191E                           __ptext37 2488  
                         __ptext29 24F6                           __ptext70 2530  
                         __ptext62 2546                           __ptext54 24AE  
                         __ptext46 22CA                           __ptext38 1D6C  
                         __ptext71 0EF2                           __ptext63 24E4  
                         __ptext55 1E48                           __ptext47 15B4  
                         __ptext39 2352                           __ptext72 2572  
                         __ptext64 245E                           __ptext56 1EAE  
                         __ptext48 13CA                           __ptext65 2550  
                         __ptext57 21DA                           __ptext49 169A  
                         __ptext66 2562                           __ptext58 219C  
                         __ptext67 256A                           __ptext59 24C0  
                         __ptext68 2524                           _fillRect 1FFE  
                         _drawChar 105A               __end_of_Turn_Off_Fan 2448  
 __size_of_TFT_GreenTab_Initialize 002A                           _colstart 0059  
                         _drawtext 12C0                         strcpy@from 0013  
                    _fillRectangle 177C           __end_of_DS1621_Read_Temp 2216  
                 ?_Activate_Buzzer 0001                      __size_of_main 023E  
          __size_of_Increase_Speed 001C                    fillRectangle@hi 0021  
                  fillRectangle@lo 0022                      _drawFastVLine 1AF6  
                        printf@idx 014B                           _spiwrite 2474  
                        printf@val 0150                        ??_drawPixel 001B  
                         _rowstart 0061           __end_of_DS3231_Read_Time 1F12  
       __size_of_Initialize_Screen 026A                     ?_Update_Screen 0001  
                       _INTCONbits 000FF2                      _do_update_pwm 191E  
                   OpenUSART@spbrg 0011                        ??_init_UART 0014  
                  ?_Decrease_Speed 0001                           isdigit@c 0013  
                        spiwrite@x 0011                           intlevel2 0000  
                   ?_fillRectangle 0018              __end_of_write_command 2516  
                 ___lldiv@dividend 0011                    fillScreen@color 0024  
          do_update_pwm@duty_cycle 0041                     fillRectangle@h 001A  
                   fillRectangle@w 0019                     fillRectangle@x 0023  
                   fillRectangle@y 0018                     ?_drawFastVLine 0018  
                         printf@ap 014E                       ??_write_data 0013  
                       _TIMER1_isr 2530                      fillRect@color 0026  
                   ?_do_update_pwm 0001                   ___lldiv@quotient 0019  
                         strcpy@cp 0015                           strlen@cp 0015  
                         strcpy@to 0011              I2C_Write_Cmd_Only@Cmd 0013  
                     _setup_minute 0068                       _setup_second 006A  
            __end_of_setAddrWindow 1FB2                 fillRectangle@color 001B  
                do_update_pwm@dc_I 0042                  do_update_pwm@dc_f 003E  
                    drawChar@color 0030                        _setup_month 0069  
               __end_of_write_data 2506          __size_of_force_nec_state0 0008  
                     drawChar@line 0035                       drawChar@size 0034  
__size_of_I2C_Write_Cmd_Write_Data 0020               __size_of_DS1621_Init 001E  
        ?_I2C_Write_Cmd_Write_Data 0013  
