

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Feb 02 23:36:06 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	smallconst
    39  001000                     __psmallconst:
    40                           	opt stack 0
    41  001000  00                 	db	0
    42  001001                     _dpowers:
    43                           	opt stack 0
    44  001001  0001               	dw	1
    45  001003  0000               	dw	0
    46  001005  000A               	dw	10
    47  001007  0000               	dw	0
    48  001009  0064               	dw	100
    49  00100B  0000               	dw	0
    50  00100D  03E8               	dw	1000
    51  00100F  0000               	dw	0
    52  001011  2710               	dw	10000
    53  001013  0000               	dw	0
    54  001015  86A0               	dw	34464
    55  001017  0001               	dw	1
    56  001019  4240               	dw	16960
    57  00101B  000F               	dw	15
    58  00101D  9680               	dw	38528
    59  00101F  0098               	dw	152
    60  001021  E100               	dw	57600
    61  001023  05F5               	dw	1525
    62  001025  CA00               	dw	51712
    63  001027  3B9A               	dw	15258
    64  001029                     __end_of_dpowers:
    65                           	opt stack 0
    66  001029                     __npowers_:
    67                           	opt stack 0
    68  001029  00                 	db	0
    69  00102A  80                 	db	128
    70  00102B  3F                 	db	63
    71  00102C  CD                 	db	205
    72  00102D  CC                 	db	204
    73  00102E  3D                 	db	61
    74  00102F  D7                 	db	215
    75  001030  23                 	db	35
    76  001031  3C                 	db	60
    77  001032  12                 	db	18
    78  001033  83                 	db	131
    79  001034  3A                 	db	58
    80  001035  B7                 	db	183
    81  001036  D1                 	db	209
    82  001037  38                 	db	56
    83  001038  C6                 	db	198
    84  001039  27                 	db	39
    85  00103A  37                 	db	55
    86  00103B  38                 	db	56
    87  00103C  86                 	db	134
    88  00103D  35                 	db	53
    89  00103E  C0                 	db	192
    90  00103F  D6                 	db	214
    91  001040  33                 	db	51
    92  001041  CC                 	db	204
    93  001042  2B                 	db	43
    94  001043  32                 	db	50
    95  001044  70                 	db	112
    96  001045  89                 	db	137
    97  001046  30                 	db	48
    98  001047  E7                 	db	231
    99  001048  DB                 	db	219
   100  001049  2E                 	db	46
   101  00104A  E5                 	db	229
   102  00104B  3C                 	db	60
   103  00104C  1E                 	db	30
   104  00104D  42                 	db	66
   105  00104E  A2                 	db	162
   106  00104F  0D                 	db	13
   107  001050                     __end_of__npowers_:
   108                           	opt stack 0
   109  001050                     __powers_:
   110                           	opt stack 0
   111  001050  00                 	db	0
   112  001051  80                 	db	128
   113  001052  3F                 	db	63
   114  001053  00                 	db	0
   115  001054  20                 	db	32
   116  001055  41                 	db	65
   117  001056  00                 	db	0
   118  001057  C8                 	db	200
   119  001058  42                 	db	66
   120  001059  00                 	db	0
   121  00105A  7A                 	db	122
   122  00105B  44                 	db	68
   123  00105C  40                 	db	64
   124  00105D  1C                 	db	28
   125  00105E  46                 	db	70
   126  00105F  50                 	db	80
   127  001060  C3                 	db	195
   128  001061  47                 	db	71
   129  001062  24                 	db	36
   130  001063  74                 	db	116
   131  001064  49                 	db	73
   132  001065  97                 	db	151
   133  001066  18                 	db	24
   134  001067  4B                 	db	75
   135  001068  BC                 	db	188
   136  001069  BE                 	db	190
   137  00106A  4C                 	db	76
   138  00106B  6B                 	db	107
   139  00106C  6E                 	db	110
   140  00106D  4E                 	db	78
   141  00106E  03                 	db	3
   142  00106F  15                 	db	21
   143  001070  50                 	db	80
   144  001071  79                 	db	121
   145  001072  AD                 	db	173
   146  001073  60                 	db	96
   147  001074  F3                 	db	243
   148  001075  49                 	db	73
   149  001076  71                 	db	113
   150  001077                     __end_of__powers_:
   151                           	opt stack 0
   152  0000                     _ADCON0	set	4034
   153  0000                     _ADCON0bits	set	4034
   154  0000                     _ADCON1	set	4033
   155  0000                     _ADCON2	set	4032
   156  0000                     _ADRESH	set	4036
   157  0000                     _ADRESL	set	4035
   158  0000                     _OSCCON	set	4051
   159  0000                     _PIE1bits	set	3997
   160  0000                     _PIR1bits	set	3998
   161  0000                     _RCSTA	set	4011
   162  0000                     _RCSTAbits	set	4011
   163  0000                     _SPBRG	set	4015
   164  0000                     _SPBRGH	set	4016
   165  0000                     _TRISCbits	set	3988
   166  0000                     _TXREG	set	4013
   167  0000                     _TXSTA	set	4012
   168  0000                     _TXSTAbits	set	4012
   169  0000                     _TRMT	set	32097
   170  001077                     STR_5:
   171  001077  52                 	db	82	;'R'
   172  001078  65                 	db	101	;'e'
   173  001079  66                 	db	102	;'f'
   174  00107A  65                 	db	101	;'e'
   175  00107B  72                 	db	114	;'r'
   176  00107C  65                 	db	101	;'e'
   177  00107D  6E                 	db	110	;'n'
   178  00107E  63                 	db	99	;'c'
   179  00107F  65                 	db	101	;'e'
   180  001080  20                 	db	32
   181  001081  76                 	db	118	;'v'
   182  001082  6F                 	db	111	;'o'
   183  001083  6C                 	db	108	;'l'
   184  001084  74                 	db	116	;'t'
   185  001085  61                 	db	97	;'a'
   186  001086  67                 	db	103	;'g'
   187  001087  65                 	db	101	;'e'
   188  001088  20                 	db	32
   189  001089  61                 	db	97	;'a'
   190  00108A  74                 	db	116	;'t'
   191  00108B  20                 	db	32
   192  00108C  41                 	db	65	;'A'
   193  00108D  4E                 	db	78	;'N'
   194  00108E  33                 	db	51	;'3'
   195  00108F  20                 	db	32
   196  001090  69                 	db	105	;'i'
   197  001091  73                 	db	115	;'s'
   198  001092  20                 	db	32
   199  001093  25                 	db	37
   200  001094  66                 	db	102	;'f'
   201  001095  0D                 	db	13
   202  001096  0A                 	db	10
   203  001097  0A                 	db	10
   204  001098  00                 	db	0
   205  001099                     STR_4:
   206  001099  56                 	db	86	;'V'
   207  00109A  6F                 	db	111	;'o'
   208  00109B  6C                 	db	108	;'l'
   209  00109C  74                 	db	116	;'t'
   210  00109D  20                 	db	32
   211  00109E  61                 	db	97	;'a'
   212  00109F  74                 	db	116	;'t'
   213  0010A0  20                 	db	32
   214  0010A1  41                 	db	65	;'A'
   215  0010A2  4E                 	db	78	;'N'
   216  0010A3  34                 	db	52	;'4'
   217  0010A4  20                 	db	32
   218  0010A5  69                 	db	105	;'i'
   219  0010A6  73                 	db	115	;'s'
   220  0010A7  20                 	db	32
   221  0010A8  25                 	db	37
   222  0010A9  66                 	db	102	;'f'
   223  0010AA  0D                 	db	13
   224  0010AB  0A                 	db	10
   225  0010AC  0A                 	db	10
   226  0010AD  00                 	db	0
   227  0010AE                     STR_1:
   228  0010AE  56                 	db	86	;'V'
   229  0010AF  6F                 	db	111	;'o'
   230  0010B0  6C                 	db	108	;'l'
   231  0010B1  74                 	db	116	;'t'
   232  0010B2  20                 	db	32
   233  0010B3  61                 	db	97	;'a'
   234  0010B4  74                 	db	116	;'t'
   235  0010B5  20                 	db	32
   236  0010B6  41                 	db	65	;'A'
   237  0010B7  4E                 	db	78	;'N'
   238  0010B8  30                 	db	48	;'0'
   239  0010B9  20                 	db	32
   240  0010BA  69                 	db	105	;'i'
   241  0010BB  73                 	db	115	;'s'
   242  0010BC  20                 	db	32
   243  0010BD  25                 	db	37
   244  0010BE  66                 	db	102	;'f'
   245  0010BF  0D                 	db	13
   246  0010C0  0A                 	db	10
   247  0010C1  00                 	db	0
   248  0010C2                     STR_2:
   249  0010C2  56                 	db	86	;'V'
   250  0010C3  6F                 	db	111	;'o'
   251  0010C4  6C                 	db	108	;'l'
   252  0010C5  74                 	db	116	;'t'
   253  0010C6  20                 	db	32
   254  0010C7  61                 	db	97	;'a'
   255  0010C8  74                 	db	116	;'t'
   256  0010C9  20                 	db	32
   257  0010CA  41                 	db	65	;'A'
   258  0010CB  4E                 	db	78	;'N'
   259  0010CC  31                 	db	49	;'1'
   260  0010CD  20                 	db	32
   261  0010CE  69                 	db	105	;'i'
   262  0010CF  73                 	db	115	;'s'
   263  0010D0  20                 	db	32
   264  0010D1  25                 	db	37
   265  0010D2  66                 	db	102	;'f'
   266  0010D3  0D                 	db	13
   267  0010D4  0A                 	db	10
   268  0010D5  00                 	db	0
   269  0010D6                     STR_3:
   270  0010D6  56                 	db	86	;'V'
   271  0010D7  6F                 	db	111	;'o'
   272  0010D8  6C                 	db	108	;'l'
   273  0010D9  74                 	db	116	;'t'
   274  0010DA  20                 	db	32
   275  0010DB  61                 	db	97	;'a'
   276  0010DC  74                 	db	116	;'t'
   277  0010DD  20                 	db	32
   278  0010DE  41                 	db	65	;'A'
   279  0010DF  4E                 	db	78	;'N'
   280  0010E0  32                 	db	50	;'2'
   281  0010E1  20                 	db	32
   282  0010E2  69                 	db	105	;'i'
   283  0010E3  73                 	db	115	;'s'
   284  0010E4  20                 	db	32
   285  0010E5  25                 	db	37
   286  0010E6  66                 	db	102	;'f'
   287  0010E7  0D                 	db	13
   288  0010E8  0A                 	db	10
   289  0010E9  00                 	db	0
   290                           
   291                           ; #config settings
   292  0010EA  00                 	db	0	; dummy byte at the end
   293  0000                     
   294                           	psect	cinit
   295  002A90                     __pcinit:
   296                           	opt stack 0
   297  002A90                     start_initialization:
   298                           	opt stack 0
   299  002A90                     __initialization:
   300                           	opt stack 0
   301  002A90                     end_of_initialization:
   302                           	opt stack 0
   303  002A90                     __end_of__initialization:
   304                           	opt stack 0
   305  002A90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   306  002A92  6EF8               	movwf	tblptru,c
   307  002A94  0100               	movlb	0
   308  002A96  EF79  F011         	goto	_main	;jump to C main() function
   309                           tblptru	equ	0xFF8
   310                           
   311                           	psect	cstackCOMRAM
   312  000001                     __pcstackCOMRAM:
   313                           	opt stack 0
   314  000001                     ?_Get_Full_ADC:
   315                           	opt stack 0
   316  000001                     ?___awmod:
   317                           	opt stack 0
   318  000001                     ?___ftpack:
   319                           	opt stack 0
   320  000001                     ?___ftneg:
   321                           	opt stack 0
   322  000001                     ?__tdiv_to_l_:
   323                           	opt stack 0
   324  000001                     ?__div_to_l_:
   325                           	opt stack 0
   326  000001                     ?___lldiv:
   327                           	opt stack 0
   328  000001                     ?___llmod:
   329                           	opt stack 0
   330  000001                     putch@c:
   331                           	opt stack 0
   332  000001                     OpenUSART@spbrg:
   333                           	opt stack 0
   334  000001                     ___awmod@dividend:
   335                           	opt stack 0
   336  000001                     __div_to_l_@f1:
   337                           	opt stack 0
   338  000001                     ___ftpack@arg:
   339                           	opt stack 0
   340  000001                     __tdiv_to_l_@f1:
   341                           	opt stack 0
   342  000001                     ___ftge@ff1:
   343                           	opt stack 0
   344  000001                     ___ftneg@f1:
   345                           	opt stack 0
   346  000001                     ___lldiv@dividend:
   347                           	opt stack 0
   348  000001                     ___llmod@dividend:
   349                           	opt stack 0
   350                           
   351                           ; 4 bytes @ 0x0
   352  000001                     	ds	2
   353  000003                     ??_Get_Full_ADC:
   354  000003                     OpenUSART@config:
   355                           	opt stack 0
   356  000003                     ___awmod@divisor:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x2
   360  000003                     	ds	1
   361  000004                     ___ftpack@exp:
   362                           	opt stack 0
   363  000004                     __div_to_l_@f2:
   364                           	opt stack 0
   365  000004                     __tdiv_to_l_@f2:
   366                           	opt stack 0
   367  000004                     ___ftge@ff2:
   368                           	opt stack 0
   369                           
   370                           ; 3 bytes @ 0x3
   371  000004                     	ds	1
   372  000005                     ___awmod@counter:
   373                           	opt stack 0
   374  000005                     ___ftpack@sign:
   375                           	opt stack 0
   376  000005                     Get_Full_ADC@result:
   377                           	opt stack 0
   378  000005                     ___lldiv@divisor:
   379                           	opt stack 0
   380  000005                     ___llmod@divisor:
   381                           	opt stack 0
   382                           
   383                           ; 4 bytes @ 0x4
   384  000005                     	ds	1
   385  000006                     ??___ftpack:
   386  000006                     ___awmod@sign:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x5
   390  000006                     	ds	1
   391  000007                     ??__tdiv_to_l_:
   392  000007                     ??___ftge:
   393  000007                     ?___awdiv:
   394                           	opt stack 0
   395  000007                     ___awdiv@dividend:
   396                           	opt stack 0
   397  000007                     __div_to_l_@quot:
   398                           	opt stack 0
   399                           
   400                           ; 4 bytes @ 0x6
   401  000007                     	ds	2
   402  000009                     ?___awtoft:
   403                           	opt stack 0
   404  000009                     ?___lltoft:
   405                           	opt stack 0
   406  000009                     ___llmod@counter:
   407                           	opt stack 0
   408  000009                     ___awdiv@divisor:
   409                           	opt stack 0
   410  000009                     ___awtoft@c:
   411                           	opt stack 0
   412  000009                     ___lldiv@quotient:
   413                           	opt stack 0
   414  000009                     ___lltoft@c:
   415                           	opt stack 0
   416                           
   417                           ; 4 bytes @ 0x8
   418  000009                     	ds	1
   419  00000A                     __tdiv_to_l_@quot:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x9
   423  00000A                     	ds	1
   424  00000B                     ___awdiv@counter:
   425                           	opt stack 0
   426  00000B                     __div_to_l_@cntr:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0xA
   430  00000B                     	ds	1
   431  00000C                     ___awdiv@sign:
   432                           	opt stack 0
   433  00000C                     ___awtoft@sign:
   434                           	opt stack 0
   435  00000C                     __div_to_l_@exp1:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0xB
   439  00000C                     	ds	1
   440  00000D                     ??___lltoft:
   441  00000D                     ?___ftdiv:
   442                           	opt stack 0
   443  00000D                     ___lldiv@counter:
   444                           	opt stack 0
   445  00000D                     ___awdiv@quotient:
   446                           	opt stack 0
   447  00000D                     ___ftdiv@f1:
   448                           	opt stack 0
   449                           
   450                           ; 3 bytes @ 0xC
   451  00000D                     	ds	1
   452  00000E                     __tdiv_to_l_@cntr:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0xD
   456  00000E                     	ds	1
   457  00000F                     ?___wmul:
   458                           	opt stack 0
   459  00000F                     __tdiv_to_l_@exp1:
   460                           	opt stack 0
   461  00000F                     ___wmul@multiplier:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0xE
   465  00000F                     	ds	1
   466  000010                     ___ftdiv@f2:
   467                           	opt stack 0
   468                           
   469                           ; 3 bytes @ 0xF
   470  000010                     	ds	1
   471  000011                     ___lltoft@exp:
   472                           	opt stack 0
   473  000011                     ___wmul@multiplicand:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x10
   477  000011                     	ds	2
   478  000013                     ??___ftdiv:
   479  000013                     ___wmul@product:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x12
   483  000013                     	ds	3
   484  000016                     ___ftdiv@cntr:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x15
   488  000016                     	ds	1
   489  000017                     ___ftdiv@f3:
   490                           	opt stack 0
   491                           
   492                           ; 3 bytes @ 0x16
   493  000017                     	ds	3
   494  00001A                     ___ftdiv@exp:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x19
   498  00001A                     	ds	1
   499  00001B                     ___ftdiv@sign:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x1A
   503  00001B                     	ds	1
   504  00001C                     ?___ftmul:
   505                           	opt stack 0
   506  00001C                     ___ftmul@f1:
   507                           	opt stack 0
   508                           
   509                           ; 3 bytes @ 0x1B
   510  00001C                     	ds	3
   511  00001F                     ___ftmul@f2:
   512                           	opt stack 0
   513                           
   514                           ; 3 bytes @ 0x1E
   515  00001F                     	ds	3
   516  000022                     ??___ftmul:
   517                           
   518                           ; 0 bytes @ 0x21
   519  000022                     	ds	3
   520  000025                     ___ftmul@exp:
   521                           	opt stack 0
   522                           
   523                           ; 1 bytes @ 0x24
   524  000025                     	ds	1
   525  000026                     ___ftmul@f3_as_product:
   526                           	opt stack 0
   527                           
   528                           ; 3 bytes @ 0x25
   529  000026                     	ds	3
   530  000029                     ___ftmul@cntr:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x28
   534  000029                     	ds	1
   535  00002A                     ___ftmul@sign:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x29
   539  00002A                     	ds	1
   540  00002B                     ?_Read_Ch_Volt:
   541                           	opt stack 0
   542  00002B                     ?_fround:
   543                           	opt stack 0
   544  00002B                     ?_scale:
   545                           	opt stack 0
   546                           
   547                           ; 3 bytes @ 0x2A
   548  00002B                     	ds	3
   549  00002E                     Read_Ch_Volt@Volt:
   550                           	opt stack 0
   551  00002E                     _fround$1007:
   552                           	opt stack 0
   553  00002E                     _scale$1008:
   554                           	opt stack 0
   555                           
   556                           ; 3 bytes @ 0x2D
   557  00002E                     	ds	3
   558  000031                     scale@scl:
   559                           	opt stack 0
   560  000031                     Read_Ch_Volt@ADC_Result:
   561                           	opt stack 0
   562  000031                     _fround$1006:
   563                           	opt stack 0
   564                           
   565                           ; 3 bytes @ 0x30
   566  000031                     	ds	1
   567  000032                     ?___fttol:
   568                           	opt stack 0
   569  000032                     ___fttol@f1:
   570                           	opt stack 0
   571                           
   572                           ; 3 bytes @ 0x31
   573  000032                     	ds	1
   574  000033                     Read_Ch_Volt@ch_num:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x32
   578  000033                     	ds	1
   579  000034                     fround@prec:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x33
   583  000034                     	ds	1
   584  000035                     ?___ftadd:
   585                           	opt stack 0
   586  000035                     ___ftadd@f1:
   587                           	opt stack 0
   588                           
   589                           ; 3 bytes @ 0x34
   590  000035                     	ds	1
   591  000036                     ??___fttol:
   592                           
   593                           ; 0 bytes @ 0x35
   594  000036                     	ds	2
   595  000038                     ___ftadd@f2:
   596                           	opt stack 0
   597                           
   598                           ; 3 bytes @ 0x37
   599  000038                     	ds	3
   600  00003B                     ??___ftadd:
   601  00003B                     ___fttol@sign1:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x3A
   605  00003B                     	ds	1
   606  00003C                     ___fttol@lval:
   607                           	opt stack 0
   608                           
   609                           ; 4 bytes @ 0x3B
   610  00003C                     	ds	2
   611  00003E                     ___ftadd@sign:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x3D
   615  00003E                     	ds	1
   616  00003F                     ___ftadd@exp2:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x3E
   620  00003F                     	ds	1
   621  000040                     ___ftadd@exp1:
   622                           	opt stack 0
   623  000040                     ___fttol@exp1:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x3F
   627  000040                     	ds	1
   628  000041                     ?___ftsub:
   629                           	opt stack 0
   630  000041                     ___ftsub@f1:
   631                           	opt stack 0
   632                           
   633                           ; 3 bytes @ 0x40
   634  000041                     	ds	3
   635  000044                     ___ftsub@f2:
   636                           	opt stack 0
   637                           
   638                           ; 3 bytes @ 0x43
   639  000044                     	ds	3
   640  000047                     ?_printf:
   641                           	opt stack 0
   642  000047                     printf@f:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x46
   646  000047                     	ds	5
   647  00004C                     ??_printf:
   648                           
   649                           ; 0 bytes @ 0x4B
   650  00004C                     	ds	6
   651  000052                     _printf$1009:
   652                           	opt stack 0
   653                           
   654                           ; 3 bytes @ 0x51
   655  000052                     	ds	3
   656  000055                     printf@ap:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x54
   660  000055                     	ds	2
   661  000057                     printf@flag:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x56
   665  000057                     	ds	2
   666  000059                     printf@prec:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x58
   670  000059                     	ds	2
   671  00005B                     printf@val:
   672                           	opt stack 0
   673                           
   674                           ; 4 bytes @ 0x5A
   675  00005B                     	ds	4
   676  00005F                     printf@exp:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0x5E
   680  00005F                     	ds	2
   681  000061                     printf@tmpval:
   682                           	opt stack 0
   683                           
   684                           ; 4 bytes @ 0x60
   685  000061                     	ds	4
   686  000065                     printf@fval:
   687                           	opt stack 0
   688                           
   689                           ; 3 bytes @ 0x64
   690  000065                     	ds	3
   691  000068                     printf@c:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x67
   695  000068                     	ds	1
   696  000069                     main@Volt:
   697                           	opt stack 0
   698                           
   699                           ; 3 bytes @ 0x68
   700  000069                     	ds	3
   701                           tblptru	equ	0xFF8
   702                           
   703 ;;
   704 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   705 ;;
   706 ;; *************** function _main *****************
   707 ;; Defined at:
   708 ;;		line 50 in file "lab1p3.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  Volt            3  104[COMRAM] float 
   713 ;; Return value:  Size  Location     Type
   714 ;;		None               void
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;Total ram usage:        3 bytes
   727 ;; Hardware stack levels required when called:    4
   728 ;; This function calls:
   729 ;;		_Init_ADC
   730 ;;		_Read_Ch_Volt
   731 ;;		_init_UART
   732 ;;		_printf
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text0
   739  0022F2                     __ptext0:
   740                           	opt stack 0
   741  0022F2                     _main:
   742                           	opt stack 27
   743                           
   744                           ;lab1p3.c: 52: float Volt;
   745                           ;lab1p3.c: 53: init_UART();
   746                           
   747                           ;incstack = 0
   748  0022F2  EC2F  F015         	call	_init_UART	;wreg free
   749                           
   750                           ;lab1p3.c: 54: Init_ADC();
   751  0022F6  EC41  F015         	call	_Init_ADC	;wreg free
   752  0022FA  D000               	goto	l2491
   753  0022FC                     l2491:
   754                           
   755                           ;lab1p3.c: 56: {
   756                           ;lab1p3.c: 57: Volt = Read_Ch_Volt( 0);
   757  0022FC  0E00               	movlw	0
   758  0022FE  ECDB  F013         	call	_Read_Ch_Volt
   759  002302  C02B  F069         	movff	?_Read_Ch_Volt,main@Volt
   760  002306  C02C  F06A         	movff	?_Read_Ch_Volt+1,main@Volt+1
   761  00230A  C02D  F06B         	movff	?_Read_Ch_Volt+2,main@Volt+2
   762                           
   763                           ;lab1p3.c: 58: printf ("Volt at AN0 is %f\r\n", Volt);
   764  00230E  0EAE               	movlw	low STR_1
   765  002310  6E47               	movwf	printf@f,c
   766  002312  0E10               	movlw	high STR_1
   767  002314  6E48               	movwf	printf@f+1,c
   768  002316  C069  F049         	movff	main@Volt,?_printf+2
   769  00231A  C06A  F04A         	movff	main@Volt+1,?_printf+3
   770  00231E  C06B  F04B         	movff	main@Volt+2,?_printf+4
   771  002322  EC76  F008         	call	_printf	;wreg free
   772                           
   773                           ;lab1p3.c: 59: Volt = Read_Ch_Volt( 1);
   774  002326  0E01               	movlw	1
   775  002328  ECDB  F013         	call	_Read_Ch_Volt
   776  00232C  C02B  F069         	movff	?_Read_Ch_Volt,main@Volt
   777  002330  C02C  F06A         	movff	?_Read_Ch_Volt+1,main@Volt+1
   778  002334  C02D  F06B         	movff	?_Read_Ch_Volt+2,main@Volt+2
   779                           
   780                           ;lab1p3.c: 60: printf ("Volt at AN1 is %f\r\n", Volt);
   781  002338  0EC2               	movlw	low STR_2
   782  00233A  6E47               	movwf	printf@f,c
   783  00233C  0E10               	movlw	high STR_2
   784  00233E  6E48               	movwf	printf@f+1,c
   785  002340  C069  F049         	movff	main@Volt,?_printf+2
   786  002344  C06A  F04A         	movff	main@Volt+1,?_printf+3
   787  002348  C06B  F04B         	movff	main@Volt+2,?_printf+4
   788  00234C  EC76  F008         	call	_printf	;wreg free
   789                           
   790                           ;lab1p3.c: 61: Volt = Read_Ch_Volt( 2);
   791  002350  0E02               	movlw	2
   792  002352  ECDB  F013         	call	_Read_Ch_Volt
   793  002356  C02B  F069         	movff	?_Read_Ch_Volt,main@Volt
   794  00235A  C02C  F06A         	movff	?_Read_Ch_Volt+1,main@Volt+1
   795  00235E  C02D  F06B         	movff	?_Read_Ch_Volt+2,main@Volt+2
   796                           
   797                           ;lab1p3.c: 62: printf ("Volt at AN2 is %f\r\n", Volt);
   798  002362  0ED6               	movlw	low STR_3
   799  002364  6E47               	movwf	printf@f,c
   800  002366  0E10               	movlw	high STR_3
   801  002368  6E48               	movwf	printf@f+1,c
   802  00236A  C069  F049         	movff	main@Volt,?_printf+2
   803  00236E  C06A  F04A         	movff	main@Volt+1,?_printf+3
   804  002372  C06B  F04B         	movff	main@Volt+2,?_printf+4
   805  002376  EC76  F008         	call	_printf	;wreg free
   806                           
   807                           ;lab1p3.c: 63: Volt = Read_Ch_Volt( 4);
   808  00237A  0E04               	movlw	4
   809  00237C  ECDB  F013         	call	_Read_Ch_Volt
   810  002380  C02B  F069         	movff	?_Read_Ch_Volt,main@Volt
   811  002384  C02C  F06A         	movff	?_Read_Ch_Volt+1,main@Volt+1
   812  002388  C02D  F06B         	movff	?_Read_Ch_Volt+2,main@Volt+2
   813                           
   814                           ;lab1p3.c: 64: printf ("Volt at AN4 is %f\r\n\n", Volt);
   815  00238C  0E99               	movlw	low STR_4
   816  00238E  6E47               	movwf	printf@f,c
   817  002390  0E10               	movlw	high STR_4
   818  002392  6E48               	movwf	printf@f+1,c
   819  002394  C069  F049         	movff	main@Volt,?_printf+2
   820  002398  C06A  F04A         	movff	main@Volt+1,?_printf+3
   821  00239C  C06B  F04B         	movff	main@Volt+2,?_printf+4
   822  0023A0  EC76  F008         	call	_printf	;wreg free
   823                           
   824                           ;lab1p3.c: 65: Volt = Read_Ch_Volt( 3);
   825  0023A4  0E03               	movlw	3
   826  0023A6  ECDB  F013         	call	_Read_Ch_Volt
   827  0023AA  C02B  F069         	movff	?_Read_Ch_Volt,main@Volt
   828  0023AE  C02C  F06A         	movff	?_Read_Ch_Volt+1,main@Volt+1
   829  0023B2  C02D  F06B         	movff	?_Read_Ch_Volt+2,main@Volt+2
   830                           
   831                           ;lab1p3.c: 66: printf ("Reference voltage at AN3 is %f\r\n\n", Volt);
   832  0023B6  0E77               	movlw	low STR_5
   833  0023B8  6E47               	movwf	printf@f,c
   834  0023BA  0E10               	movlw	high STR_5
   835  0023BC  6E48               	movwf	printf@f+1,c
   836  0023BE  C069  F049         	movff	main@Volt,?_printf+2
   837  0023C2  C06A  F04A         	movff	main@Volt+1,?_printf+3
   838  0023C6  C06B  F04B         	movff	main@Volt+2,?_printf+4
   839  0023CA  EC76  F008         	call	_printf	;wreg free
   840  0023CE  D796               	goto	l2491
   841  0023D0  EF00  F000         	goto	start
   842  0023D4                     __end_of_main:
   843                           	opt stack 0
   844                           tblptru	equ	0xFF8
   845                           
   846 ;; *************** function _printf *****************
   847 ;; Defined at:
   848 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  f               2   70[COMRAM] PTR const unsigned char 
   851 ;;		 -> STR_5(34), STR_4(21), STR_3(20), STR_2(20), 
   852 ;;		 -> STR_1(20), 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  tmpval          4   96[COMRAM] struct .
   855 ;;  val             4   90[COMRAM] unsigned long 
   856 ;;  fval            3  100[COMRAM] unsigned long 
   857 ;;  cp              3    0        PTR const unsigned char 
   858 ;;  exp             2   94[COMRAM] int 
   859 ;;  prec            2   88[COMRAM] int 
   860 ;;  flag            2   86[COMRAM] unsigned short 
   861 ;;  ap              2   84[COMRAM] PTR void [1]
   862 ;;		 -> ?_printf(2), 
   863 ;;  len             2    0        unsigned int 
   864 ;;  width           2    0        int 
   865 ;;  c               1  103[COMRAM] char 
   866 ;;  d               1    0        unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  2   70[COMRAM] int 
   869 ;; Registers used:
   870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:       34 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    3
   883 ;; This function calls:
   884 ;;		___awdiv
   885 ;;		___ftadd
   886 ;;		___ftge
   887 ;;		___ftmul
   888 ;;		___ftneg
   889 ;;		___ftsub
   890 ;;		___fttol
   891 ;;		___lldiv
   892 ;;		___llmod
   893 ;;		___lltoft
   894 ;;		___wmul
   895 ;;		__div_to_l_
   896 ;;		__tdiv_to_l_
   897 ;;		_fround
   898 ;;		_putch
   899 ;;		_scale
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text1
   906  0010EC                     __ptext1:
   907                           	opt stack 0
   908  0010EC                     _printf:
   909                           	opt stack 27
   910                           
   911                           ;doprnt.c: 466: va_list ap;
   912                           ;doprnt.c: 499: signed char c;
   913                           ;doprnt.c: 501: int width;
   914                           ;doprnt.c: 504: int prec;
   915                           ;doprnt.c: 508: unsigned short flag;
   916                           ;doprnt.c: 515: char d;
   917                           ;doprnt.c: 516: double fval;
   918                           ;doprnt.c: 517: int exp;
   919                           ;doprnt.c: 523: union {
   920                           ;doprnt.c: 524: unsigned long vd;
   921                           ;doprnt.c: 525: double integ;
   922                           ;doprnt.c: 526: } tmpval;
   923                           ;doprnt.c: 528: unsigned long val;
   924                           ;doprnt.c: 529: unsigned len;
   925                           ;doprnt.c: 530: const char * cp;
   926                           ;doprnt.c: 533: *ap = __va_start();
   927                           
   928                           ;incstack = 0
   929  0010EC  0E49               	movlw	low (?_printf+2)
   930  0010EE  6E55               	movwf	printf@ap,c
   931  0010F0  0E00               	movlw	high (?_printf+2)
   932  0010F2  6E56               	movwf	printf@ap+1,c
   933                           
   934                           ;doprnt.c: 536: while(c = *f++) {
   935  0010F4  D2FF               	goto	l2487
   936  0010F6                     l2339:
   937                           
   938                           ;doprnt.c: 538: if(c != '%')
   939  0010F6  0E25               	movlw	37
   940  0010F8  1868               	xorwf	printf@c,w,c
   941  0010FA  B4D8               	btfsc	status,2,c
   942  0010FC  D004               	goto	l2343
   943                           
   944                           ;doprnt.c: 540: {
   945                           ;doprnt.c: 541: (putch(c) );
   946  0010FE  5068               	movf	printf@c,w,c
   947  001100  EC39  F015         	call	_putch
   948                           
   949                           ;doprnt.c: 542: continue;
   950  001104  D2F7               	goto	l2487
   951  001106                     l2343:
   952                           
   953                           ;doprnt.c: 543: }
   954                           ;doprnt.c: 548: flag = 0;
   955  001106  0E00               	movlw	0
   956  001108  6E58               	movwf	printf@flag+1,c
   957  00110A  0E00               	movlw	0
   958  00110C  6E57               	movwf	printf@flag,c
   959                           
   960                           ;doprnt.c: 635: switch(c = *f++) {
   961  00110E  D005               	goto	l2349
   962                           
   963                           ;doprnt.c: 638: goto alldone;
   964                           
   965                           ;doprnt.c: 637: case 0:
   966  001110  D2FF               	goto	l132
   967  001112                     l2345:
   968                           
   969                           ;doprnt.c: 663: flag |= 0x400;
   970  001112  8458               	bsf	printf@flag+1,2,c
   971                           
   972                           ;doprnt.c: 664: break;
   973  001114  D013               	goto	l2351
   974                           
   975                           ;doprnt.c: 813: continue;
   976                           
   977                           ;doprnt.c: 802: default:
   978  001116  D2EE               	goto	l2487
   979                           
   980                           ;doprnt.c: 822: }
   981  001118  D011               	goto	l2351
   982  00111A                     l2349:
   983  00111A  C047  FFF6         	movff	printf@f,tblptrl
   984  00111E  C048  FFF7         	movff	printf@f+1,tblptrh
   985  001122  4A47               	infsnz	printf@f,f,c
   986  001124  2A48               	incf	printf@f+1,f,c
   987  001126                     	if	0	;tblptru may be non-zero
   988  001126                     	endif
   989  001126                     	if	0	;tblptru may be non-zero
   990  001126                     	endif
   991  001126  0008               	tblrd		*
   992  001128  CFF5 F068          	movff	tablat,printf@c
   993  00112C  5068               	movf	printf@c,w,c
   994                           
   995                           ; Switch size 1, requested type "space"
   996                           ; Number of cases is 2, Range of values is 0 to 102
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte            7     4 (average)
  1000                           ;	Chosen strategy is simple_byte
  1001  00112E  0A00               	xorlw	0	; case 0
  1002  001130  B4D8               	btfsc	status,2,c
  1003  001132  D2EE               	goto	l132
  1004  001134  0A66               	xorlw	102	; case 102
  1005  001136  B4D8               	btfsc	status,2,c
  1006  001138  D7EC               	goto	l2345
  1007  00113A  D2DC               	goto	l2487
  1008  00113C                     l2351:
  1009                           
  1010                           ;doprnt.c: 825: if(flag & (0x700)) {
  1011  00113C  0E07               	movlw	7
  1012  00113E  1458               	andwf	printf@flag+1,w,c
  1013  001140  B4D8               	btfsc	status,2,c
  1014  001142  D2CA               	goto	l2483
  1015                           
  1016                           ;doprnt.c: 829: prec = 6;
  1017  001144  0E00               	movlw	0
  1018  001146  6E5A               	movwf	printf@prec+1,c
  1019  001148  0E06               	movlw	6
  1020  00114A  6E59               	movwf	printf@prec,c
  1021                           
  1022                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1023  00114C  C055  FFD9         	movff	printf@ap,fsr2l
  1024  001150  C056  FFDA         	movff	printf@ap+1,fsr2h
  1025  001154  CFDE F065          	movff	postinc2,printf@fval
  1026  001158  CFDE F066          	movff	postinc2,printf@fval+1
  1027  00115C  CFDD F067          	movff	postdec2,printf@fval+2
  1028  001160  0E03               	movlw	3
  1029  001162  2655               	addwf	printf@ap,f,c
  1030  001164  0E00               	movlw	0
  1031  001166  2256               	addwfc	printf@ap+1,f,c
  1032                           
  1033                           ;doprnt.c: 831: if(fval < 0.0) {
  1034  001168  AE67               	btfss	printf@fval+2,7,c
  1035  00116A  D011               	goto	l2365
  1036                           
  1037                           ;doprnt.c: 832: fval = -fval;
  1038  00116C  C065  F001         	movff	printf@fval,___ftneg@f1
  1039  001170  C066  F002         	movff	printf@fval+1,___ftneg@f1+1
  1040  001174  C067  F003         	movff	printf@fval+2,___ftneg@f1+2
  1041  001178  EC1D  F015         	call	___ftneg	;wreg free
  1042  00117C  C001  F065         	movff	?___ftneg,printf@fval
  1043  001180  C002  F066         	movff	?___ftneg+1,printf@fval+1
  1044  001184  C003  F067         	movff	?___ftneg+2,printf@fval+2
  1045                           
  1046                           ;doprnt.c: 833: flag |= 0x03;
  1047  001188  0E03               	movlw	3
  1048  00118A  1257               	iorwf	printf@flag,f,c
  1049  00118C  D000               	goto	l2365
  1050  00118E                     l2365:
  1051                           
  1052                           ;doprnt.c: 834: }
  1053                           ;doprnt.c: 835: exp = 0;
  1054  00118E  0E00               	movlw	0
  1055  001190  6E60               	movwf	printf@exp+1,c
  1056  001192  0E00               	movlw	0
  1057  001194  6E5F               	movwf	printf@exp,c
  1058                           
  1059                           ;doprnt.c: 836: if( fval!=0) {
  1060  001196  5065               	movf	printf@fval,w,c
  1061  001198  1066               	iorwf	printf@fval+1,w,c
  1062  00119A  1067               	iorwf	printf@fval+2,w,c
  1063  00119C  B4D8               	btfsc	status,2,c
  1064  00119E  D085               	goto	l2393
  1065                           
  1066                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1067  0011A0  0E82               	movlw	130
  1068  0011A2  6E4C               	movwf	??_printf& (0+255),c
  1069  0011A4  0EFF               	movlw	255
  1070  0011A6  6E4D               	movwf	(??_printf+1)& (0+255),c
  1071  0011A8  C065  F04E         	movff	printf@fval,??_printf+2
  1072  0011AC  C066  F04F         	movff	printf@fval+1,??_printf+3
  1073  0011B0  C067  F050         	movff	printf@fval+2,??_printf+4
  1074  0011B4  C068  F051         	movff	printf@fval+3,??_printf+5
  1075  0011B8  0E10               	movlw	16
  1076  0011BA  D005               	goto	u2470
  1077  0011BC                     u2475:
  1078  0011BC  90D8               	bcf	status,0,c
  1079  0011BE  3251               	rrcf	??_printf+5,f,c
  1080  0011C0  3250               	rrcf	??_printf+4,f,c
  1081  0011C2  324F               	rrcf	??_printf+3,f,c
  1082  0011C4  324E               	rrcf	??_printf+2,f,c
  1083  0011C6                     u2470:
  1084  0011C6  2EE8               	decfsz	wreg,f,c
  1085  0011C8  D7F9               	goto	u2475
  1086  0011CA  504E               	movf	??_printf+2,w,c
  1087  0011CC  244C               	addwf	??_printf,w,c
  1088  0011CE  6E5F               	movwf	printf@exp,c
  1089  0011D0  0E00               	movlw	0
  1090  0011D2  204D               	addwfc	??_printf+1,w,c
  1091  0011D4  6E60               	movwf	printf@exp+1,c
  1092                           
  1093                           ;doprnt.c: 838: exp--;
  1094  0011D6  065F               	decf	printf@exp,f,c
  1095  0011D8  A0D8               	btfss	status,0,c
  1096  0011DA  0660               	decf	printf@exp+1,f,c
  1097                           
  1098                           ;doprnt.c: 839: exp *= 3;
  1099  0011DC  C05F  F00F         	movff	printf@exp,___wmul@multiplier
  1100  0011E0  C060  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1101  0011E4  0E00               	movlw	0
  1102  0011E6  6E12               	movwf	___wmul@multiplicand+1,c
  1103  0011E8  0E03               	movlw	3
  1104  0011EA  6E11               	movwf	___wmul@multiplicand,c
  1105  0011EC  ECF6  F014         	call	___wmul	;wreg free
  1106  0011F0  C00F  F05F         	movff	?___wmul,printf@exp
  1107  0011F4  C010  F060         	movff	?___wmul+1,printf@exp+1
  1108                           
  1109                           ;doprnt.c: 840: exp /= 10;
  1110  0011F8  C05F  F007         	movff	printf@exp,___awdiv@dividend
  1111  0011FC  C060  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1112  001200  0E00               	movlw	0
  1113  001202  6E0A               	movwf	___awdiv@divisor+1,c
  1114  001204  0E0A               	movlw	10
  1115  001206  6E09               	movwf	___awdiv@divisor,c
  1116  001208  ECBE  F012         	call	___awdiv	;wreg free
  1117  00120C  C007  F05F         	movff	?___awdiv,printf@exp
  1118  001210  C008  F060         	movff	?___awdiv+1,printf@exp+1
  1119                           
  1120                           ;doprnt.c: 841: if(exp < 0)
  1121  001214  AE60               	btfss	printf@exp+1,7,c
  1122  001216  D004               	goto	l2381
  1123                           
  1124                           ;doprnt.c: 842: exp--;
  1125  001218  065F               	decf	printf@exp,f,c
  1126  00121A  A0D8               	btfss	status,0,c
  1127  00121C  0660               	decf	printf@exp+1,f,c
  1128  00121E  D000               	goto	l2381
  1129  001220                     l2381:
  1130                           
  1131                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1132  001220  505F               	movf	printf@exp,w,c
  1133  001222  0800               	sublw	0
  1134  001224  EC89  F00B         	call	_scale
  1135  001228  C02B  F061         	movff	?_scale,printf@tmpval
  1136  00122C  C02C  F062         	movff	?_scale+1,printf@tmpval+1
  1137  001230  C02D  F063         	movff	?_scale+2,printf@tmpval+2
  1138                           
  1139                           ;doprnt.c: 847: tmpval.integ *= fval;
  1140  001234  C061  F01C         	movff	printf@tmpval,___ftmul@f1
  1141  001238  C062  F01D         	movff	printf@tmpval+1,___ftmul@f1+1
  1142  00123C  C063  F01E         	movff	printf@tmpval+2,___ftmul@f1+2
  1143  001240  C065  F01F         	movff	printf@fval,___ftmul@f2
  1144  001244  C066  F020         	movff	printf@fval+1,___ftmul@f2+1
  1145  001248  C067  F021         	movff	printf@fval+2,___ftmul@f2+2
  1146  00124C  EC8A  F010         	call	___ftmul	;wreg free
  1147  001250  C01C  F061         	movff	?___ftmul,printf@tmpval
  1148  001254  C01D  F062         	movff	?___ftmul+1,printf@tmpval+1
  1149  001258  C01E  F063         	movff	?___ftmul+2,printf@tmpval+2
  1150                           
  1151                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1152  00125C  C061  F001         	movff	printf@tmpval,___ftge@ff1
  1153  001260  C062  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1154  001264  C063  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1155  001268  0E00               	movlw	0
  1156  00126A  6E04               	movwf	___ftge@ff2,c
  1157  00126C  0E80               	movlw	128
  1158  00126E  6E05               	movwf	___ftge@ff2+1,c
  1159  001270  0E3F               	movlw	63
  1160  001272  6E06               	movwf	___ftge@ff2+2,c
  1161  001274  EC09  F013         	call	___ftge	;wreg free
  1162  001278  B0D8               	btfsc	status,0,c
  1163  00127A  D004               	goto	l2389
  1164                           
  1165                           ;doprnt.c: 849: exp--;
  1166  00127C  065F               	decf	printf@exp,f,c
  1167  00127E  A0D8               	btfss	status,0,c
  1168  001280  0660               	decf	printf@exp+1,f,c
  1169  001282  D013               	goto	l2393
  1170  001284                     l2389:
  1171                           
  1172                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1173  001284  C061  F001         	movff	printf@tmpval,___ftge@ff1
  1174  001288  C062  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1175  00128C  C063  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1176  001290  0E00               	movlw	0
  1177  001292  6E04               	movwf	___ftge@ff2,c
  1178  001294  0E20               	movlw	32
  1179  001296  6E05               	movwf	___ftge@ff2+1,c
  1180  001298  0E41               	movlw	65
  1181  00129A  6E06               	movwf	___ftge@ff2+2,c
  1182  00129C  EC09  F013         	call	___ftge	;wreg free
  1183  0012A0  A0D8               	btfss	status,0,c
  1184  0012A2  D003               	goto	l2393
  1185                           
  1186                           ;doprnt.c: 851: exp++;
  1187  0012A4  4A5F               	infsnz	printf@exp,f,c
  1188  0012A6  2A60               	incf	printf@exp+1,f,c
  1189  0012A8  D000               	goto	l2393
  1190  0012AA                     l2393:
  1191                           
  1192                           ;doprnt.c: 852: }
  1193                           ;doprnt.c: 1112: if(prec <= 12)
  1194  0012AA  BE5A               	btfsc	printf@prec+1,7,c
  1195  0012AC  D006               	goto	l2395
  1196  0012AE  505A               	movf	printf@prec+1,w,c
  1197  0012B0  E11C               	bnz	l2397
  1198  0012B2  0E0D               	movlw	13
  1199  0012B4  5C59               	subwf	printf@prec,w,c
  1200  0012B6  B0D8               	btfsc	status,0,c
  1201  0012B8  D018               	goto	l2397
  1202  0012BA                     l2395:
  1203                           
  1204                           ;doprnt.c: 1113: fval += fround(prec);
  1205  0012BA  C065  F035         	movff	printf@fval,___ftadd@f1
  1206  0012BE  C066  F036         	movff	printf@fval+1,___ftadd@f1+1
  1207  0012C2  C067  F037         	movff	printf@fval+2,___ftadd@f1+2
  1208  0012C6  5059               	movf	printf@prec,w,c
  1209  0012C8  EC79  F00D         	call	_fround
  1210  0012CC  C02B  F038         	movff	?_fround,___ftadd@f2
  1211  0012D0  C02C  F039         	movff	?_fround+1,___ftadd@f2+1
  1212  0012D4  C02D  F03A         	movff	?_fround+2,___ftadd@f2+2
  1213  0012D8  EC9B  F00E         	call	___ftadd	;wreg free
  1214  0012DC  C035  F065         	movff	?___ftadd,printf@fval
  1215  0012E0  C036  F066         	movff	?___ftadd+1,printf@fval+1
  1216  0012E4  C037  F067         	movff	?___ftadd+2,printf@fval+2
  1217  0012E8  D000               	goto	l2397
  1218  0012EA                     l2397:
  1219                           
  1220                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1221  0012EA  BE60               	btfsc	printf@exp+1,7,c
  1222  0012EC  D006               	goto	l2399
  1223  0012EE  5060               	movf	printf@exp+1,w,c
  1224  0012F0  E120               	bnz	l2405
  1225  0012F2  0E0A               	movlw	10
  1226  0012F4  5C5F               	subwf	printf@exp,w,c
  1227  0012F6  B0D8               	btfsc	status,0,c
  1228  0012F8  D01C               	goto	l2405
  1229  0012FA                     l2399:
  1230  0012FA  5065               	movf	printf@fval,w,c
  1231  0012FC  1066               	iorwf	printf@fval+1,w,c
  1232  0012FE  1067               	iorwf	printf@fval+2,w,c
  1233  001300  B4D8               	btfsc	status,2,c
  1234  001302  D06D               	goto	l2419
  1235  001304  C065  F032         	movff	printf@fval,___fttol@f1
  1236  001308  C066  F033         	movff	printf@fval+1,___fttol@f1+1
  1237  00130C  C067  F034         	movff	printf@fval+2,___fttol@f1+2
  1238  001310  EC06  F011         	call	___fttol	;wreg free
  1239  001314  5032               	movf	?___fttol,w,c
  1240  001316  1033               	iorwf	?___fttol+1,w,c
  1241  001318  1034               	iorwf	?___fttol+2,w,c
  1242  00131A  1035               	iorwf	?___fttol+3,w,c
  1243  00131C  B4D8               	btfsc	status,2,c
  1244  00131E  BE60               	btfsc	printf@exp+1,7,c
  1245  001320  D05E               	goto	l2419
  1246  001322  5060               	movf	printf@exp+1,w,c
  1247  001324  E106               	bnz	l2405
  1248  001326  0E02               	movlw	2
  1249  001328  5C5F               	subwf	printf@exp,w,c
  1250  00132A  B0D8               	btfsc	status,0,c
  1251  00132C  D002               	goto	l2405
  1252  00132E  D057               	goto	l2419
  1253  001330  D000               	goto	l2405
  1254  001332                     l2405:
  1255                           
  1256                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1257  001332  C061  F001         	movff	printf@tmpval,___ftge@ff1
  1258  001336  C062  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1259  00133A  C063  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1260  00133E  0E70               	movlw	112
  1261  001340  6E04               	movwf	___ftge@ff2,c
  1262  001342  0E89               	movlw	137
  1263  001344  6E05               	movwf	___ftge@ff2+1,c
  1264  001346  0E40               	movlw	64
  1265  001348  6E06               	movwf	___ftge@ff2+2,c
  1266  00134A  EC09  F013         	call	___ftge	;wreg free
  1267  00134E  B0D8               	btfsc	status,0,c
  1268  001350  D002               	goto	l2409
  1269                           
  1270                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1271  001352  0EF7               	movlw	247
  1272  001354  D001               	goto	L1
  1273  001356                     l2409:
  1274                           
  1275                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1276  001356  0EF8               	movlw	248
  1277  001358                     L1:
  1278  001358  265F               	addwf	printf@exp,f,c
  1279  00135A  0EFF               	movlw	255
  1280  00135C  2260               	addwfc	printf@exp+1,f,c
  1281  00135E  D000               	goto	l2411
  1282  001360                     l2411:
  1283                           
  1284                           ;doprnt.c: 1124: }
  1285                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1286  001360  505F               	movf	printf@exp,w,c
  1287  001362  EC89  F00B         	call	_scale
  1288  001366  C02B  F061         	movff	?_scale,printf@tmpval
  1289  00136A  C02C  F062         	movff	?_scale+1,printf@tmpval+1
  1290  00136E  C02D  F063         	movff	?_scale+2,printf@tmpval+2
  1291                           
  1292                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1293  001372  D017               	goto	l2415
  1294  001374  C065  F001         	movff	printf@fval,__div_to_l_@f1
  1295  001378  C066  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1296  00137C  C067  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1297  001380  C061  F004         	movff	printf@tmpval,__div_to_l_@f2
  1298  001384  C062  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1299  001388  C063  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1300  00138C  EC05  F010         	call	__div_to_l_	;wreg free
  1301  001390  C001  F05B         	movff	?__div_to_l_,printf@val
  1302  001394  C002  F05C         	movff	?__div_to_l_+1,printf@val+1
  1303  001398  C003  F05D         	movff	?__div_to_l_+2,printf@val+2
  1304  00139C  C004  F05E         	movff	?__div_to_l_+3,printf@val+3
  1305  0013A0  D017               	goto	l2417
  1306  0013A2                     l2415:
  1307  0013A2  C065  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1308  0013A6  C066  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1309  0013AA  C067  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1310  0013AE  C061  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1311  0013B2  C062  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1312  0013B6  C063  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1313  0013BA  EC7D  F00F         	call	__tdiv_to_l_	;wreg free
  1314  0013BE  C001  F05B         	movff	?__tdiv_to_l_,printf@val
  1315  0013C2  C002  F05C         	movff	?__tdiv_to_l_+1,printf@val+1
  1316  0013C6  C003  F05D         	movff	?__tdiv_to_l_+2,printf@val+2
  1317  0013CA  C004  F05E         	movff	?__tdiv_to_l_+3,printf@val+3
  1318  0013CE  D000               	goto	l2417
  1319  0013D0                     l2417:
  1320                           
  1321                           ;doprnt.c: 1129: fval = 0.0;
  1322  0013D0  0E00               	movlw	0
  1323  0013D2  6E65               	movwf	printf@fval,c
  1324  0013D4  0E00               	movlw	0
  1325  0013D6  6E66               	movwf	printf@fval+1,c
  1326  0013D8  0E00               	movlw	0
  1327  0013DA  6E67               	movwf	printf@fval+2,c
  1328                           
  1329                           ;doprnt.c: 1130: } else {
  1330  0013DC  D033               	goto	l2423
  1331  0013DE                     l2419:
  1332                           
  1333                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1334  0013DE  C065  F032         	movff	printf@fval,___fttol@f1
  1335  0013E2  C066  F033         	movff	printf@fval+1,___fttol@f1+1
  1336  0013E6  C067  F034         	movff	printf@fval+2,___fttol@f1+2
  1337  0013EA  EC06  F011         	call	___fttol	;wreg free
  1338  0013EE  C032  F05B         	movff	?___fttol,printf@val
  1339  0013F2  C033  F05C         	movff	?___fttol+1,printf@val+1
  1340  0013F6  C034  F05D         	movff	?___fttol+2,printf@val+2
  1341  0013FA  C035  F05E         	movff	?___fttol+3,printf@val+3
  1342                           
  1343                           ;doprnt.c: 1132: fval -= (double)val;
  1344  0013FE  C065  F041         	movff	printf@fval,___ftsub@f1
  1345  001402  C066  F042         	movff	printf@fval+1,___ftsub@f1+1
  1346  001406  C067  F043         	movff	printf@fval+2,___ftsub@f1+2
  1347  00140A  C05B  F009         	movff	printf@val,___lltoft@c
  1348  00140E  C05C  F00A         	movff	printf@val+1,___lltoft@c+1
  1349  001412  C05D  F00B         	movff	printf@val+2,___lltoft@c+2
  1350  001416  C05E  F00C         	movff	printf@val+3,___lltoft@c+3
  1351  00141A  EC86  F014         	call	___lltoft	;wreg free
  1352  00141E  C009  F044         	movff	?___lltoft,___ftsub@f2
  1353  001422  C00A  F045         	movff	?___lltoft+1,___ftsub@f2+1
  1354  001426  C00B  F046         	movff	?___lltoft+2,___ftsub@f2+2
  1355  00142A  ECB6  F014         	call	___ftsub	;wreg free
  1356  00142E  C041  F065         	movff	?___ftsub,printf@fval
  1357  001432  C042  F066         	movff	?___ftsub+1,printf@fval+1
  1358  001436  C043  F067         	movff	?___ftsub+2,printf@fval+2
  1359                           
  1360                           ;doprnt.c: 1133: exp = 0;
  1361  00143A  0E00               	movlw	0
  1362  00143C  6E60               	movwf	printf@exp+1,c
  1363  00143E  0E00               	movlw	0
  1364  001440  6E5F               	movwf	printf@exp,c
  1365  001442  D000               	goto	l2423
  1366  001444                     l2423:
  1367                           
  1368                           ;doprnt.c: 1134: }
  1369                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1370  001444  0E01               	movlw	1
  1371  001446  6E68               	movwf	printf@c,c
  1372  001448                     l2425:
  1373  001448  0E0A               	movlw	10
  1374  00144A  1868               	xorwf	printf@c,w,c
  1375  00144C  B4D8               	btfsc	status,2,c
  1376  00144E  D01C               	goto	l2437
  1377  001450  D001               	goto	l2429
  1378  001452  D01A               	goto	l2437
  1379  001454                     l2429:
  1380                           
  1381                           ;doprnt.c: 1137: if(val < dpowers[c])
  1382  001454  5068               	movf	printf@c,w,c
  1383  001456  0D04               	mullw	4
  1384  001458  0E01               	movlw	low _dpowers
  1385  00145A  24F3               	addwf	prodl,w,c
  1386  00145C  6EF6               	movwf	tblptrl,c
  1387  00145E  0E10               	movlw	high _dpowers
  1388  001460  20F4               	addwfc	prodh,w,c
  1389  001462  6EF7               	movwf	tblptrh,c
  1390  001464                     	if	0	;There are less than 3 active tblptr bytes
  1391  001464                     	endif
  1392  001464  0009               	tblrd		*+
  1393  001466  50F5               	movf	tablat,w,c
  1394  001468  5C5B               	subwf	printf@val,w,c
  1395  00146A  0009               	tblrd		*+
  1396  00146C  50F5               	movf	tablat,w,c
  1397  00146E  585C               	subwfb	printf@val+1,w,c
  1398  001470  0009               	tblrd		*+
  1399  001472  50F5               	movf	tablat,w,c
  1400  001474  585D               	subwfb	printf@val+2,w,c
  1401  001476  0009               	tblrd		*+
  1402  001478  50F5               	movf	tablat,w,c
  1403  00147A  585E               	subwfb	printf@val+3,w,c
  1404  00147C  A0D8               	btfss	status,0,c
  1405  00147E  D004               	goto	l2437
  1406  001480  D001               	goto	l2433
  1407                           
  1408                           ;doprnt.c: 1138: break;
  1409  001482  D002               	goto	l2437
  1410  001484                     l2433:
  1411  001484  2A68               	incf	printf@c,f,c
  1412  001486  D7E0               	goto	l2425
  1413  001488                     l2437:
  1414                           
  1415                           ;doprnt.c: 1175: {
  1416                           ;doprnt.c: 1188: if(flag & 0x03)
  1417  001488  0E03               	movlw	3
  1418  00148A  1457               	andwf	printf@flag,w,c
  1419  00148C  6E4C               	movwf	??_printf& (0+255),c
  1420  00148E  0E00               	movlw	0
  1421  001490  1458               	andwf	printf@flag+1,w,c
  1422  001492  6E4D               	movwf	(??_printf+1)& (0+255),c
  1423  001494  504C               	movf	??_printf,w,c
  1424  001496  104D               	iorwf	??_printf+1,w,c
  1425  001498  B4D8               	btfsc	status,2,c
  1426  00149A  D049               	goto	l2447
  1427                           
  1428                           ;doprnt.c: 1190: (putch('-') );
  1429  00149C  0E2D               	movlw	45
  1430  00149E  EC39  F015         	call	_putch
  1431                           
  1432                           ;doprnt.c: 1195: }
  1433                           ;doprnt.c: 1196: while(c--) {
  1434  0014A2  D045               	goto	l2447
  1435  0014A4                     l2441:
  1436                           
  1437                           ;doprnt.c: 1200: {
  1438                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1439  0014A4  C05B  F001         	movff	printf@val,___lldiv@dividend
  1440  0014A8  C05C  F002         	movff	printf@val+1,___lldiv@dividend+1
  1441  0014AC  C05D  F003         	movff	printf@val+2,___lldiv@dividend+2
  1442  0014B0  C05E  F004         	movff	printf@val+3,___lldiv@dividend+3
  1443  0014B4  5068               	movf	printf@c,w,c
  1444  0014B6  0D04               	mullw	4
  1445  0014B8  0E01               	movlw	low _dpowers
  1446  0014BA  24F3               	addwf	prodl,w,c
  1447  0014BC  6EF6               	movwf	tblptrl,c
  1448  0014BE  0E10               	movlw	high _dpowers
  1449  0014C0  20F4               	addwfc	prodh,w,c
  1450  0014C2  6EF7               	movwf	tblptrh,c
  1451  0014C4                     	if	0	;There are less than 3 active tblptr bytes
  1452  0014C4                     	endif
  1453  0014C4  0009               	tblrd		*+
  1454  0014C6  CFF5 F005          	movff	tablat,___lldiv@divisor
  1455  0014CA  0009               	tblrd		*+
  1456  0014CC  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1457  0014D0  0009               	tblrd		*+
  1458  0014D2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1459  0014D6  000A               	tblrd		*-
  1460  0014D8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1461  0014DC  EC54  F013         	call	___lldiv	;wreg free
  1462  0014E0  C001  F061         	movff	?___lldiv,printf@tmpval
  1463  0014E4  C002  F062         	movff	?___lldiv+1,printf@tmpval+1
  1464  0014E8  C003  F063         	movff	?___lldiv+2,printf@tmpval+2
  1465  0014EC  C004  F064         	movff	?___lldiv+3,printf@tmpval+3
  1466                           
  1467                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1468  0014F0  C061  F001         	movff	printf@tmpval,___llmod@dividend
  1469  0014F4  C062  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1470  0014F8  C063  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1471  0014FC  C064  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1472  001500  0E0A               	movlw	10
  1473  001502  6E05               	movwf	___llmod@divisor,c
  1474  001504  0E00               	movlw	0
  1475  001506  6E06               	movwf	___llmod@divisor+1,c
  1476  001508  0E00               	movlw	0
  1477  00150A  6E07               	movwf	___llmod@divisor+2,c
  1478  00150C  0E00               	movlw	0
  1479  00150E  6E08               	movwf	___llmod@divisor+3,c
  1480  001510  EC16  F014         	call	___llmod	;wreg free
  1481  001514  C001  F061         	movff	?___llmod,printf@tmpval
  1482  001518  C002  F062         	movff	?___llmod+1,printf@tmpval+1
  1483  00151C  C003  F063         	movff	?___llmod+2,printf@tmpval+2
  1484  001520  C004  F064         	movff	?___llmod+3,printf@tmpval+3
  1485                           
  1486                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1487  001524  5061               	movf	printf@tmpval,w,c
  1488  001526  0F30               	addlw	48
  1489  001528  EC39  F015         	call	_putch
  1490  00152C  D000               	goto	l2447
  1491  00152E                     l2447:
  1492  00152E  0668               	decf	printf@c,f,c
  1493  001530  2868               	incf	printf@c,w,c
  1494  001532  B4D8               	btfsc	status,2,c
  1495  001534  D009               	goto	l2453
  1496  001536  D7B6               	goto	l2441
  1497                           
  1498                           ;doprnt.c: 1204: }
  1499                           ;doprnt.c: 1206: }
  1500                           ;doprnt.c: 1207: while(exp > 0) {
  1501  001538  D007               	goto	l2453
  1502  00153A                     l2449:
  1503                           
  1504                           ;doprnt.c: 1208: (putch('0') );
  1505  00153A  0E30               	movlw	48
  1506  00153C  EC39  F015         	call	_putch
  1507                           
  1508                           ;doprnt.c: 1209: exp--;
  1509  001540  065F               	decf	printf@exp,f,c
  1510  001542  A0D8               	btfss	status,0,c
  1511  001544  0660               	decf	printf@exp+1,f,c
  1512  001546  D000               	goto	l2453
  1513  001548                     l2453:
  1514  001548  BE60               	btfsc	printf@exp+1,7,c
  1515  00154A  D005               	goto	l2455
  1516  00154C  5060               	movf	printf@exp+1,w,c
  1517  00154E  E1F5               	bnz	l2449
  1518  001550  045F               	decf	printf@exp,w,c
  1519  001552  B0D8               	btfsc	status,0,c
  1520  001554  D7F2               	goto	l2449
  1521  001556                     l2455:
  1522                           
  1523                           ;doprnt.c: 1210: }
  1524                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1525  001556  BE5A               	btfsc	printf@prec+1,7,c
  1526  001558  D009               	goto	l121
  1527  00155A  505A               	movf	printf@prec+1,w,c
  1528  00155C  E104               	bnz	u2630
  1529  00155E  0E09               	movlw	9
  1530  001560  5C59               	subwf	printf@prec,w,c
  1531  001562  A0D8               	btfss	status,0,c
  1532  001564  D003               	goto	l121
  1533  001566                     u2630:
  1534                           
  1535                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1536  001566  0E08               	movlw	8
  1537  001568  6E68               	movwf	printf@c,c
  1538  00156A  D003               	goto	l2459
  1539  00156C                     l121:
  1540                           
  1541                           ;doprnt.c: 1213: else
  1542                           ;doprnt.c: 1214: c = prec;
  1543  00156C  C059  F068         	movff	printf@prec,printf@c
  1544  001570  D000               	goto	l2459
  1545  001572                     l2459:
  1546                           
  1547                           ;doprnt.c: 1215: prec -= c;
  1548  001572  5068               	movf	printf@c,w,c
  1549  001574  5E59               	subwf	printf@prec,f,c
  1550  001576  0E00               	movlw	0
  1551  001578  BE68               	btfsc	printf@c,7,c
  1552  00157A  0EFF               	movlw	255
  1553  00157C  5A5A               	subwfb	printf@prec+1,f,c
  1554                           
  1555                           ;doprnt.c: 1219: if(c)
  1556  00157E  5068               	movf	printf@c,w,c
  1557  001580  B4D8               	btfsc	status,2,c
  1558  001582  D004               	goto	l2465
  1559                           
  1560                           ;doprnt.c: 1221: (putch('.') );
  1561  001584  0E2E               	movlw	46
  1562  001586  EC39  F015         	call	_putch
  1563  00158A  D000               	goto	l2465
  1564  00158C                     l2465:
  1565                           
  1566                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1567  00158C  5068               	movf	printf@c,w,c
  1568  00158E  EC89  F00B         	call	_scale
  1569  001592  C02B  F052         	movff	?_scale,_printf$1009
  1570  001596  C02C  F053         	movff	?_scale+1,_printf$1009+1
  1571  00159A  C02D  F054         	movff	?_scale+2,_printf$1009+2
  1572                           
  1573                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1574  00159E  C065  F01F         	movff	printf@fval,___ftmul@f2
  1575  0015A2  C066  F020         	movff	printf@fval+1,___ftmul@f2+1
  1576  0015A6  C067  F021         	movff	printf@fval+2,___ftmul@f2+2
  1577  0015AA  C052  F01C         	movff	_printf$1009,___ftmul@f1
  1578  0015AE  C053  F01D         	movff	_printf$1009+1,___ftmul@f1+1
  1579  0015B2  C054  F01E         	movff	_printf$1009+2,___ftmul@f1+2
  1580  0015B6  EC8A  F010         	call	___ftmul	;wreg free
  1581  0015BA  C01C  F032         	movff	?___ftmul,___fttol@f1
  1582  0015BE  C01D  F033         	movff	?___ftmul+1,___fttol@f1+1
  1583  0015C2  C01E  F034         	movff	?___ftmul+2,___fttol@f1+2
  1584  0015C6  EC06  F011         	call	___fttol	;wreg free
  1585  0015CA  C032  F05B         	movff	?___fttol,printf@val
  1586  0015CE  C033  F05C         	movff	?___fttol+1,printf@val+1
  1587  0015D2  C034  F05D         	movff	?___fttol+2,printf@val+2
  1588  0015D6  C035  F05E         	movff	?___fttol+3,printf@val+3
  1589                           
  1590                           ;doprnt.c: 1228: while(c--) {
  1591  0015DA  D06B               	goto	l2475
  1592  0015DC                     l2469:
  1593                           
  1594                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1595  0015DC  C05B  F001         	movff	printf@val,___lldiv@dividend
  1596  0015E0  C05C  F002         	movff	printf@val+1,___lldiv@dividend+1
  1597  0015E4  C05D  F003         	movff	printf@val+2,___lldiv@dividend+2
  1598  0015E8  C05E  F004         	movff	printf@val+3,___lldiv@dividend+3
  1599  0015EC  5068               	movf	printf@c,w,c
  1600  0015EE  0D04               	mullw	4
  1601  0015F0  0E01               	movlw	low _dpowers
  1602  0015F2  24F3               	addwf	prodl,w,c
  1603  0015F4  6EF6               	movwf	tblptrl,c
  1604  0015F6  0E10               	movlw	high _dpowers
  1605  0015F8  20F4               	addwfc	prodh,w,c
  1606  0015FA  6EF7               	movwf	tblptrh,c
  1607  0015FC                     	if	0	;There are less than 3 active tblptr bytes
  1608  0015FC                     	endif
  1609  0015FC  0009               	tblrd		*+
  1610  0015FE  CFF5 F005          	movff	tablat,___lldiv@divisor
  1611  001602  0009               	tblrd		*+
  1612  001604  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1613  001608  0009               	tblrd		*+
  1614  00160A  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1615  00160E  000A               	tblrd		*-
  1616  001610  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1617  001614  EC54  F013         	call	___lldiv	;wreg free
  1618  001618  C001  F061         	movff	?___lldiv,printf@tmpval
  1619  00161C  C002  F062         	movff	?___lldiv+1,printf@tmpval+1
  1620  001620  C003  F063         	movff	?___lldiv+2,printf@tmpval+2
  1621  001624  C004  F064         	movff	?___lldiv+3,printf@tmpval+3
  1622                           
  1623                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1624  001628  C061  F001         	movff	printf@tmpval,___llmod@dividend
  1625  00162C  C062  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1626  001630  C063  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1627  001634  C064  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1628  001638  0E0A               	movlw	10
  1629  00163A  6E05               	movwf	___llmod@divisor,c
  1630  00163C  0E00               	movlw	0
  1631  00163E  6E06               	movwf	___llmod@divisor+1,c
  1632  001640  0E00               	movlw	0
  1633  001642  6E07               	movwf	___llmod@divisor+2,c
  1634  001644  0E00               	movlw	0
  1635  001646  6E08               	movwf	___llmod@divisor+3,c
  1636  001648  EC16  F014         	call	___llmod	;wreg free
  1637  00164C  C001  F061         	movff	?___llmod,printf@tmpval
  1638  001650  C002  F062         	movff	?___llmod+1,printf@tmpval+1
  1639  001654  C003  F063         	movff	?___llmod+2,printf@tmpval+2
  1640  001658  C004  F064         	movff	?___llmod+3,printf@tmpval+3
  1641                           
  1642                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1643  00165C  5061               	movf	printf@tmpval,w,c
  1644  00165E  0F30               	addlw	48
  1645  001660  EC39  F015         	call	_putch
  1646                           
  1647                           ;doprnt.c: 1232: val %= dpowers[c];
  1648  001664  C05B  F001         	movff	printf@val,___llmod@dividend
  1649  001668  C05C  F002         	movff	printf@val+1,___llmod@dividend+1
  1650  00166C  C05D  F003         	movff	printf@val+2,___llmod@dividend+2
  1651  001670  C05E  F004         	movff	printf@val+3,___llmod@dividend+3
  1652  001674  5068               	movf	printf@c,w,c
  1653  001676  0D04               	mullw	4
  1654  001678  0E01               	movlw	low _dpowers
  1655  00167A  24F3               	addwf	prodl,w,c
  1656  00167C  6EF6               	movwf	tblptrl,c
  1657  00167E  0E10               	movlw	high _dpowers
  1658  001680  20F4               	addwfc	prodh,w,c
  1659  001682  6EF7               	movwf	tblptrh,c
  1660  001684                     	if	0	;There are less than 3 active tblptr bytes
  1661  001684                     	endif
  1662  001684  0009               	tblrd		*+
  1663  001686  CFF5 F005          	movff	tablat,___llmod@divisor
  1664  00168A  0009               	tblrd		*+
  1665  00168C  CFF5 F006          	movff	tablat,___llmod@divisor+1
  1666  001690  0009               	tblrd		*+
  1667  001692  CFF5 F007          	movff	tablat,___llmod@divisor+2
  1668  001696  000A               	tblrd		*-
  1669  001698  CFF5 F008          	movff	tablat,___llmod@divisor+3
  1670  00169C  EC16  F014         	call	___llmod	;wreg free
  1671  0016A0  C001  F05B         	movff	?___llmod,printf@val
  1672  0016A4  C002  F05C         	movff	?___llmod+1,printf@val+1
  1673  0016A8  C003  F05D         	movff	?___llmod+2,printf@val+2
  1674  0016AC  C004  F05E         	movff	?___llmod+3,printf@val+3
  1675  0016B0  D000               	goto	l2475
  1676  0016B2                     l2475:
  1677  0016B2  0668               	decf	printf@c,f,c
  1678  0016B4  2868               	incf	printf@c,w,c
  1679  0016B6  B4D8               	btfsc	status,2,c
  1680  0016B8  D009               	goto	l2481
  1681  0016BA  D790               	goto	l2469
  1682                           
  1683                           ;doprnt.c: 1233: }
  1684                           ;doprnt.c: 1235: while(prec) {
  1685  0016BC  D007               	goto	l2481
  1686  0016BE                     l2477:
  1687                           
  1688                           ;doprnt.c: 1236: (putch('0') );
  1689  0016BE  0E30               	movlw	48
  1690  0016C0  EC39  F015         	call	_putch
  1691                           
  1692                           ;doprnt.c: 1237: prec--;
  1693  0016C4  0659               	decf	printf@prec,f,c
  1694  0016C6  A0D8               	btfss	status,0,c
  1695  0016C8  065A               	decf	printf@prec+1,f,c
  1696  0016CA  D000               	goto	l2481
  1697  0016CC                     l2481:
  1698  0016CC  5059               	movf	printf@prec,w,c
  1699  0016CE  105A               	iorwf	printf@prec+1,w,c
  1700  0016D0  B4D8               	btfsc	status,2,c
  1701  0016D2  D010               	goto	l2487
  1702  0016D4  D7F4               	goto	l2477
  1703                           
  1704                           ;doprnt.c: 1238: }
  1705                           ;doprnt.c: 1245: continue;
  1706  0016D6  D00E               	goto	l2487
  1707  0016D8                     l2483:
  1708                           
  1709                           ;doprnt.c: 1246: }
  1710                           ;doprnt.c: 1422: {
  1711                           ;doprnt.c: 1438: if(flag & 0x03)
  1712  0016D8  0E03               	movlw	3
  1713  0016DA  1457               	andwf	printf@flag,w,c
  1714  0016DC  6E4C               	movwf	??_printf& (0+255),c
  1715  0016DE  0E00               	movlw	0
  1716  0016E0  1458               	andwf	printf@flag+1,w,c
  1717  0016E2  6E4D               	movwf	(??_printf+1)& (0+255),c
  1718  0016E4  504C               	movf	??_printf,w,c
  1719  0016E6  104D               	iorwf	??_printf+1,w,c
  1720  0016E8  B4D8               	btfsc	status,2,c
  1721  0016EA  D004               	goto	l2487
  1722                           
  1723                           ;doprnt.c: 1439: (putch('-') );
  1724  0016EC  0E2D               	movlw	45
  1725  0016EE  EC39  F015         	call	_putch
  1726  0016F2  D000               	goto	l2487
  1727  0016F4                     l2487:
  1728  0016F4  C047  FFF6         	movff	printf@f,tblptrl
  1729  0016F8  C048  FFF7         	movff	printf@f+1,tblptrh
  1730  0016FC  4A47               	infsnz	printf@f,f,c
  1731  0016FE  2A48               	incf	printf@f+1,f,c
  1732  001700                     	if	0	;tblptru may be non-zero
  1733  001700                     	endif
  1734  001700                     	if	0	;tblptru may be non-zero
  1735  001700                     	endif
  1736  001700  0008               	tblrd		*
  1737  001702  CFF5 F068          	movff	tablat,printf@c
  1738  001706  5068               	movf	printf@c,w,c
  1739  001708  B4D8               	btfsc	status,2,c
  1740  00170A  D002               	goto	l132
  1741  00170C  D4F4               	goto	l2339
  1742  00170E  D000               	goto	l132
  1743  001710                     l132:
  1744  001710  0012               	return		;funcret
  1745  001712                     __end_of_printf:
  1746                           	opt stack 0
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           prodh	equ	0xFF4
  1752                           prodl	equ	0xFF3
  1753                           wreg	equ	0xFE8
  1754                           postinc2	equ	0xFDE
  1755                           postdec2	equ	0xFDD
  1756                           fsr2h	equ	0xFDA
  1757                           fsr2l	equ	0xFD9
  1758                           status	equ	0xFD8
  1759                           
  1760 ;; *************** function _scale *****************
  1761 ;; Defined at:
  1762 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  scl             1    wreg     char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  scl             1   48[COMRAM] char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  3   42[COMRAM] char 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1776 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;Total ram usage:        7 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    2
  1783 ;; This function calls:
  1784 ;;		___awdiv
  1785 ;;		___awmod
  1786 ;;		___ftmul
  1787 ;;		___wmul
  1788 ;; This function is called by:
  1789 ;;		_printf
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text2
  1794  001712                     __ptext2:
  1795                           	opt stack 0
  1796  001712                     _scale:
  1797                           	opt stack 27
  1798                           
  1799                           ;incstack = 0
  1800                           ;scale@scl stored from wreg
  1801  001712  6E31               	movwf	scale@scl,c
  1802                           
  1803                           ;doprnt.c: 428: if(scl < 0) {
  1804  001714  AE31               	btfss	scale@scl,7,c
  1805  001716  D0EF               	goto	l2007
  1806                           
  1807                           ;doprnt.c: 429: scl = -scl;
  1808  001718  6C31               	negf	scale@scl,c
  1809                           
  1810                           ;doprnt.c: 430: if(scl>=110)
  1811  00171A  5031               	movf	scale@scl,w,c
  1812  00171C  0A80               	xorlw	128
  1813  00171E  0F12               	addlw	-238
  1814  001720  A0D8               	btfss	status,0,c
  1815  001722  D08D               	goto	l1997
  1816                           
  1817                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  1818  001724  0E00               	movlw	0
  1819  001726  6E12               	movwf	___wmul@multiplicand+1,c
  1820  001728  0E03               	movlw	3
  1821  00172A  6E11               	movwf	___wmul@multiplicand,c
  1822  00172C  0E00               	movlw	0
  1823  00172E  6E0A               	movwf	___awdiv@divisor+1,c
  1824  001730  0E0A               	movlw	10
  1825  001732  6E09               	movwf	___awdiv@divisor,c
  1826  001734  0E00               	movlw	0
  1827  001736  6E04               	movwf	___awmod@divisor+1,c
  1828  001738  0E64               	movlw	100
  1829  00173A  6E03               	movwf	___awmod@divisor,c
  1830  00173C  5031               	movf	scale@scl,w,c
  1831  00173E  6E01               	movwf	___awmod@dividend,c
  1832  001740  6A02               	clrf	___awmod@dividend+1,c
  1833  001742  BE01               	btfsc	___awmod@dividend,7,c
  1834  001744  0602               	decf	___awmod@dividend+1,f,c
  1835  001746  EC9A  F013         	call	___awmod	;wreg free
  1836  00174A  C001  F007         	movff	?___awmod,___awdiv@dividend
  1837  00174E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  1838  001752  ECBE  F012         	call	___awdiv	;wreg free
  1839  001756  0E09               	movlw	9
  1840  001758  2407               	addwf	?___awdiv,w,c
  1841  00175A  6E0F               	movwf	___wmul@multiplier,c
  1842  00175C  0E00               	movlw	0
  1843  00175E  2008               	addwfc	?___awdiv+1,w,c
  1844  001760  6E10               	movwf	___wmul@multiplier+1,c
  1845  001762  ECF6  F014         	call	___wmul	;wreg free
  1846  001766  0E29               	movlw	low __npowers_
  1847  001768  240F               	addwf	?___wmul,w,c
  1848  00176A  6EF6               	movwf	tblptrl,c
  1849  00176C  0E10               	movlw	high __npowers_
  1850  00176E  2010               	addwfc	?___wmul+1,w,c
  1851  001770  6EF7               	movwf	tblptrh,c
  1852  001772                     	if	0	;There are less than 3 active tblptr bytes
  1853  001772                     	endif
  1854  001772  0009               	tblrd		*+
  1855  001774  CFF5 F01F          	movff	tablat,___ftmul@f2
  1856  001778  0009               	tblrd		*+
  1857  00177A  CFF5 F020          	movff	tablat,___ftmul@f2+1
  1858  00177E  000A               	tblrd		*-
  1859  001780  CFF5 F021          	movff	tablat,___ftmul@f2+2
  1860  001784  0E00               	movlw	0
  1861  001786  6E0A               	movwf	___awdiv@divisor+1,c
  1862  001788  0E64               	movlw	100
  1863  00178A  6E09               	movwf	___awdiv@divisor,c
  1864  00178C  5031               	movf	scale@scl,w,c
  1865  00178E  6E07               	movwf	___awdiv@dividend,c
  1866  001790  6A08               	clrf	___awdiv@dividend+1,c
  1867  001792  BE07               	btfsc	___awdiv@dividend,7,c
  1868  001794  0608               	decf	___awdiv@dividend+1,f,c
  1869  001796  ECBE  F012         	call	___awdiv	;wreg free
  1870  00179A  0E12               	movlw	18
  1871  00179C  2407               	addwf	?___awdiv,w,c
  1872  00179E  6E0F               	movwf	___wmul@multiplier,c
  1873  0017A0  0E00               	movlw	0
  1874  0017A2  2008               	addwfc	?___awdiv+1,w,c
  1875  0017A4  6E10               	movwf	___wmul@multiplier+1,c
  1876  0017A6  0E00               	movlw	0
  1877  0017A8  6E12               	movwf	___wmul@multiplicand+1,c
  1878  0017AA  0E03               	movlw	3
  1879  0017AC  6E11               	movwf	___wmul@multiplicand,c
  1880  0017AE  ECF6  F014         	call	___wmul	;wreg free
  1881  0017B2  0E29               	movlw	low __npowers_
  1882  0017B4  240F               	addwf	?___wmul,w,c
  1883  0017B6  6EF6               	movwf	tblptrl,c
  1884  0017B8  0E10               	movlw	high __npowers_
  1885  0017BA  2010               	addwfc	?___wmul+1,w,c
  1886  0017BC  6EF7               	movwf	tblptrh,c
  1887  0017BE                     	if	0	;There are less than 3 active tblptr bytes
  1888  0017BE                     	endif
  1889  0017BE  0009               	tblrd		*+
  1890  0017C0  CFF5 F01C          	movff	tablat,___ftmul@f1
  1891  0017C4  0009               	tblrd		*+
  1892  0017C6  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  1893  0017CA  000A               	tblrd		*-
  1894  0017CC  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  1895  0017D0  EC8A  F010         	call	___ftmul	;wreg free
  1896  0017D4  C01C  F02E         	movff	?___ftmul,_scale$1008
  1897  0017D8  C01D  F02F         	movff	?___ftmul+1,_scale$1008+1
  1898  0017DC  C01E  F030         	movff	?___ftmul+2,_scale$1008+2
  1899                           
  1900                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  1901  0017E0  C02E  F01C         	movff	_scale$1008,___ftmul@f1
  1902  0017E4  C02F  F01D         	movff	_scale$1008+1,___ftmul@f1+1
  1903  0017E8  C030  F01E         	movff	_scale$1008+2,___ftmul@f1+2
  1904  0017EC  0E00               	movlw	0
  1905  0017EE  6E12               	movwf	___wmul@multiplicand+1,c
  1906  0017F0  0E03               	movlw	3
  1907  0017F2  6E11               	movwf	___wmul@multiplicand,c
  1908  0017F4  0E00               	movlw	0
  1909  0017F6  6E04               	movwf	___awmod@divisor+1,c
  1910  0017F8  0E0A               	movlw	10
  1911  0017FA  6E03               	movwf	___awmod@divisor,c
  1912  0017FC  5031               	movf	scale@scl,w,c
  1913  0017FE  6E01               	movwf	___awmod@dividend,c
  1914  001800  6A02               	clrf	___awmod@dividend+1,c
  1915  001802  BE01               	btfsc	___awmod@dividend,7,c
  1916  001804  0602               	decf	___awmod@dividend+1,f,c
  1917  001806  EC9A  F013         	call	___awmod	;wreg free
  1918  00180A  C001  F00F         	movff	?___awmod,___wmul@multiplier
  1919  00180E  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  1920  001812  ECF6  F014         	call	___wmul	;wreg free
  1921  001816  0E29               	movlw	low __npowers_
  1922  001818  240F               	addwf	?___wmul,w,c
  1923  00181A  6EF6               	movwf	tblptrl,c
  1924  00181C  0E10               	movlw	high __npowers_
  1925  00181E  2010               	addwfc	?___wmul+1,w,c
  1926  001820  6EF7               	movwf	tblptrh,c
  1927  001822                     	if	0	;There are less than 3 active tblptr bytes
  1928  001822                     	endif
  1929  001822  0009               	tblrd		*+
  1930  001824  CFF5 F01F          	movff	tablat,___ftmul@f2
  1931  001828  0009               	tblrd		*+
  1932  00182A  CFF5 F020          	movff	tablat,___ftmul@f2+1
  1933  00182E  000A               	tblrd		*-
  1934  001830  CFF5 F021          	movff	tablat,___ftmul@f2+2
  1935  001834  EC8A  F010         	call	___ftmul	;wreg free
  1936  001838  D141               	goto	L5
  1937  00183A  D15A               	goto	l76
  1938  00183C  D054               	goto	l2003
  1939  00183E                     l1997:
  1940                           
  1941                           ;doprnt.c: 432: else if(scl > 10)
  1942  00183E  5031               	movf	scale@scl,w,c
  1943  001840  0A80               	xorlw	128
  1944  001842  0F75               	addlw	-139
  1945  001844  A0D8               	btfss	status,0,c
  1946  001846  D04F               	goto	l2003
  1947                           
  1948                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  1949  001848  0E00               	movlw	0
  1950  00184A  6E0A               	movwf	___awdiv@divisor+1,c
  1951  00184C  0E0A               	movlw	10
  1952  00184E  6E09               	movwf	___awdiv@divisor,c
  1953  001850  5031               	movf	scale@scl,w,c
  1954  001852  6E07               	movwf	___awdiv@dividend,c
  1955  001854  6A08               	clrf	___awdiv@dividend+1,c
  1956  001856  BE07               	btfsc	___awdiv@dividend,7,c
  1957  001858  0608               	decf	___awdiv@dividend+1,f,c
  1958  00185A  ECBE  F012         	call	___awdiv	;wreg free
  1959  00185E  0E09               	movlw	9
  1960  001860  2407               	addwf	?___awdiv,w,c
  1961  001862  6E0F               	movwf	___wmul@multiplier,c
  1962  001864  0E00               	movlw	0
  1963  001866  2008               	addwfc	?___awdiv+1,w,c
  1964  001868  6E10               	movwf	___wmul@multiplier+1,c
  1965  00186A  0E00               	movlw	0
  1966  00186C  6E12               	movwf	___wmul@multiplicand+1,c
  1967  00186E  0E03               	movlw	3
  1968  001870  6E11               	movwf	___wmul@multiplicand,c
  1969  001872  ECF6  F014         	call	___wmul	;wreg free
  1970  001876  0E29               	movlw	low __npowers_
  1971  001878  240F               	addwf	?___wmul,w,c
  1972  00187A  6EF6               	movwf	tblptrl,c
  1973  00187C  0E10               	movlw	high __npowers_
  1974  00187E  2010               	addwfc	?___wmul+1,w,c
  1975  001880  6EF7               	movwf	tblptrh,c
  1976  001882                     	if	0	;There are less than 3 active tblptr bytes
  1977  001882                     	endif
  1978  001882  0009               	tblrd		*+
  1979  001884  CFF5 F01C          	movff	tablat,___ftmul@f1
  1980  001888  0009               	tblrd		*+
  1981  00188A  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  1982  00188E  000A               	tblrd		*-
  1983  001890  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  1984  001894  0E00               	movlw	0
  1985  001896  6E12               	movwf	___wmul@multiplicand+1,c
  1986  001898  0E03               	movlw	3
  1987  00189A  6E11               	movwf	___wmul@multiplicand,c
  1988  00189C  0E00               	movlw	0
  1989  00189E  6E04               	movwf	___awmod@divisor+1,c
  1990  0018A0  0E0A               	movlw	10
  1991  0018A2  6E03               	movwf	___awmod@divisor,c
  1992  0018A4  5031               	movf	scale@scl,w,c
  1993  0018A6  6E01               	movwf	___awmod@dividend,c
  1994  0018A8  6A02               	clrf	___awmod@dividend+1,c
  1995  0018AA  BE01               	btfsc	___awmod@dividend,7,c
  1996  0018AC  0602               	decf	___awmod@dividend+1,f,c
  1997  0018AE  EC9A  F013         	call	___awmod	;wreg free
  1998  0018B2  C001  F00F         	movff	?___awmod,___wmul@multiplier
  1999  0018B6  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2000  0018BA  ECF6  F014         	call	___wmul	;wreg free
  2001  0018BE  0E29               	movlw	low __npowers_
  2002  0018C0  240F               	addwf	?___wmul,w,c
  2003  0018C2  6EF6               	movwf	tblptrl,c
  2004  0018C4  0E10               	movlw	high __npowers_
  2005  0018C6  2010               	addwfc	?___wmul+1,w,c
  2006  0018C8  6EF7               	movwf	tblptrh,c
  2007  0018CA                     	if	0	;There are less than 3 active tblptr bytes
  2008  0018CA                     	endif
  2009  0018CA  0009               	tblrd		*+
  2010  0018CC  CFF5 F01F          	movff	tablat,___ftmul@f2
  2011  0018D0  0009               	tblrd		*+
  2012  0018D2  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2013  0018D6  000A               	tblrd		*-
  2014  0018D8  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2015  0018DC  EC8A  F010         	call	___ftmul	;wreg free
  2016  0018E0  D0ED               	goto	L5
  2017  0018E2  D106               	goto	l76
  2018  0018E4  D000               	goto	l2003
  2019  0018E6                     l2003:
  2020                           
  2021                           ;doprnt.c: 434: return _npowers_[scl];
  2022  0018E6  5031               	movf	scale@scl,w,c
  2023  0018E8  0D03               	mullw	3
  2024  0018EA  0E29               	movlw	low __npowers_
  2025  0018EC  24F3               	addwf	prodl,w,c
  2026  0018EE  6EF6               	movwf	tblptrl,c
  2027  0018F0  0E10               	movlw	high __npowers_
  2028  0018F2  D0F2               	goto	L4
  2029  0018F4  D0FD               	goto	l76
  2030  0018F6                     l2007:
  2031                           
  2032                           ;doprnt.c: 435: }
  2033                           ;doprnt.c: 436: if(scl>=110)
  2034  0018F6  5031               	movf	scale@scl,w,c
  2035  0018F8  0A80               	xorlw	128
  2036  0018FA  0F12               	addlw	-238
  2037  0018FC  A0D8               	btfss	status,0,c
  2038  0018FE  D08D               	goto	l2015
  2039                           
  2040                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2041  001900  0E00               	movlw	0
  2042  001902  6E12               	movwf	___wmul@multiplicand+1,c
  2043  001904  0E03               	movlw	3
  2044  001906  6E11               	movwf	___wmul@multiplicand,c
  2045  001908  0E00               	movlw	0
  2046  00190A  6E0A               	movwf	___awdiv@divisor+1,c
  2047  00190C  0E0A               	movlw	10
  2048  00190E  6E09               	movwf	___awdiv@divisor,c
  2049  001910  0E00               	movlw	0
  2050  001912  6E04               	movwf	___awmod@divisor+1,c
  2051  001914  0E64               	movlw	100
  2052  001916  6E03               	movwf	___awmod@divisor,c
  2053  001918  5031               	movf	scale@scl,w,c
  2054  00191A  6E01               	movwf	___awmod@dividend,c
  2055  00191C  6A02               	clrf	___awmod@dividend+1,c
  2056  00191E  BE01               	btfsc	___awmod@dividend,7,c
  2057  001920  0602               	decf	___awmod@dividend+1,f,c
  2058  001922  EC9A  F013         	call	___awmod	;wreg free
  2059  001926  C001  F007         	movff	?___awmod,___awdiv@dividend
  2060  00192A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2061  00192E  ECBE  F012         	call	___awdiv	;wreg free
  2062  001932  0E09               	movlw	9
  2063  001934  2407               	addwf	?___awdiv,w,c
  2064  001936  6E0F               	movwf	___wmul@multiplier,c
  2065  001938  0E00               	movlw	0
  2066  00193A  2008               	addwfc	?___awdiv+1,w,c
  2067  00193C  6E10               	movwf	___wmul@multiplier+1,c
  2068  00193E  ECF6  F014         	call	___wmul	;wreg free
  2069  001942  0E50               	movlw	low __powers_
  2070  001944  240F               	addwf	?___wmul,w,c
  2071  001946  6EF6               	movwf	tblptrl,c
  2072  001948  0E10               	movlw	high __powers_
  2073  00194A  2010               	addwfc	?___wmul+1,w,c
  2074  00194C  6EF7               	movwf	tblptrh,c
  2075  00194E                     	if	0	;There are less than 3 active tblptr bytes
  2076  00194E                     	endif
  2077  00194E  0009               	tblrd		*+
  2078  001950  CFF5 F01F          	movff	tablat,___ftmul@f2
  2079  001954  0009               	tblrd		*+
  2080  001956  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2081  00195A  000A               	tblrd		*-
  2082  00195C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2083  001960  0E00               	movlw	0
  2084  001962  6E0A               	movwf	___awdiv@divisor+1,c
  2085  001964  0E64               	movlw	100
  2086  001966  6E09               	movwf	___awdiv@divisor,c
  2087  001968  5031               	movf	scale@scl,w,c
  2088  00196A  6E07               	movwf	___awdiv@dividend,c
  2089  00196C  6A08               	clrf	___awdiv@dividend+1,c
  2090  00196E  BE07               	btfsc	___awdiv@dividend,7,c
  2091  001970  0608               	decf	___awdiv@dividend+1,f,c
  2092  001972  ECBE  F012         	call	___awdiv	;wreg free
  2093  001976  0E12               	movlw	18
  2094  001978  2407               	addwf	?___awdiv,w,c
  2095  00197A  6E0F               	movwf	___wmul@multiplier,c
  2096  00197C  0E00               	movlw	0
  2097  00197E  2008               	addwfc	?___awdiv+1,w,c
  2098  001980  6E10               	movwf	___wmul@multiplier+1,c
  2099  001982  0E00               	movlw	0
  2100  001984  6E12               	movwf	___wmul@multiplicand+1,c
  2101  001986  0E03               	movlw	3
  2102  001988  6E11               	movwf	___wmul@multiplicand,c
  2103  00198A  ECF6  F014         	call	___wmul	;wreg free
  2104  00198E  0E50               	movlw	low __powers_
  2105  001990  240F               	addwf	?___wmul,w,c
  2106  001992  6EF6               	movwf	tblptrl,c
  2107  001994  0E10               	movlw	high __powers_
  2108  001996  2010               	addwfc	?___wmul+1,w,c
  2109  001998  6EF7               	movwf	tblptrh,c
  2110  00199A                     	if	0	;There are less than 3 active tblptr bytes
  2111  00199A                     	endif
  2112  00199A  0009               	tblrd		*+
  2113  00199C  CFF5 F01C          	movff	tablat,___ftmul@f1
  2114  0019A0  0009               	tblrd		*+
  2115  0019A2  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2116  0019A6  000A               	tblrd		*-
  2117  0019A8  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2118  0019AC  EC8A  F010         	call	___ftmul	;wreg free
  2119  0019B0  C01C  F02E         	movff	?___ftmul,_scale$1008
  2120  0019B4  C01D  F02F         	movff	?___ftmul+1,_scale$1008+1
  2121  0019B8  C01E  F030         	movff	?___ftmul+2,_scale$1008+2
  2122                           
  2123                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2124  0019BC  C02E  F01C         	movff	_scale$1008,___ftmul@f1
  2125  0019C0  C02F  F01D         	movff	_scale$1008+1,___ftmul@f1+1
  2126  0019C4  C030  F01E         	movff	_scale$1008+2,___ftmul@f1+2
  2127  0019C8  0E00               	movlw	0
  2128  0019CA  6E12               	movwf	___wmul@multiplicand+1,c
  2129  0019CC  0E03               	movlw	3
  2130  0019CE  6E11               	movwf	___wmul@multiplicand,c
  2131  0019D0  0E00               	movlw	0
  2132  0019D2  6E04               	movwf	___awmod@divisor+1,c
  2133  0019D4  0E0A               	movlw	10
  2134  0019D6  6E03               	movwf	___awmod@divisor,c
  2135  0019D8  5031               	movf	scale@scl,w,c
  2136  0019DA  6E01               	movwf	___awmod@dividend,c
  2137  0019DC  6A02               	clrf	___awmod@dividend+1,c
  2138  0019DE  BE01               	btfsc	___awmod@dividend,7,c
  2139  0019E0  0602               	decf	___awmod@dividend+1,f,c
  2140  0019E2  EC9A  F013         	call	___awmod	;wreg free
  2141  0019E6  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2142  0019EA  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2143  0019EE  ECF6  F014         	call	___wmul	;wreg free
  2144  0019F2  0E50               	movlw	low __powers_
  2145  0019F4  240F               	addwf	?___wmul,w,c
  2146  0019F6  6EF6               	movwf	tblptrl,c
  2147  0019F8  0E10               	movlw	high __powers_
  2148  0019FA  2010               	addwfc	?___wmul+1,w,c
  2149  0019FC  6EF7               	movwf	tblptrh,c
  2150  0019FE                     	if	0	;There are less than 3 active tblptr bytes
  2151  0019FE                     	endif
  2152  0019FE  0009               	tblrd		*+
  2153  001A00  CFF5 F01F          	movff	tablat,___ftmul@f2
  2154  001A04  0009               	tblrd		*+
  2155  001A06  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2156  001A0A  000A               	tblrd		*-
  2157  001A0C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2158  001A10  EC8A  F010         	call	___ftmul	;wreg free
  2159  001A14  D053               	goto	L5
  2160  001A16  D06C               	goto	l76
  2161  001A18  D059               	goto	l2021
  2162  001A1A                     l2015:
  2163                           
  2164                           ;doprnt.c: 438: else if(scl > 10)
  2165  001A1A  5031               	movf	scale@scl,w,c
  2166  001A1C  0A80               	xorlw	128
  2167  001A1E  0F75               	addlw	-139
  2168  001A20  A0D8               	btfss	status,0,c
  2169  001A22  D054               	goto	l2021
  2170                           
  2171                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2172  001A24  0E00               	movlw	0
  2173  001A26  6E0A               	movwf	___awdiv@divisor+1,c
  2174  001A28  0E0A               	movlw	10
  2175  001A2A  6E09               	movwf	___awdiv@divisor,c
  2176  001A2C  5031               	movf	scale@scl,w,c
  2177  001A2E  6E07               	movwf	___awdiv@dividend,c
  2178  001A30  6A08               	clrf	___awdiv@dividend+1,c
  2179  001A32  BE07               	btfsc	___awdiv@dividend,7,c
  2180  001A34  0608               	decf	___awdiv@dividend+1,f,c
  2181  001A36  ECBE  F012         	call	___awdiv	;wreg free
  2182  001A3A  0E09               	movlw	9
  2183  001A3C  2407               	addwf	?___awdiv,w,c
  2184  001A3E  6E0F               	movwf	___wmul@multiplier,c
  2185  001A40  0E00               	movlw	0
  2186  001A42  2008               	addwfc	?___awdiv+1,w,c
  2187  001A44  6E10               	movwf	___wmul@multiplier+1,c
  2188  001A46  0E00               	movlw	0
  2189  001A48  6E12               	movwf	___wmul@multiplicand+1,c
  2190  001A4A  0E03               	movlw	3
  2191  001A4C  6E11               	movwf	___wmul@multiplicand,c
  2192  001A4E  ECF6  F014         	call	___wmul	;wreg free
  2193  001A52  0E50               	movlw	low __powers_
  2194  001A54  240F               	addwf	?___wmul,w,c
  2195  001A56  6EF6               	movwf	tblptrl,c
  2196  001A58  0E10               	movlw	high __powers_
  2197  001A5A  2010               	addwfc	?___wmul+1,w,c
  2198  001A5C  6EF7               	movwf	tblptrh,c
  2199  001A5E                     	if	0	;There are less than 3 active tblptr bytes
  2200  001A5E                     	endif
  2201  001A5E  0009               	tblrd		*+
  2202  001A60  CFF5 F01C          	movff	tablat,___ftmul@f1
  2203  001A64  0009               	tblrd		*+
  2204  001A66  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2205  001A6A  000A               	tblrd		*-
  2206  001A6C  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2207  001A70  0E00               	movlw	0
  2208  001A72  6E12               	movwf	___wmul@multiplicand+1,c
  2209  001A74  0E03               	movlw	3
  2210  001A76  6E11               	movwf	___wmul@multiplicand,c
  2211  001A78  0E00               	movlw	0
  2212  001A7A  6E04               	movwf	___awmod@divisor+1,c
  2213  001A7C  0E0A               	movlw	10
  2214  001A7E  6E03               	movwf	___awmod@divisor,c
  2215  001A80  5031               	movf	scale@scl,w,c
  2216  001A82  6E01               	movwf	___awmod@dividend,c
  2217  001A84  6A02               	clrf	___awmod@dividend+1,c
  2218  001A86  BE01               	btfsc	___awmod@dividend,7,c
  2219  001A88  0602               	decf	___awmod@dividend+1,f,c
  2220  001A8A  EC9A  F013         	call	___awmod	;wreg free
  2221  001A8E  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2222  001A92  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2223  001A96  ECF6  F014         	call	___wmul	;wreg free
  2224  001A9A  0E50               	movlw	low __powers_
  2225  001A9C  240F               	addwf	?___wmul,w,c
  2226  001A9E  6EF6               	movwf	tblptrl,c
  2227  001AA0  0E10               	movlw	high __powers_
  2228  001AA2  2010               	addwfc	?___wmul+1,w,c
  2229  001AA4  6EF7               	movwf	tblptrh,c
  2230  001AA6                     	if	0	;There are less than 3 active tblptr bytes
  2231  001AA6                     	endif
  2232  001AA6  0009               	tblrd		*+
  2233  001AA8  CFF5 F01F          	movff	tablat,___ftmul@f2
  2234  001AAC  0009               	tblrd		*+
  2235  001AAE  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2236  001AB2  000A               	tblrd		*-
  2237  001AB4  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2238  001AB8  EC8A  F010         	call	___ftmul	;wreg free
  2239  001ABC                     L5:
  2240  001ABC  C01C  F02B         	movff	?___ftmul,?_scale
  2241  001AC0  C01D  F02C         	movff	?___ftmul+1,?_scale+1
  2242  001AC4  C01E  F02D         	movff	?___ftmul+2,?_scale+2
  2243  001AC8  D013               	goto	l76
  2244  001ACA  D000               	goto	l2021
  2245  001ACC                     l2021:
  2246                           
  2247                           ;doprnt.c: 440: return _powers_[scl];
  2248  001ACC  5031               	movf	scale@scl,w,c
  2249  001ACE  0D03               	mullw	3
  2250  001AD0  0E50               	movlw	low __powers_
  2251  001AD2  24F3               	addwf	prodl,w,c
  2252  001AD4  6EF6               	movwf	tblptrl,c
  2253  001AD6  0E10               	movlw	high __powers_
  2254  001AD8                     L4:
  2255  001AD8  20F4               	addwfc	prodh,w,c
  2256  001ADA  6EF7               	movwf	tblptrh,c
  2257  001ADC                     	if	0	;There are less than 3 active tblptr bytes
  2258  001ADC                     	endif
  2259  001ADC  0009               	tblrd		*+
  2260  001ADE  CFF5 F02B          	movff	tablat,?_scale
  2261  001AE2  0009               	tblrd		*+
  2262  001AE4  CFF5 F02C          	movff	tablat,?_scale+1
  2263  001AE8  000A               	tblrd		*-
  2264  001AEA  CFF5 F02D          	movff	tablat,?_scale+2
  2265  001AEE  D000               	goto	l76
  2266  001AF0                     l76:
  2267  001AF0  0012               	return		;funcret
  2268  001AF2                     __end_of_scale:
  2269                           	opt stack 0
  2270                           tblptru	equ	0xFF8
  2271                           tblptrh	equ	0xFF7
  2272                           tblptrl	equ	0xFF6
  2273                           tablat	equ	0xFF5
  2274                           prodh	equ	0xFF4
  2275                           prodl	equ	0xFF3
  2276                           wreg	equ	0xFE8
  2277                           postinc2	equ	0xFDE
  2278                           postdec2	equ	0xFDD
  2279                           fsr2h	equ	0xFDA
  2280                           fsr2l	equ	0xFD9
  2281                           status	equ	0xFD8
  2282                           
  2283 ;; *************** function _putch *****************
  2284 ;; Defined at:
  2285 ;;		line 19 in file "lab1p3.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  c               1    wreg     unsigned char 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  c               1    0[COMRAM] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;		None               void
  2292 ;; Registers used:
  2293 ;;		wreg
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;Total ram usage:        1 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_printf
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text3
  2313  002A72                     __ptext3:
  2314                           	opt stack 0
  2315  002A72                     _putch:
  2316                           	opt stack 29
  2317                           
  2318                           ;incstack = 0
  2319                           ;putch@c stored from wreg
  2320  002A72  6E01               	movwf	putch@c,c
  2321                           
  2322                           ;lab1p3.c: 20: while(!TRMT)
  2323  002A74  D003               	goto	l1955
  2324  002A76                     l1953:
  2325                           
  2326                           ;lab1p3.c: 21: TXREG = c;
  2327  002A76  C001  FFAD         	movff	putch@c,4013	;volatile
  2328  002A7A  D000               	goto	l1955
  2329  002A7C                     l1955:
  2330  002A7C  A2AC               	btfss	4012,1,c	;volatile
  2331  002A7E  D7FB               	goto	l1953
  2332  002A80  0012               	return		;funcret
  2333  002A82                     __end_of_putch:
  2334                           	opt stack 0
  2335                           tblptru	equ	0xFF8
  2336                           tblptrh	equ	0xFF7
  2337                           tblptrl	equ	0xFF6
  2338                           tablat	equ	0xFF5
  2339                           prodh	equ	0xFF4
  2340                           prodl	equ	0xFF3
  2341                           wreg	equ	0xFE8
  2342                           postinc2	equ	0xFDE
  2343                           postdec2	equ	0xFDD
  2344                           fsr2h	equ	0xFDA
  2345                           fsr2l	equ	0xFD9
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function _fround *****************
  2349 ;; Defined at:
  2350 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  prec            1    wreg     unsigned char 
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;  prec            1   51[COMRAM] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  3   42[COMRAM] unsigned char 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2364 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;Total ram usage:       10 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    2
  2371 ;; This function calls:
  2372 ;;		___awdiv
  2373 ;;		___awmod
  2374 ;;		___ftmul
  2375 ;;		___wmul
  2376 ;; This function is called by:
  2377 ;;		_printf
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text4
  2382  001AF2                     __ptext4:
  2383                           	opt stack 0
  2384  001AF2                     _fround:
  2385                           	opt stack 27
  2386                           
  2387                           ;incstack = 0
  2388                           ;fround@prec stored from wreg
  2389  001AF2  6E34               	movwf	fround@prec,c
  2390                           
  2391                           ;doprnt.c: 413: if(prec>=110)
  2392  001AF4  0E6D               	movlw	109
  2393  001AF6  6434               	cpfsgt	fround@prec,c
  2394  001AF8  D09B               	goto	l1975
  2395                           
  2396                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2397  001AFA  0E00               	movlw	0
  2398  001AFC  6E12               	movwf	___wmul@multiplicand+1,c
  2399  001AFE  0E03               	movlw	3
  2400  001B00  6E11               	movwf	___wmul@multiplicand,c
  2401  001B02  0E00               	movlw	0
  2402  001B04  6E0A               	movwf	___awdiv@divisor+1,c
  2403  001B06  0E0A               	movlw	10
  2404  001B08  6E09               	movwf	___awdiv@divisor,c
  2405  001B0A  0E00               	movlw	0
  2406  001B0C  6E04               	movwf	___awmod@divisor+1,c
  2407  001B0E  0E64               	movlw	100
  2408  001B10  6E03               	movwf	___awmod@divisor,c
  2409  001B12  C034  F001         	movff	fround@prec,___awmod@dividend
  2410  001B16  6A02               	clrf	___awmod@dividend+1,c
  2411  001B18  EC9A  F013         	call	___awmod	;wreg free
  2412  001B1C  C001  F007         	movff	?___awmod,___awdiv@dividend
  2413  001B20  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2414  001B24  ECBE  F012         	call	___awdiv	;wreg free
  2415  001B28  0E09               	movlw	9
  2416  001B2A  2407               	addwf	?___awdiv,w,c
  2417  001B2C  6E0F               	movwf	___wmul@multiplier,c
  2418  001B2E  0E00               	movlw	0
  2419  001B30  2008               	addwfc	?___awdiv+1,w,c
  2420  001B32  6E10               	movwf	___wmul@multiplier+1,c
  2421  001B34  ECF6  F014         	call	___wmul	;wreg free
  2422  001B38  0E29               	movlw	low __npowers_
  2423  001B3A  240F               	addwf	?___wmul,w,c
  2424  001B3C  6EF6               	movwf	tblptrl,c
  2425  001B3E  0E10               	movlw	high __npowers_
  2426  001B40  2010               	addwfc	?___wmul+1,w,c
  2427  001B42  6EF7               	movwf	tblptrh,c
  2428  001B44                     	if	0	;There are less than 3 active tblptr bytes
  2429  001B44                     	endif
  2430  001B44  0009               	tblrd		*+
  2431  001B46  CFF5 F01F          	movff	tablat,___ftmul@f2
  2432  001B4A  0009               	tblrd		*+
  2433  001B4C  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2434  001B50  000A               	tblrd		*-
  2435  001B52  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2436  001B56  0E00               	movlw	0
  2437  001B58  6E0A               	movwf	___awdiv@divisor+1,c
  2438  001B5A  0E64               	movlw	100
  2439  001B5C  6E09               	movwf	___awdiv@divisor,c
  2440  001B5E  C034  F007         	movff	fround@prec,___awdiv@dividend
  2441  001B62  6A08               	clrf	___awdiv@dividend+1,c
  2442  001B64  ECBE  F012         	call	___awdiv	;wreg free
  2443  001B68  0E12               	movlw	18
  2444  001B6A  2407               	addwf	?___awdiv,w,c
  2445  001B6C  6E0F               	movwf	___wmul@multiplier,c
  2446  001B6E  0E00               	movlw	0
  2447  001B70  2008               	addwfc	?___awdiv+1,w,c
  2448  001B72  6E10               	movwf	___wmul@multiplier+1,c
  2449  001B74  0E00               	movlw	0
  2450  001B76  6E12               	movwf	___wmul@multiplicand+1,c
  2451  001B78  0E03               	movlw	3
  2452  001B7A  6E11               	movwf	___wmul@multiplicand,c
  2453  001B7C  ECF6  F014         	call	___wmul	;wreg free
  2454  001B80  0E29               	movlw	low __npowers_
  2455  001B82  240F               	addwf	?___wmul,w,c
  2456  001B84  6EF6               	movwf	tblptrl,c
  2457  001B86  0E10               	movlw	high __npowers_
  2458  001B88  2010               	addwfc	?___wmul+1,w,c
  2459  001B8A  6EF7               	movwf	tblptrh,c
  2460  001B8C                     	if	0	;There are less than 3 active tblptr bytes
  2461  001B8C                     	endif
  2462  001B8C  0009               	tblrd		*+
  2463  001B8E  CFF5 F01C          	movff	tablat,___ftmul@f1
  2464  001B92  0009               	tblrd		*+
  2465  001B94  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2466  001B98  000A               	tblrd		*-
  2467  001B9A  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2468  001B9E  EC8A  F010         	call	___ftmul	;wreg free
  2469  001BA2  C01C  F031         	movff	?___ftmul,_fround$1006
  2470  001BA6  C01D  F032         	movff	?___ftmul+1,_fround$1006+1
  2471  001BAA  C01E  F033         	movff	?___ftmul+2,_fround$1006+2
  2472                           
  2473                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2474  001BAE  0E00               	movlw	0
  2475  001BB0  6E12               	movwf	___wmul@multiplicand+1,c
  2476  001BB2  0E03               	movlw	3
  2477  001BB4  6E11               	movwf	___wmul@multiplicand,c
  2478  001BB6  0E00               	movlw	0
  2479  001BB8  6E04               	movwf	___awmod@divisor+1,c
  2480  001BBA  0E0A               	movlw	10
  2481  001BBC  6E03               	movwf	___awmod@divisor,c
  2482  001BBE  C034  F001         	movff	fround@prec,___awmod@dividend
  2483  001BC2  6A02               	clrf	___awmod@dividend+1,c
  2484  001BC4  EC9A  F013         	call	___awmod	;wreg free
  2485  001BC8  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2486  001BCC  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2487  001BD0  ECF6  F014         	call	___wmul	;wreg free
  2488  001BD4  0E29               	movlw	low __npowers_
  2489  001BD6  240F               	addwf	?___wmul,w,c
  2490  001BD8  6EF6               	movwf	tblptrl,c
  2491  001BDA  0E10               	movlw	high __npowers_
  2492  001BDC  2010               	addwfc	?___wmul+1,w,c
  2493  001BDE  6EF7               	movwf	tblptrh,c
  2494  001BE0                     	if	0	;There are less than 3 active tblptr bytes
  2495  001BE0                     	endif
  2496  001BE0  0009               	tblrd		*+
  2497  001BE2  CFF5 F01F          	movff	tablat,___ftmul@f2
  2498  001BE6  0009               	tblrd		*+
  2499  001BE8  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2500  001BEC  000A               	tblrd		*-
  2501  001BEE  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2502  001BF2  C031  F01C         	movff	_fround$1006,___ftmul@f1
  2503  001BF6  C032  F01D         	movff	_fround$1006+1,___ftmul@f1+1
  2504  001BFA  C033  F01E         	movff	_fround$1006+2,___ftmul@f1+2
  2505  001BFE  EC8A  F010         	call	___ftmul	;wreg free
  2506  001C02  C01C  F02E         	movff	?___ftmul,_fround$1007
  2507  001C06  C01D  F02F         	movff	?___ftmul+1,_fround$1007+1
  2508  001C0A  C01E  F030         	movff	?___ftmul+2,_fround$1007+2
  2509                           
  2510                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2511  001C0E  C02E  F01C         	movff	_fround$1007,___ftmul@f1
  2512  001C12  C02F  F01D         	movff	_fround$1007+1,___ftmul@f1+1
  2513  001C16  C030  F01E         	movff	_fround$1007+2,___ftmul@f1+2
  2514  001C1A  0E00               	movlw	0
  2515  001C1C  6E1F               	movwf	___ftmul@f2,c
  2516  001C1E  0E00               	movlw	0
  2517  001C20  6E20               	movwf	___ftmul@f2+1,c
  2518  001C22  0E3F               	movlw	63
  2519  001C24  6E21               	movwf	___ftmul@f2+2,c
  2520  001C26  EC8A  F010         	call	___ftmul	;wreg free
  2521  001C2A  D07D               	goto	L7
  2522  001C2C  D083               	goto	l69
  2523  001C2E  D062               	goto	l1983
  2524  001C30                     l1975:
  2525                           
  2526                           ;doprnt.c: 415: else if(prec > 10)
  2527  001C30  0E0A               	movlw	10
  2528  001C32  6434               	cpfsgt	fround@prec,c
  2529  001C34  D05F               	goto	l1983
  2530                           
  2531                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2532  001C36  0E00               	movlw	0
  2533  001C38  6E12               	movwf	___wmul@multiplicand+1,c
  2534  001C3A  0E03               	movlw	3
  2535  001C3C  6E11               	movwf	___wmul@multiplicand,c
  2536  001C3E  0E00               	movlw	0
  2537  001C40  6E04               	movwf	___awmod@divisor+1,c
  2538  001C42  0E0A               	movlw	10
  2539  001C44  6E03               	movwf	___awmod@divisor,c
  2540  001C46  C034  F001         	movff	fround@prec,___awmod@dividend
  2541  001C4A  6A02               	clrf	___awmod@dividend+1,c
  2542  001C4C  EC9A  F013         	call	___awmod	;wreg free
  2543  001C50  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2544  001C54  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2545  001C58  ECF6  F014         	call	___wmul	;wreg free
  2546  001C5C  0E29               	movlw	low __npowers_
  2547  001C5E  240F               	addwf	?___wmul,w,c
  2548  001C60  6EF6               	movwf	tblptrl,c
  2549  001C62  0E10               	movlw	high __npowers_
  2550  001C64  2010               	addwfc	?___wmul+1,w,c
  2551  001C66  6EF7               	movwf	tblptrh,c
  2552  001C68                     	if	0	;There are less than 3 active tblptr bytes
  2553  001C68                     	endif
  2554  001C68  0009               	tblrd		*+
  2555  001C6A  CFF5 F01F          	movff	tablat,___ftmul@f2
  2556  001C6E  0009               	tblrd		*+
  2557  001C70  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2558  001C74  000A               	tblrd		*-
  2559  001C76  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2560  001C7A  0E00               	movlw	0
  2561  001C7C  6E0A               	movwf	___awdiv@divisor+1,c
  2562  001C7E  0E0A               	movlw	10
  2563  001C80  6E09               	movwf	___awdiv@divisor,c
  2564  001C82  C034  F007         	movff	fround@prec,___awdiv@dividend
  2565  001C86  6A08               	clrf	___awdiv@dividend+1,c
  2566  001C88  ECBE  F012         	call	___awdiv	;wreg free
  2567  001C8C  0E09               	movlw	9
  2568  001C8E  2407               	addwf	?___awdiv,w,c
  2569  001C90  6E0F               	movwf	___wmul@multiplier,c
  2570  001C92  0E00               	movlw	0
  2571  001C94  2008               	addwfc	?___awdiv+1,w,c
  2572  001C96  6E10               	movwf	___wmul@multiplier+1,c
  2573  001C98  0E00               	movlw	0
  2574  001C9A  6E12               	movwf	___wmul@multiplicand+1,c
  2575  001C9C  0E03               	movlw	3
  2576  001C9E  6E11               	movwf	___wmul@multiplicand,c
  2577  001CA0  ECF6  F014         	call	___wmul	;wreg free
  2578  001CA4  0E29               	movlw	low __npowers_
  2579  001CA6  240F               	addwf	?___wmul,w,c
  2580  001CA8  6EF6               	movwf	tblptrl,c
  2581  001CAA  0E10               	movlw	high __npowers_
  2582  001CAC  2010               	addwfc	?___wmul+1,w,c
  2583  001CAE  6EF7               	movwf	tblptrh,c
  2584  001CB0                     	if	0	;There are less than 3 active tblptr bytes
  2585  001CB0                     	endif
  2586  001CB0  0009               	tblrd		*+
  2587  001CB2  CFF5 F01C          	movff	tablat,___ftmul@f1
  2588  001CB6  0009               	tblrd		*+
  2589  001CB8  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2590  001CBC  000A               	tblrd		*-
  2591  001CBE  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2592  001CC2  EC8A  F010         	call	___ftmul	;wreg free
  2593  001CC6  C01C  F031         	movff	?___ftmul,_fround$1006
  2594  001CCA  C01D  F032         	movff	?___ftmul+1,_fround$1006+1
  2595  001CCE  C01E  F033         	movff	?___ftmul+2,_fround$1006+2
  2596                           
  2597                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2598  001CD2  C031  F01C         	movff	_fround$1006,___ftmul@f1
  2599  001CD6  C032  F01D         	movff	_fround$1006+1,___ftmul@f1+1
  2600  001CDA  C033  F01E         	movff	_fround$1006+2,___ftmul@f1+2
  2601  001CDE  0E00               	movlw	0
  2602  001CE0  6E1F               	movwf	___ftmul@f2,c
  2603  001CE2  0E00               	movlw	0
  2604  001CE4  6E20               	movwf	___ftmul@f2+1,c
  2605  001CE6  0E3F               	movlw	63
  2606  001CE8  6E21               	movwf	___ftmul@f2+2,c
  2607  001CEA  EC8A  F010         	call	___ftmul	;wreg free
  2608  001CEE  D01B               	goto	L7
  2609  001CF0  D021               	goto	l69
  2610  001CF2  D000               	goto	l1983
  2611  001CF4                     l1983:
  2612                           
  2613                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  2614  001CF4  5034               	movf	fround@prec,w,c
  2615  001CF6  0D03               	mullw	3
  2616  001CF8  0E29               	movlw	low __npowers_
  2617  001CFA  24F3               	addwf	prodl,w,c
  2618  001CFC  6EF6               	movwf	tblptrl,c
  2619  001CFE  0E10               	movlw	high __npowers_
  2620  001D00  20F4               	addwfc	prodh,w,c
  2621  001D02  6EF7               	movwf	tblptrh,c
  2622  001D04                     	if	0	;There are less than 3 active tblptr bytes
  2623  001D04                     	endif
  2624  001D04  0009               	tblrd		*+
  2625  001D06  CFF5 F01C          	movff	tablat,___ftmul@f1
  2626  001D0A  0009               	tblrd		*+
  2627  001D0C  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2628  001D10  000A               	tblrd		*-
  2629  001D12  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2630  001D16  0E00               	movlw	0
  2631  001D18  6E1F               	movwf	___ftmul@f2,c
  2632  001D1A  0E00               	movlw	0
  2633  001D1C  6E20               	movwf	___ftmul@f2+1,c
  2634  001D1E  0E3F               	movlw	63
  2635  001D20  6E21               	movwf	___ftmul@f2+2,c
  2636  001D22  EC8A  F010         	call	___ftmul	;wreg free
  2637  001D26                     L7:
  2638  001D26  C01C  F02B         	movff	?___ftmul,?_fround
  2639  001D2A  C01D  F02C         	movff	?___ftmul+1,?_fround+1
  2640  001D2E  C01E  F02D         	movff	?___ftmul+2,?_fround+2
  2641  001D32  D000               	goto	l69
  2642  001D34                     l69:
  2643  001D34  0012               	return		;funcret
  2644  001D36                     __end_of_fround:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           prodh	equ	0xFF4
  2651                           prodl	equ	0xFF3
  2652                           wreg	equ	0xFE8
  2653                           postinc2	equ	0xFDE
  2654                           postdec2	equ	0xFDD
  2655                           fsr2h	equ	0xFDA
  2656                           fsr2l	equ	0xFD9
  2657                           status	equ	0xFD8
  2658                           
  2659 ;; *************** function ___wmul *****************
  2660 ;; Defined at:
  2661 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  multiplier      2   14[COMRAM] unsigned int 
  2664 ;;  multiplicand    2   16[COMRAM] unsigned int 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  product         2   18[COMRAM] unsigned int 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  2   14[COMRAM] unsigned int 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0, prodl, prodh
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;Total ram usage:        6 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_fround
  2686 ;;		_scale
  2687 ;;		_printf
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text5
  2692  0029EC                     __ptext5:
  2693                           	opt stack 0
  2694  0029EC                     ___wmul:
  2695                           	opt stack 28
  2696                           
  2697                           ;incstack = 0
  2698  0029EC  500F               	movf	___wmul@multiplier,w,c
  2699  0029EE  0211               	mulwf	___wmul@multiplicand,c
  2700  0029F0  CFF3 F013          	movff	prodl,___wmul@product
  2701  0029F4  CFF4 F014          	movff	prodh,___wmul@product+1
  2702  0029F8  500F               	movf	___wmul@multiplier,w,c
  2703  0029FA  0212               	mulwf	___wmul@multiplicand+1,c
  2704  0029FC  50F3               	movf	prodl,w,c
  2705  0029FE  2614               	addwf	___wmul@product+1,f,c
  2706  002A00  5010               	movf	___wmul@multiplier+1,w,c
  2707  002A02  0211               	mulwf	___wmul@multiplicand,c
  2708  002A04  50F3               	movf	prodl,w,c
  2709  002A06  2614               	addwf	___wmul@product+1,f,c
  2710  002A08  C013  F00F         	movff	___wmul@product,?___wmul
  2711  002A0C  C014  F010         	movff	___wmul@product+1,?___wmul+1
  2712  002A10  D000               	goto	l168
  2713  002A12                     l168:
  2714  002A12  0012               	return		;funcret
  2715  002A14                     __end_of___wmul:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           prodh	equ	0xFF4
  2722                           prodl	equ	0xFF3
  2723                           wreg	equ	0xFE8
  2724                           postinc2	equ	0xFDE
  2725                           postdec2	equ	0xFDD
  2726                           fsr2h	equ	0xFDA
  2727                           fsr2l	equ	0xFD9
  2728                           status	equ	0xFD8
  2729                           
  2730 ;; *************** function ___awmod *****************
  2731 ;; Defined at:
  2732 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  dividend        2    0[COMRAM] int 
  2735 ;;  divisor         2    2[COMRAM] int 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  sign            1    5[COMRAM] unsigned char 
  2738 ;;  counter         1    4[COMRAM] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  2    0[COMRAM] int 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;Total ram usage:        6 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_fround
  2758 ;;		_scale
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text6
  2763  002734                     __ptext6:
  2764                           	opt stack 0
  2765  002734                     ___awmod:
  2766                           	opt stack 28
  2767                           
  2768                           ;incstack = 0
  2769  002734  0E00               	movlw	0
  2770  002736  6E06               	movwf	___awmod@sign,c
  2771  002738  AE02               	btfss	___awmod@dividend+1,7,c
  2772  00273A  D007               	goto	l1873
  2773  00273C  6C01               	negf	___awmod@dividend,c
  2774  00273E  1E02               	comf	___awmod@dividend+1,f,c
  2775  002740  B0D8               	btfsc	status,0,c
  2776  002742  2A02               	incf	___awmod@dividend+1,f,c
  2777  002744  0E01               	movlw	1
  2778  002746  6E06               	movwf	___awmod@sign,c
  2779  002748  D000               	goto	l1873
  2780  00274A                     l1873:
  2781  00274A  AE04               	btfss	___awmod@divisor+1,7,c
  2782  00274C  D005               	goto	l1877
  2783  00274E  6C03               	negf	___awmod@divisor,c
  2784  002750  1E04               	comf	___awmod@divisor+1,f,c
  2785  002752  B0D8               	btfsc	status,0,c
  2786  002754  2A04               	incf	___awmod@divisor+1,f,c
  2787  002756  D000               	goto	l1877
  2788  002758                     l1877:
  2789  002758  5003               	movf	___awmod@divisor,w,c
  2790  00275A  1004               	iorwf	___awmod@divisor+1,w,c
  2791  00275C  B4D8               	btfsc	status,2,c
  2792  00275E  D01D               	goto	l1893
  2793  002760  0E01               	movlw	1
  2794  002762  6E05               	movwf	___awmod@counter,c
  2795  002764  D005               	goto	l1883
  2796  002766                     l1881:
  2797  002766  90D8               	bcf	status,0,c
  2798  002768  3603               	rlcf	___awmod@divisor,f,c
  2799  00276A  3604               	rlcf	___awmod@divisor+1,f,c
  2800  00276C  2A05               	incf	___awmod@counter,f,c
  2801  00276E  D000               	goto	l1883
  2802  002770                     l1883:
  2803  002770  BE04               	btfsc	___awmod@divisor+1,7,c
  2804  002772  D002               	goto	l1885
  2805  002774  D7F8               	goto	l1881
  2806  002776  D000               	goto	l1885
  2807  002778                     l1885:
  2808  002778  5003               	movf	___awmod@divisor,w,c
  2809  00277A  5C01               	subwf	___awmod@dividend,w,c
  2810  00277C  5004               	movf	___awmod@divisor+1,w,c
  2811  00277E  5802               	subwfb	___awmod@dividend+1,w,c
  2812  002780  A0D8               	btfss	status,0,c
  2813  002782  D005               	goto	l1889
  2814  002784  5003               	movf	___awmod@divisor,w,c
  2815  002786  5E01               	subwf	___awmod@dividend,f,c
  2816  002788  5004               	movf	___awmod@divisor+1,w,c
  2817  00278A  5A02               	subwfb	___awmod@dividend+1,f,c
  2818  00278C  D000               	goto	l1889
  2819  00278E                     l1889:
  2820  00278E  90D8               	bcf	status,0,c
  2821  002790  3204               	rrcf	___awmod@divisor+1,f,c
  2822  002792  3203               	rrcf	___awmod@divisor,f,c
  2823  002794  2E05               	decfsz	___awmod@counter,f,c
  2824  002796  D7F0               	goto	l1885
  2825  002798  D000               	goto	l1893
  2826  00279A                     l1893:
  2827  00279A  5006               	movf	___awmod@sign,w,c
  2828  00279C  B4D8               	btfsc	status,2,c
  2829  00279E  D005               	goto	l1897
  2830  0027A0  6C01               	negf	___awmod@dividend,c
  2831  0027A2  1E02               	comf	___awmod@dividend+1,f,c
  2832  0027A4  B0D8               	btfsc	status,0,c
  2833  0027A6  2A02               	incf	___awmod@dividend+1,f,c
  2834  0027A8  D000               	goto	l1897
  2835  0027AA                     l1897:
  2836  0027AA  C001  F001         	movff	___awmod@dividend,?___awmod
  2837  0027AE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2838  0027B2  D000               	goto	l374
  2839  0027B4                     l374:
  2840  0027B4  0012               	return		;funcret
  2841  0027B6                     __end_of___awmod:
  2842                           	opt stack 0
  2843                           tblptru	equ	0xFF8
  2844                           tblptrh	equ	0xFF7
  2845                           tblptrl	equ	0xFF6
  2846                           tablat	equ	0xFF5
  2847                           prodh	equ	0xFF4
  2848                           prodl	equ	0xFF3
  2849                           wreg	equ	0xFE8
  2850                           postinc2	equ	0xFDE
  2851                           postdec2	equ	0xFDD
  2852                           fsr2h	equ	0xFDA
  2853                           fsr2l	equ	0xFD9
  2854                           status	equ	0xFD8
  2855                           
  2856 ;; *************** function ___awdiv *****************
  2857 ;; Defined at:
  2858 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  dividend        2    6[COMRAM] int 
  2861 ;;  divisor         2    8[COMRAM] int 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  quotient        2   12[COMRAM] int 
  2864 ;;  sign            1   11[COMRAM] unsigned char 
  2865 ;;  counter         1   10[COMRAM] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2    6[COMRAM] int 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        8 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_fround
  2885 ;;		_scale
  2886 ;;		_printf
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text7
  2891  00257C                     __ptext7:
  2892                           	opt stack 0
  2893  00257C                     ___awdiv:
  2894                           	opt stack 28
  2895                           
  2896                           ;incstack = 0
  2897  00257C  0E00               	movlw	0
  2898  00257E  6E0C               	movwf	___awdiv@sign,c
  2899  002580  AE0A               	btfss	___awdiv@divisor+1,7,c
  2900  002582  D007               	goto	l1829
  2901  002584  6C09               	negf	___awdiv@divisor,c
  2902  002586  1E0A               	comf	___awdiv@divisor+1,f,c
  2903  002588  B0D8               	btfsc	status,0,c
  2904  00258A  2A0A               	incf	___awdiv@divisor+1,f,c
  2905  00258C  0E01               	movlw	1
  2906  00258E  6E0C               	movwf	___awdiv@sign,c
  2907  002590  D000               	goto	l1829
  2908  002592                     l1829:
  2909  002592  AE08               	btfss	___awdiv@dividend+1,7,c
  2910  002594  D007               	goto	l1835
  2911  002596  6C07               	negf	___awdiv@dividend,c
  2912  002598  1E08               	comf	___awdiv@dividend+1,f,c
  2913  00259A  B0D8               	btfsc	status,0,c
  2914  00259C  2A08               	incf	___awdiv@dividend+1,f,c
  2915  00259E  0E01               	movlw	1
  2916  0025A0  1A0C               	xorwf	___awdiv@sign,f,c
  2917  0025A2  D000               	goto	l1835
  2918  0025A4                     l1835:
  2919  0025A4  0E00               	movlw	0
  2920  0025A6  6E0E               	movwf	___awdiv@quotient+1,c
  2921  0025A8  0E00               	movlw	0
  2922  0025AA  6E0D               	movwf	___awdiv@quotient,c
  2923  0025AC  5009               	movf	___awdiv@divisor,w,c
  2924  0025AE  100A               	iorwf	___awdiv@divisor+1,w,c
  2925  0025B0  B4D8               	btfsc	status,2,c
  2926  0025B2  D021               	goto	l1857
  2927  0025B4  0E01               	movlw	1
  2928  0025B6  6E0B               	movwf	___awdiv@counter,c
  2929  0025B8  D005               	goto	l1843
  2930  0025BA                     l1841:
  2931  0025BA  90D8               	bcf	status,0,c
  2932  0025BC  3609               	rlcf	___awdiv@divisor,f,c
  2933  0025BE  360A               	rlcf	___awdiv@divisor+1,f,c
  2934  0025C0  2A0B               	incf	___awdiv@counter,f,c
  2935  0025C2  D000               	goto	l1843
  2936  0025C4                     l1843:
  2937  0025C4  BE0A               	btfsc	___awdiv@divisor+1,7,c
  2938  0025C6  D002               	goto	l1845
  2939  0025C8  D7F8               	goto	l1841
  2940  0025CA  D000               	goto	l1845
  2941  0025CC                     l1845:
  2942  0025CC  90D8               	bcf	status,0,c
  2943  0025CE  360D               	rlcf	___awdiv@quotient,f,c
  2944  0025D0  360E               	rlcf	___awdiv@quotient+1,f,c
  2945  0025D2  5009               	movf	___awdiv@divisor,w,c
  2946  0025D4  5C07               	subwf	___awdiv@dividend,w,c
  2947  0025D6  500A               	movf	___awdiv@divisor+1,w,c
  2948  0025D8  5808               	subwfb	___awdiv@dividend+1,w,c
  2949  0025DA  A0D8               	btfss	status,0,c
  2950  0025DC  D006               	goto	l1853
  2951  0025DE  5009               	movf	___awdiv@divisor,w,c
  2952  0025E0  5E07               	subwf	___awdiv@dividend,f,c
  2953  0025E2  500A               	movf	___awdiv@divisor+1,w,c
  2954  0025E4  5A08               	subwfb	___awdiv@dividend+1,f,c
  2955  0025E6  800D               	bsf	___awdiv@quotient,0,c
  2956  0025E8  D000               	goto	l1853
  2957  0025EA                     l1853:
  2958  0025EA  90D8               	bcf	status,0,c
  2959  0025EC  320A               	rrcf	___awdiv@divisor+1,f,c
  2960  0025EE  3209               	rrcf	___awdiv@divisor,f,c
  2961  0025F0  2E0B               	decfsz	___awdiv@counter,f,c
  2962  0025F2  D7EC               	goto	l1845
  2963  0025F4  D000               	goto	l1857
  2964  0025F6                     l1857:
  2965  0025F6  500C               	movf	___awdiv@sign,w,c
  2966  0025F8  B4D8               	btfsc	status,2,c
  2967  0025FA  D005               	goto	l1861
  2968  0025FC  6C0D               	negf	___awdiv@quotient,c
  2969  0025FE  1E0E               	comf	___awdiv@quotient+1,f,c
  2970  002600  B0D8               	btfsc	status,0,c
  2971  002602  2A0E               	incf	___awdiv@quotient+1,f,c
  2972  002604  D000               	goto	l1861
  2973  002606                     l1861:
  2974  002606  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  2975  00260A  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  2976  00260E  D000               	goto	l361
  2977  002610                     l361:
  2978  002610  0012               	return		;funcret
  2979  002612                     __end_of___awdiv:
  2980                           	opt stack 0
  2981                           tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           prodh	equ	0xFF4
  2986                           prodl	equ	0xFF3
  2987                           wreg	equ	0xFE8
  2988                           postinc2	equ	0xFDE
  2989                           postdec2	equ	0xFDD
  2990                           fsr2h	equ	0xFDA
  2991                           fsr2l	equ	0xFD9
  2992                           status	equ	0xFD8
  2993                           
  2994 ;; *************** function __tdiv_to_l_ *****************
  2995 ;; Defined at:
  2996 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  f1              3    0[COMRAM] float 
  2999 ;;  f2              3    3[COMRAM] float 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  quot            4    9[COMRAM] unsigned long 
  3002 ;;  exp1            1   14[COMRAM] unsigned char 
  3003 ;;  cntr            1   13[COMRAM] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  4    0[COMRAM] unsigned long 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:       15 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_printf
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text8
  3027  001EFA                     __ptext8:
  3028                           	opt stack 0
  3029  001EFA                     __tdiv_to_l_:
  3030                           	opt stack 29
  3031                           
  3032                           ;incstack = 0
  3033  001EFA  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3034  001EFE  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3035  001F00  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3036  001F02  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3037  001F04  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3038  001F06  E301               	bnc	u2011
  3039  001F08  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3040  001F0A                     u2011:
  3041  001F0A  5007               	movf	??__tdiv_to_l_,w,c
  3042  001F0C  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3043  001F0E  500F               	movf	__tdiv_to_l_@exp1,w,c
  3044  001F10  A4D8               	btfss	status,2,c
  3045  001F12  D002               	goto	l2031
  3046  001F14  D05D               	goto	l2073
  3047  001F16  D078               	goto	l573
  3048  001F18                     l2031:
  3049  001F18  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3050  001F1C  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3051  001F1E  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3052  001F20  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3053  001F22  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3054  001F24  E301               	bnc	u2031
  3055  001F26  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3056  001F28                     u2031:
  3057  001F28  5007               	movf	??__tdiv_to_l_,w,c
  3058  001F2A  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3059  001F2C  500E               	movf	__tdiv_to_l_@cntr,w,c
  3060  001F2E  A4D8               	btfss	status,2,c
  3061  001F30  D002               	goto	l2037
  3062  001F32  D04E               	goto	l2073
  3063  001F34  D069               	goto	l573
  3064  001F36                     l2037:
  3065  001F36  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3066  001F38  0EFF               	movlw	255
  3067  001F3A  1601               	andwf	__tdiv_to_l_@f1,f,c
  3068  001F3C  0EFF               	movlw	255
  3069  001F3E  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3070  001F40  0E00               	movlw	0
  3071  001F42  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3072  001F44  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3073  001F46  0EFF               	movlw	255
  3074  001F48  1604               	andwf	__tdiv_to_l_@f2,f,c
  3075  001F4A  0EFF               	movlw	255
  3076  001F4C  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3077  001F4E  0E00               	movlw	0
  3078  001F50  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3079  001F52  0E00               	movlw	0
  3080  001F54  6E0A               	movwf	__tdiv_to_l_@quot,c
  3081  001F56  0E00               	movlw	0
  3082  001F58  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3083  001F5A  0E00               	movlw	0
  3084  001F5C  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3085  001F5E  0E00               	movlw	0
  3086  001F60  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3087  001F62  0E7F               	movlw	127
  3088  001F64  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3089  001F66  500E               	movf	__tdiv_to_l_@cntr,w,c
  3090  001F68  0F98               	addlw	152
  3091  001F6A  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3092  001F6C  0E18               	movlw	24
  3093  001F6E  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3094  001F70                     l575:
  3095  001F70  90D8               	bcf	status,0,c
  3096  001F72  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3097  001F74  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3098  001F76  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3099  001F78  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3100  001F7A  5004               	movf	__tdiv_to_l_@f2,w,c
  3101  001F7C  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3102  001F7E  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3103  001F80  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3104  001F82  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3105  001F84  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3106  001F86  A0D8               	btfss	status,0,c
  3107  001F88  D007               	goto	l576
  3108  001F8A  5004               	movf	__tdiv_to_l_@f2,w,c
  3109  001F8C  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3110  001F8E  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3111  001F90  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3112  001F92  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3113  001F94  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3114  001F96  800A               	bsf	__tdiv_to_l_@quot,0,c
  3115  001F98                     l576:
  3116  001F98  90D8               	bcf	status,0,c
  3117  001F9A  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3118  001F9C  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3119  001F9E  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3120  001FA0  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3121  001FA2  D7E6               	goto	l575
  3122  001FA4  D000               	goto	l2059
  3123  001FA6                     l2059:
  3124  001FA6  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3125  001FA8  D010               	goto	l2071
  3126  001FAA  500F               	movf	__tdiv_to_l_@exp1,w,c
  3127  001FAC  0A80               	xorlw	128
  3128  001FAE  0F97               	addlw	151
  3129  001FB0  B0D8               	btfsc	status,0,c
  3130  001FB2  D003               	goto	l2067
  3131  001FB4  D00D               	goto	l2073
  3132  001FB6  D028               	goto	l573
  3133  001FB8  D000               	goto	l2067
  3134  001FBA                     l2067:
  3135  001FBA  90D8               	bcf	status,0,c
  3136  001FBC  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3137  001FBE  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3138  001FC0  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3139  001FC2  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3140  001FC4  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3141  001FC6  D7F9               	goto	l2067
  3142  001FC8  D017               	goto	l582
  3143  001FCA                     l2071:
  3144  001FCA  0E17               	movlw	23
  3145  001FCC  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3146  001FCE  D011               	goto	l2079
  3147  001FD0                     l2073:
  3148  001FD0  0E00               	movlw	0
  3149  001FD2  6E01               	movwf	?__tdiv_to_l_,c
  3150  001FD4  0E00               	movlw	0
  3151  001FD6  6E02               	movwf	?__tdiv_to_l_+1,c
  3152  001FD8  0E00               	movlw	0
  3153  001FDA  6E03               	movwf	?__tdiv_to_l_+2,c
  3154  001FDC  0E00               	movlw	0
  3155  001FDE  6E04               	movwf	?__tdiv_to_l_+3,c
  3156  001FE0  D013               	goto	l573
  3157  001FE2  D007               	goto	l2079
  3158  001FE4                     l2077:
  3159  001FE4  90D8               	bcf	status,0,c
  3160  001FE6  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3161  001FE8  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3162  001FEA  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3163  001FEC  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3164  001FEE  060F               	decf	__tdiv_to_l_@exp1,f,c
  3165  001FF0  D000               	goto	l2079
  3166  001FF2                     l2079:
  3167  001FF2  500F               	movf	__tdiv_to_l_@exp1,w,c
  3168  001FF4  A4D8               	btfss	status,2,c
  3169  001FF6  D7F6               	goto	l2077
  3170  001FF8                     l582:
  3171  001FF8  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3172  001FFC  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3173  002000  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3174  002004  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3175  002008                     l573:
  3176  002008  0012               	return		;funcret
  3177  00200A                     __end_of__tdiv_to_l_:
  3178                           	opt stack 0
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           prodh	equ	0xFF4
  3184                           prodl	equ	0xFF3
  3185                           wreg	equ	0xFE8
  3186                           postinc2	equ	0xFDE
  3187                           postdec2	equ	0xFDD
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function __div_to_l_ *****************
  3193 ;; Defined at:
  3194 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  f1              3    0[COMRAM] unsigned long 
  3197 ;;  f2              3    3[COMRAM] unsigned long 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  quot            4    6[COMRAM] unsigned long 
  3200 ;;  exp1            1   11[COMRAM] unsigned char 
  3201 ;;  cntr            1   10[COMRAM] unsigned char 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  4    0[COMRAM] unsigned long 
  3204 ;; Registers used:
  3205 ;;		wreg, status,2, status,0
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;Total ram usage:       12 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_printf
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text9
  3225  00200A                     __ptext9:
  3226                           	opt stack 0
  3227  00200A                     __div_to_l_:
  3228                           	opt stack 29
  3229                           
  3230                           ;incstack = 0
  3231  00200A  3403               	rlcf	__div_to_l_@f1+2,w,c
  3232  00200C  3404               	rlcf	__div_to_l_@f1+3,w,c
  3233  00200E  6E0C               	movwf	__div_to_l_@exp1,c
  3234  002010  500C               	movf	__div_to_l_@exp1,w,c
  3235  002012  A4D8               	btfss	status,2,c
  3236  002014  D002               	goto	l2087
  3237  002016  D061               	goto	l2133
  3238  002018  D07C               	goto	l452
  3239  00201A                     l2087:
  3240  00201A  3406               	rlcf	__div_to_l_@f2+2,w,c
  3241  00201C  3407               	rlcf	__div_to_l_@f2+3,w,c
  3242  00201E  6E0B               	movwf	__div_to_l_@cntr,c
  3243  002020  500B               	movf	__div_to_l_@cntr,w,c
  3244  002022  A4D8               	btfss	status,2,c
  3245  002024  D002               	goto	l2093
  3246  002026  D059               	goto	l2133
  3247  002028  D074               	goto	l452
  3248  00202A                     l2093:
  3249  00202A  8E03               	bsf	__div_to_l_@f1+2,7,c
  3250  00202C  0EFF               	movlw	255
  3251  00202E  1601               	andwf	__div_to_l_@f1,f,c
  3252  002030  0EFF               	movlw	255
  3253  002032  1602               	andwf	__div_to_l_@f1+1,f,c
  3254  002034  0EFF               	movlw	255
  3255  002036  1603               	andwf	__div_to_l_@f1+2,f,c
  3256  002038  0E00               	movlw	0
  3257  00203A  1604               	andwf	__div_to_l_@f1+3,f,c
  3258  00203C  8E06               	bsf	__div_to_l_@f2+2,7,c
  3259  00203E  0EFF               	movlw	255
  3260  002040  1604               	andwf	__div_to_l_@f2,f,c
  3261  002042  0EFF               	movlw	255
  3262  002044  1605               	andwf	__div_to_l_@f2+1,f,c
  3263  002046  0EFF               	movlw	255
  3264  002048  1606               	andwf	__div_to_l_@f2+2,f,c
  3265  00204A  0E00               	movlw	0
  3266  00204C  1607               	andwf	__div_to_l_@f2+3,f,c
  3267  00204E  0E00               	movlw	0
  3268  002050  6E07               	movwf	__div_to_l_@quot,c
  3269  002052  0E00               	movlw	0
  3270  002054  6E08               	movwf	__div_to_l_@quot+1,c
  3271  002056  0E00               	movlw	0
  3272  002058  6E09               	movwf	__div_to_l_@quot+2,c
  3273  00205A  0E00               	movlw	0
  3274  00205C  6E0A               	movwf	__div_to_l_@quot+3,c
  3275  00205E  0E7F               	movlw	127
  3276  002060  5E0C               	subwf	__div_to_l_@exp1,f,c
  3277  002062  500B               	movf	__div_to_l_@cntr,w,c
  3278  002064  0FA0               	addlw	160
  3279  002066  5E0C               	subwf	__div_to_l_@exp1,f,c
  3280  002068  0E20               	movlw	32
  3281  00206A  6E0B               	movwf	__div_to_l_@cntr,c
  3282  00206C  D000               	goto	l2107
  3283  00206E                     l2107:
  3284  00206E  90D8               	bcf	status,0,c
  3285  002070  3607               	rlcf	__div_to_l_@quot,f,c
  3286  002072  3608               	rlcf	__div_to_l_@quot+1,f,c
  3287  002074  3609               	rlcf	__div_to_l_@quot+2,f,c
  3288  002076  360A               	rlcf	__div_to_l_@quot+3,f,c
  3289  002078  5004               	movf	__div_to_l_@f2,w,c
  3290  00207A  5C01               	subwf	__div_to_l_@f1,w,c
  3291  00207C  5005               	movf	__div_to_l_@f2+1,w,c
  3292  00207E  5802               	subwfb	__div_to_l_@f1+1,w,c
  3293  002080  5006               	movf	__div_to_l_@f2+2,w,c
  3294  002082  5803               	subwfb	__div_to_l_@f1+2,w,c
  3295  002084  5007               	movf	__div_to_l_@f2+3,w,c
  3296  002086  5804               	subwfb	__div_to_l_@f1+3,w,c
  3297  002088  A0D8               	btfss	status,0,c
  3298  00208A  D00A               	goto	l2115
  3299  00208C  5004               	movf	__div_to_l_@f2,w,c
  3300  00208E  5E01               	subwf	__div_to_l_@f1,f,c
  3301  002090  5005               	movf	__div_to_l_@f2+1,w,c
  3302  002092  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3303  002094  5006               	movf	__div_to_l_@f2+2,w,c
  3304  002096  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3305  002098  5007               	movf	__div_to_l_@f2+3,w,c
  3306  00209A  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3307  00209C  8007               	bsf	__div_to_l_@quot,0,c
  3308  00209E  D000               	goto	l2115
  3309  0020A0                     l2115:
  3310  0020A0  90D8               	bcf	status,0,c
  3311  0020A2  3601               	rlcf	__div_to_l_@f1,f,c
  3312  0020A4  3602               	rlcf	__div_to_l_@f1+1,f,c
  3313  0020A6  3603               	rlcf	__div_to_l_@f1+2,f,c
  3314  0020A8  3604               	rlcf	__div_to_l_@f1+3,f,c
  3315  0020AA  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3316  0020AC  D7E0               	goto	l2107
  3317  0020AE  D000               	goto	l2119
  3318  0020B0                     l2119:
  3319  0020B0  AE0C               	btfss	__div_to_l_@exp1,7,c
  3320  0020B2  D010               	goto	l2131
  3321  0020B4  500C               	movf	__div_to_l_@exp1,w,c
  3322  0020B6  0A80               	xorlw	128
  3323  0020B8  0F9F               	addlw	159
  3324  0020BA  B0D8               	btfsc	status,0,c
  3325  0020BC  D003               	goto	l2127
  3326  0020BE  D00D               	goto	l2133
  3327  0020C0  D028               	goto	l452
  3328  0020C2  D000               	goto	l2127
  3329  0020C4                     l2127:
  3330  0020C4  90D8               	bcf	status,0,c
  3331  0020C6  320A               	rrcf	__div_to_l_@quot+3,f,c
  3332  0020C8  3209               	rrcf	__div_to_l_@quot+2,f,c
  3333  0020CA  3208               	rrcf	__div_to_l_@quot+1,f,c
  3334  0020CC  3207               	rrcf	__div_to_l_@quot,f,c
  3335  0020CE  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3336  0020D0  D7F9               	goto	l2127
  3337  0020D2  D017               	goto	l461
  3338  0020D4                     l2131:
  3339  0020D4  0E1F               	movlw	31
  3340  0020D6  640C               	cpfsgt	__div_to_l_@exp1,c
  3341  0020D8  D011               	goto	l2139
  3342  0020DA                     l2133:
  3343  0020DA  0E00               	movlw	0
  3344  0020DC  6E01               	movwf	?__div_to_l_,c
  3345  0020DE  0E00               	movlw	0
  3346  0020E0  6E02               	movwf	?__div_to_l_+1,c
  3347  0020E2  0E00               	movlw	0
  3348  0020E4  6E03               	movwf	?__div_to_l_+2,c
  3349  0020E6  0E00               	movlw	0
  3350  0020E8  6E04               	movwf	?__div_to_l_+3,c
  3351  0020EA  D013               	goto	l452
  3352  0020EC  D007               	goto	l2139
  3353  0020EE                     l2137:
  3354  0020EE  90D8               	bcf	status,0,c
  3355  0020F0  3607               	rlcf	__div_to_l_@quot,f,c
  3356  0020F2  3608               	rlcf	__div_to_l_@quot+1,f,c
  3357  0020F4  3609               	rlcf	__div_to_l_@quot+2,f,c
  3358  0020F6  360A               	rlcf	__div_to_l_@quot+3,f,c
  3359  0020F8  060C               	decf	__div_to_l_@exp1,f,c
  3360  0020FA  D000               	goto	l2139
  3361  0020FC                     l2139:
  3362  0020FC  500C               	movf	__div_to_l_@exp1,w,c
  3363  0020FE  A4D8               	btfss	status,2,c
  3364  002100  D7F6               	goto	l2137
  3365  002102                     l461:
  3366  002102  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3367  002106  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3368  00210A  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3369  00210E  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3370  002112                     l452:
  3371  002112  0012               	return		;funcret
  3372  002114                     __end_of__div_to_l_:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           prodh	equ	0xFF4
  3379                           prodl	equ	0xFF3
  3380                           wreg	equ	0xFE8
  3381                           postinc2	equ	0xFDE
  3382                           postdec2	equ	0xFDD
  3383                           fsr2h	equ	0xFDA
  3384                           fsr2l	equ	0xFD9
  3385                           status	equ	0xFD8
  3386                           
  3387 ;; *************** function ___lltoft *****************
  3388 ;; Defined at:
  3389 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  c               4    8[COMRAM] unsigned long 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  exp             1   16[COMRAM] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  3    8[COMRAM] float 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3406 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;Total ram usage:        9 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    1
  3410 ;; This function calls:
  3411 ;;		___ftpack
  3412 ;; This function is called by:
  3413 ;;		_printf
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text10
  3418  00290C                     __ptext10:
  3419                           	opt stack 0
  3420  00290C                     ___lltoft:
  3421                           	opt stack 28
  3422                           
  3423                           ;incstack = 0
  3424  00290C  0E8E               	movlw	142
  3425  00290E  6E11               	movwf	___lltoft@exp,c
  3426  002910  D007               	goto	l2317
  3427  002912                     l2315:
  3428  002912  90D8               	bcf	status,0,c
  3429  002914  320C               	rrcf	___lltoft@c+3,f,c
  3430  002916  320B               	rrcf	___lltoft@c+2,f,c
  3431  002918  320A               	rrcf	___lltoft@c+1,f,c
  3432  00291A  3209               	rrcf	___lltoft@c,f,c
  3433  00291C  2A11               	incf	___lltoft@exp,f,c
  3434  00291E  D000               	goto	l2317
  3435  002920                     l2317:
  3436  002920  0E00               	movlw	0
  3437  002922  1409               	andwf	___lltoft@c,w,c
  3438  002924  6E0D               	movwf	??___lltoft& (0+255),c
  3439  002926  0E00               	movlw	0
  3440  002928  140A               	andwf	___lltoft@c+1,w,c
  3441  00292A  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3442  00292C  0E00               	movlw	0
  3443  00292E  140B               	andwf	___lltoft@c+2,w,c
  3444  002930  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3445  002932  0EFF               	movlw	255
  3446  002934  140C               	andwf	___lltoft@c+3,w,c
  3447  002936  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3448  002938  500D               	movf	??___lltoft,w,c
  3449  00293A  100E               	iorwf	??___lltoft+1,w,c
  3450  00293C  100F               	iorwf	??___lltoft+2,w,c
  3451  00293E  1010               	iorwf	??___lltoft+3,w,c
  3452  002940  A4D8               	btfss	status,2,c
  3453  002942  D7E7               	goto	l2315
  3454  002944  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3455  002948  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3456  00294C  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3457  002950  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3458  002954  0E00               	movlw	0
  3459  002956  6E05               	movwf	___ftpack@sign,c
  3460  002958  EC5B  F012         	call	___ftpack	;wreg free
  3461  00295C  C001  F009         	movff	?___ftpack,?___lltoft
  3462  002960  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3463  002964  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3464  002968  D000               	goto	l687
  3465  00296A                     l687:
  3466  00296A  0012               	return		;funcret
  3467  00296C                     __end_of___lltoft:
  3468                           	opt stack 0
  3469                           tblptru	equ	0xFF8
  3470                           tblptrh	equ	0xFF7
  3471                           tblptrl	equ	0xFF6
  3472                           tablat	equ	0xFF5
  3473                           prodh	equ	0xFF4
  3474                           prodl	equ	0xFF3
  3475                           wreg	equ	0xFE8
  3476                           postinc2	equ	0xFDE
  3477                           postdec2	equ	0xFDD
  3478                           fsr2h	equ	0xFDA
  3479                           fsr2l	equ	0xFD9
  3480                           status	equ	0xFD8
  3481                           
  3482 ;; *************** function ___llmod *****************
  3483 ;; Defined at:
  3484 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  dividend        4    0[COMRAM] unsigned long 
  3487 ;;  divisor         4    4[COMRAM] unsigned long 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  counter         1    8[COMRAM] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  4    0[COMRAM] unsigned long 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3499 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;Total ram usage:        9 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_printf
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text11
  3513  00282C                     __ptext11:
  3514                           	opt stack 0
  3515  00282C                     ___llmod:
  3516                           	opt stack 29
  3517                           
  3518                           ;incstack = 0
  3519  00282C  5005               	movf	___llmod@divisor,w,c
  3520  00282E  1006               	iorwf	___llmod@divisor+1,w,c
  3521  002830  1007               	iorwf	___llmod@divisor+2,w,c
  3522  002832  1008               	iorwf	___llmod@divisor+3,w,c
  3523  002834  B4D8               	btfsc	status,2,c
  3524  002836  D029               	goto	l667
  3525  002838  0E01               	movlw	1
  3526  00283A  6E09               	movwf	___llmod@counter,c
  3527  00283C  D007               	goto	l2303
  3528  00283E                     l2301:
  3529  00283E  90D8               	bcf	status,0,c
  3530  002840  3605               	rlcf	___llmod@divisor,f,c
  3531  002842  3606               	rlcf	___llmod@divisor+1,f,c
  3532  002844  3607               	rlcf	___llmod@divisor+2,f,c
  3533  002846  3608               	rlcf	___llmod@divisor+3,f,c
  3534  002848  2A09               	incf	___llmod@counter,f,c
  3535  00284A  D000               	goto	l2303
  3536  00284C                     l2303:
  3537  00284C  BE08               	btfsc	___llmod@divisor+3,7,c
  3538  00284E  D002               	goto	l2305
  3539  002850  D7F6               	goto	l2301
  3540  002852  D000               	goto	l2305
  3541  002854                     l2305:
  3542  002854  5005               	movf	___llmod@divisor,w,c
  3543  002856  5C01               	subwf	___llmod@dividend,w,c
  3544  002858  5006               	movf	___llmod@divisor+1,w,c
  3545  00285A  5802               	subwfb	___llmod@dividend+1,w,c
  3546  00285C  5007               	movf	___llmod@divisor+2,w,c
  3547  00285E  5803               	subwfb	___llmod@dividend+2,w,c
  3548  002860  5008               	movf	___llmod@divisor+3,w,c
  3549  002862  5804               	subwfb	___llmod@dividend+3,w,c
  3550  002864  A0D8               	btfss	status,0,c
  3551  002866  D009               	goto	l2309
  3552  002868  5005               	movf	___llmod@divisor,w,c
  3553  00286A  5E01               	subwf	___llmod@dividend,f,c
  3554  00286C  5006               	movf	___llmod@divisor+1,w,c
  3555  00286E  5A02               	subwfb	___llmod@dividend+1,f,c
  3556  002870  5007               	movf	___llmod@divisor+2,w,c
  3557  002872  5A03               	subwfb	___llmod@dividend+2,f,c
  3558  002874  5008               	movf	___llmod@divisor+3,w,c
  3559  002876  5A04               	subwfb	___llmod@dividend+3,f,c
  3560  002878  D000               	goto	l2309
  3561  00287A                     l2309:
  3562  00287A  90D8               	bcf	status,0,c
  3563  00287C  3208               	rrcf	___llmod@divisor+3,f,c
  3564  00287E  3207               	rrcf	___llmod@divisor+2,f,c
  3565  002880  3206               	rrcf	___llmod@divisor+1,f,c
  3566  002882  3205               	rrcf	___llmod@divisor,f,c
  3567  002884  2E09               	decfsz	___llmod@counter,f,c
  3568  002886  D7E6               	goto	l2305
  3569  002888  D000               	goto	l667
  3570  00288A                     l667:
  3571  00288A  C001  F001         	movff	___llmod@dividend,?___llmod
  3572  00288E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3573  002892  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3574  002896  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3575  00289A  0012               	return		;funcret
  3576  00289C                     __end_of___llmod:
  3577                           	opt stack 0
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           wreg	equ	0xFE8
  3585                           postinc2	equ	0xFDE
  3586                           postdec2	equ	0xFDD
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function ___lldiv *****************
  3592 ;; Defined at:
  3593 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  dividend        4    0[COMRAM] unsigned long 
  3596 ;;  divisor         4    4[COMRAM] unsigned long 
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;  quotient        4    8[COMRAM] unsigned long 
  3599 ;;  counter         1   12[COMRAM] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  4    0[COMRAM] unsigned long 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3609 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;Total ram usage:       13 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_printf
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text12
  3623  0026A8                     __ptext12:
  3624                           	opt stack 0
  3625  0026A8                     ___lldiv:
  3626                           	opt stack 29
  3627                           
  3628                           ;incstack = 0
  3629  0026A8  0E00               	movlw	0
  3630  0026AA  6E09               	movwf	___lldiv@quotient,c
  3631  0026AC  0E00               	movlw	0
  3632  0026AE  6E0A               	movwf	___lldiv@quotient+1,c
  3633  0026B0  0E00               	movlw	0
  3634  0026B2  6E0B               	movwf	___lldiv@quotient+2,c
  3635  0026B4  0E00               	movlw	0
  3636  0026B6  6E0C               	movwf	___lldiv@quotient+3,c
  3637  0026B8  5005               	movf	___lldiv@divisor,w,c
  3638  0026BA  1006               	iorwf	___lldiv@divisor+1,w,c
  3639  0026BC  1007               	iorwf	___lldiv@divisor+2,w,c
  3640  0026BE  1008               	iorwf	___lldiv@divisor+3,w,c
  3641  0026C0  B4D8               	btfsc	status,2,c
  3642  0026C2  D02F               	goto	l657
  3643  0026C4  0E01               	movlw	1
  3644  0026C6  6E0D               	movwf	___lldiv@counter,c
  3645  0026C8  D007               	goto	l2283
  3646  0026CA                     l2281:
  3647  0026CA  90D8               	bcf	status,0,c
  3648  0026CC  3605               	rlcf	___lldiv@divisor,f,c
  3649  0026CE  3606               	rlcf	___lldiv@divisor+1,f,c
  3650  0026D0  3607               	rlcf	___lldiv@divisor+2,f,c
  3651  0026D2  3608               	rlcf	___lldiv@divisor+3,f,c
  3652  0026D4  2A0D               	incf	___lldiv@counter,f,c
  3653  0026D6  D000               	goto	l2283
  3654  0026D8                     l2283:
  3655  0026D8  BE08               	btfsc	___lldiv@divisor+3,7,c
  3656  0026DA  D002               	goto	l2285
  3657  0026DC  D7F6               	goto	l2281
  3658  0026DE  D000               	goto	l2285
  3659  0026E0                     l2285:
  3660  0026E0  90D8               	bcf	status,0,c
  3661  0026E2  3609               	rlcf	___lldiv@quotient,f,c
  3662  0026E4  360A               	rlcf	___lldiv@quotient+1,f,c
  3663  0026E6  360B               	rlcf	___lldiv@quotient+2,f,c
  3664  0026E8  360C               	rlcf	___lldiv@quotient+3,f,c
  3665  0026EA  5005               	movf	___lldiv@divisor,w,c
  3666  0026EC  5C01               	subwf	___lldiv@dividend,w,c
  3667  0026EE  5006               	movf	___lldiv@divisor+1,w,c
  3668  0026F0  5802               	subwfb	___lldiv@dividend+1,w,c
  3669  0026F2  5007               	movf	___lldiv@divisor+2,w,c
  3670  0026F4  5803               	subwfb	___lldiv@dividend+2,w,c
  3671  0026F6  5008               	movf	___lldiv@divisor+3,w,c
  3672  0026F8  5804               	subwfb	___lldiv@dividend+3,w,c
  3673  0026FA  A0D8               	btfss	status,0,c
  3674  0026FC  D00A               	goto	l2293
  3675  0026FE  5005               	movf	___lldiv@divisor,w,c
  3676  002700  5E01               	subwf	___lldiv@dividend,f,c
  3677  002702  5006               	movf	___lldiv@divisor+1,w,c
  3678  002704  5A02               	subwfb	___lldiv@dividend+1,f,c
  3679  002706  5007               	movf	___lldiv@divisor+2,w,c
  3680  002708  5A03               	subwfb	___lldiv@dividend+2,f,c
  3681  00270A  5008               	movf	___lldiv@divisor+3,w,c
  3682  00270C  5A04               	subwfb	___lldiv@dividend+3,f,c
  3683  00270E  8009               	bsf	___lldiv@quotient,0,c
  3684  002710  D000               	goto	l2293
  3685  002712                     l2293:
  3686  002712  90D8               	bcf	status,0,c
  3687  002714  3208               	rrcf	___lldiv@divisor+3,f,c
  3688  002716  3207               	rrcf	___lldiv@divisor+2,f,c
  3689  002718  3206               	rrcf	___lldiv@divisor+1,f,c
  3690  00271A  3205               	rrcf	___lldiv@divisor,f,c
  3691  00271C  2E0D               	decfsz	___lldiv@counter,f,c
  3692  00271E  D7E0               	goto	l2285
  3693  002720  D000               	goto	l657
  3694  002722                     l657:
  3695  002722  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3696  002726  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3697  00272A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3698  00272E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3699  002732  0012               	return		;funcret
  3700  002734                     __end_of___lldiv:
  3701                           	opt stack 0
  3702                           tblptru	equ	0xFF8
  3703                           tblptrh	equ	0xFF7
  3704                           tblptrl	equ	0xFF6
  3705                           tablat	equ	0xFF5
  3706                           prodh	equ	0xFF4
  3707                           prodl	equ	0xFF3
  3708                           wreg	equ	0xFE8
  3709                           postinc2	equ	0xFDE
  3710                           postdec2	equ	0xFDD
  3711                           fsr2h	equ	0xFDA
  3712                           fsr2l	equ	0xFD9
  3713                           status	equ	0xFD8
  3714                           
  3715 ;; *************** function ___fttol *****************
  3716 ;; Defined at:
  3717 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  f1              3   49[COMRAM] float 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  lval            4   59[COMRAM] unsigned long 
  3722 ;;  exp1            1   63[COMRAM] unsigned char 
  3723 ;;  sign1           1   58[COMRAM] unsigned char 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  4   49[COMRAM] long 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;Total ram usage:       15 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_printf
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text13
  3747  00220C                     __ptext13:
  3748                           	opt stack 0
  3749  00220C                     ___fttol:
  3750                           	opt stack 29
  3751                           
  3752                           ;incstack = 0
  3753  00220C  C034  F036         	movff	___fttol@f1+2,??___fttol
  3754  002210  6A37               	clrf	(??___fttol+1)& (0+255),c
  3755  002212  6A38               	clrf	(??___fttol+2)& (0+255),c
  3756  002214  3433               	rlcf	___fttol@f1+1,w,c
  3757  002216  3636               	rlcf	??___fttol& (0+255),f,c
  3758  002218  E301               	bnc	u2281
  3759  00221A  8037               	bsf	(??___fttol+1)& (0+255),0,c
  3760  00221C                     u2281:
  3761  00221C  5036               	movf	??___fttol,w,c
  3762  00221E  6E40               	movwf	___fttol@exp1,c
  3763  002220  5040               	movf	___fttol@exp1,w,c
  3764  002222  A4D8               	btfss	status,2,c
  3765  002224  D002               	goto	l2235
  3766  002226  D039               	goto	l2259
  3767  002228  D063               	goto	l618
  3768  00222A                     l2235:
  3769  00222A  0E17               	movlw	23
  3770  00222C  6E36               	movwf	??___fttol& (0+255),c
  3771  00222E  C032  F037         	movff	___fttol@f1,??___fttol+1
  3772  002232  C033  F038         	movff	___fttol@f1+1,??___fttol+2
  3773  002236  C034  F039         	movff	___fttol@f1+2,??___fttol+3
  3774  00223A  2836               	incf	??___fttol,w,c
  3775  00223C  6E3A               	movwf	(??___fttol+4)& (0+255),c
  3776  00223E  D004               	goto	u2300
  3777  002240                     u2305:
  3778  002240  90D8               	bcf	status,0,c
  3779  002242  3239               	rrcf	??___fttol+3,f,c
  3780  002244  3238               	rrcf	??___fttol+2,f,c
  3781  002246  3237               	rrcf	??___fttol+1,f,c
  3782  002248                     u2300:
  3783  002248  2E3A               	decfsz	(??___fttol+4)& (0+255),f,c
  3784  00224A  D7FA               	goto	u2305
  3785  00224C  5037               	movf	??___fttol+1,w,c
  3786  00224E  6E3B               	movwf	___fttol@sign1,c
  3787  002250  8E33               	bsf	___fttol@f1+1,7,c
  3788  002252  0EFF               	movlw	255
  3789  002254  1632               	andwf	___fttol@f1,f,c
  3790  002256  0EFF               	movlw	255
  3791  002258  1633               	andwf	___fttol@f1+1,f,c
  3792  00225A  0E00               	movlw	0
  3793  00225C  1634               	andwf	___fttol@f1+2,f,c
  3794  00225E  5032               	movf	___fttol@f1,w,c
  3795  002260  6E3C               	movwf	___fttol@lval,c
  3796  002262  5033               	movf	___fttol@f1+1,w,c
  3797  002264  6E3D               	movwf	___fttol@lval+1,c
  3798  002266  5034               	movf	___fttol@f1+2,w,c
  3799  002268  6E3E               	movwf	___fttol@lval+2,c
  3800  00226A  6A3F               	clrf	___fttol@lval+3,c
  3801  00226C  0E8E               	movlw	142
  3802  00226E  5E40               	subwf	___fttol@exp1,f,c
  3803  002270  AE40               	btfss	___fttol@exp1,7,c
  3804  002272  D010               	goto	l2257
  3805  002274  5040               	movf	___fttol@exp1,w,c
  3806  002276  0A80               	xorlw	128
  3807  002278  0F8F               	addlw	143
  3808  00227A  B0D8               	btfsc	status,0,c
  3809  00227C  D003               	goto	l2253
  3810  00227E  D00D               	goto	l2259
  3811  002280  D037               	goto	l618
  3812  002282  D000               	goto	l2253
  3813  002284                     l2253:
  3814  002284  90D8               	bcf	status,0,c
  3815  002286  323F               	rrcf	___fttol@lval+3,f,c
  3816  002288  323E               	rrcf	___fttol@lval+2,f,c
  3817  00228A  323D               	rrcf	___fttol@lval+1,f,c
  3818  00228C  323C               	rrcf	___fttol@lval,f,c
  3819  00228E  3E40               	incfsz	___fttol@exp1,f,c
  3820  002290  D7F9               	goto	l2253
  3821  002292  D019               	goto	l2267
  3822  002294                     l2257:
  3823  002294  0E17               	movlw	23
  3824  002296  6440               	cpfsgt	___fttol@exp1,c
  3825  002298  D011               	goto	l2265
  3826  00229A                     l2259:
  3827  00229A  0E00               	movlw	0
  3828  00229C  6E32               	movwf	?___fttol,c
  3829  00229E  0E00               	movlw	0
  3830  0022A0  6E33               	movwf	?___fttol+1,c
  3831  0022A2  0E00               	movlw	0
  3832  0022A4  6E34               	movwf	?___fttol+2,c
  3833  0022A6  0E00               	movlw	0
  3834  0022A8  6E35               	movwf	?___fttol+3,c
  3835  0022AA  D022               	goto	l618
  3836  0022AC  D007               	goto	l2265
  3837  0022AE                     l2263:
  3838  0022AE  90D8               	bcf	status,0,c
  3839  0022B0  363C               	rlcf	___fttol@lval,f,c
  3840  0022B2  363D               	rlcf	___fttol@lval+1,f,c
  3841  0022B4  363E               	rlcf	___fttol@lval+2,f,c
  3842  0022B6  363F               	rlcf	___fttol@lval+3,f,c
  3843  0022B8  0640               	decf	___fttol@exp1,f,c
  3844  0022BA  D000               	goto	l2265
  3845  0022BC                     l2265:
  3846  0022BC  5040               	movf	___fttol@exp1,w,c
  3847  0022BE  B4D8               	btfsc	status,2,c
  3848  0022C0  D002               	goto	l2267
  3849  0022C2  D7F5               	goto	l2263
  3850  0022C4  D000               	goto	l2267
  3851  0022C6                     l2267:
  3852  0022C6  503B               	movf	___fttol@sign1,w,c
  3853  0022C8  B4D8               	btfsc	status,2,c
  3854  0022CA  D009               	goto	l2271
  3855  0022CC  1E3F               	comf	___fttol@lval+3,f,c
  3856  0022CE  1E3E               	comf	___fttol@lval+2,f,c
  3857  0022D0  1E3D               	comf	___fttol@lval+1,f,c
  3858  0022D2  6C3C               	negf	___fttol@lval,c
  3859  0022D4  0E00               	movlw	0
  3860  0022D6  223D               	addwfc	___fttol@lval+1,f,c
  3861  0022D8  223E               	addwfc	___fttol@lval+2,f,c
  3862  0022DA  223F               	addwfc	___fttol@lval+3,f,c
  3863  0022DC  D000               	goto	l2271
  3864  0022DE                     l2271:
  3865  0022DE  C03C  F032         	movff	___fttol@lval,?___fttol
  3866  0022E2  C03D  F033         	movff	___fttol@lval+1,?___fttol+1
  3867  0022E6  C03E  F034         	movff	___fttol@lval+2,?___fttol+2
  3868  0022EA  C03F  F035         	movff	___fttol@lval+3,?___fttol+3
  3869  0022EE  D000               	goto	l618
  3870  0022F0                     l618:
  3871  0022F0  0012               	return		;funcret
  3872  0022F2                     __end_of___fttol:
  3873                           	opt stack 0
  3874                           tblptru	equ	0xFF8
  3875                           tblptrh	equ	0xFF7
  3876                           tblptrl	equ	0xFF6
  3877                           tablat	equ	0xFF5
  3878                           prodh	equ	0xFF4
  3879                           prodl	equ	0xFF3
  3880                           wreg	equ	0xFE8
  3881                           postinc2	equ	0xFDE
  3882                           postdec2	equ	0xFDD
  3883                           fsr2h	equ	0xFDA
  3884                           fsr2l	equ	0xFD9
  3885                           status	equ	0xFD8
  3886                           
  3887 ;; *************** function ___ftsub *****************
  3888 ;; Defined at:
  3889 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  f1              3   64[COMRAM] float 
  3892 ;;  f2              3   67[COMRAM] float 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  3   64[COMRAM] float 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3904 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;Total ram usage:        6 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; Hardware stack levels required when called:    2
  3911 ;; This function calls:
  3912 ;;		___ftadd
  3913 ;; This function is called by:
  3914 ;;		_printf
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text14
  3919  00296C                     __ptext14:
  3920                           	opt stack 0
  3921  00296C                     ___ftsub:
  3922                           	opt stack 27
  3923                           
  3924                           ;incstack = 0
  3925  00296C  5044               	movf	___ftsub@f2,w,c
  3926  00296E  1045               	iorwf	___ftsub@f2+1,w,c
  3927  002970  1046               	iorwf	___ftsub@f2+2,w,c
  3928  002972  B4D8               	btfsc	status,2,c
  3929  002974  D007               	goto	l2191
  3930  002976  0E00               	movlw	0
  3931  002978  1A44               	xorwf	___ftsub@f2,f,c
  3932  00297A  0E00               	movlw	0
  3933  00297C  1A45               	xorwf	___ftsub@f2+1,f,c
  3934  00297E  0E80               	movlw	128
  3935  002980  1A46               	xorwf	___ftsub@f2+2,f,c
  3936  002982  D000               	goto	l2191
  3937  002984                     l2191:
  3938  002984  C041  F035         	movff	___ftsub@f1,___ftadd@f1
  3939  002988  C042  F036         	movff	___ftsub@f1+1,___ftadd@f1+1
  3940  00298C  C043  F037         	movff	___ftsub@f1+2,___ftadd@f1+2
  3941  002990  C044  F038         	movff	___ftsub@f2,___ftadd@f2
  3942  002994  C045  F039         	movff	___ftsub@f2+1,___ftadd@f2+1
  3943  002998  C046  F03A         	movff	___ftsub@f2+2,___ftadd@f2+2
  3944  00299C  EC9B  F00E         	call	___ftadd	;wreg free
  3945  0029A0  C035  F041         	movff	?___ftadd,?___ftsub
  3946  0029A4  C036  F042         	movff	?___ftadd+1,?___ftsub+1
  3947  0029A8  C037  F043         	movff	?___ftadd+2,?___ftsub+2
  3948  0029AC  D000               	goto	l614
  3949  0029AE                     l614:
  3950  0029AE  0012               	return		;funcret
  3951  0029B0                     __end_of___ftsub:
  3952                           	opt stack 0
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           prodh	equ	0xFF4
  3958                           prodl	equ	0xFF3
  3959                           wreg	equ	0xFE8
  3960                           postinc2	equ	0xFDE
  3961                           postdec2	equ	0xFDD
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           status	equ	0xFD8
  3965                           
  3966 ;; *************** function ___ftadd *****************
  3967 ;; Defined at:
  3968 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  f1              3   52[COMRAM] float 
  3971 ;;  f2              3   55[COMRAM] float 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  exp1            1   63[COMRAM] unsigned char 
  3974 ;;  exp2            1   62[COMRAM] unsigned char 
  3975 ;;  sign            1   61[COMRAM] unsigned char 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  3   52[COMRAM] float 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3985 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;Total ram usage:       12 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    1
  3992 ;; This function calls:
  3993 ;;		___ftpack
  3994 ;; This function is called by:
  3995 ;;		_printf
  3996 ;;		___ftsub
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text15
  4001  001D36                     __ptext15:
  4002                           	opt stack 0
  4003  001D36                     ___ftadd:
  4004                           	opt stack 27
  4005                           
  4006                           ;incstack = 0
  4007  001D36  C037  F03B         	movff	___ftadd@f1+2,??___ftadd
  4008  001D3A  6A3C               	clrf	(??___ftadd+1)& (0+255),c
  4009  001D3C  6A3D               	clrf	(??___ftadd+2)& (0+255),c
  4010  001D3E  3436               	rlcf	___ftadd@f1+1,w,c
  4011  001D40  363B               	rlcf	??___ftadd& (0+255),f,c
  4012  001D42  E301               	bnc	u1431
  4013  001D44  803C               	bsf	(??___ftadd+1)& (0+255),0,c
  4014  001D46                     u1431:
  4015  001D46  503B               	movf	??___ftadd,w,c
  4016  001D48  6E40               	movwf	___ftadd@exp1,c
  4017  001D4A  C03A  F03B         	movff	___ftadd@f2+2,??___ftadd
  4018  001D4E  6A3C               	clrf	(??___ftadd+1)& (0+255),c
  4019  001D50  6A3D               	clrf	(??___ftadd+2)& (0+255),c
  4020  001D52  3439               	rlcf	___ftadd@f2+1,w,c
  4021  001D54  363B               	rlcf	??___ftadd& (0+255),f,c
  4022  001D56  E301               	bnc	u1441
  4023  001D58  803C               	bsf	(??___ftadd+1)& (0+255),0,c
  4024  001D5A                     u1441:
  4025  001D5A  503B               	movf	??___ftadd,w,c
  4026  001D5C  6E3F               	movwf	___ftadd@exp2,c
  4027  001D5E  5040               	movf	___ftadd@exp1,w,c
  4028  001D60  B4D8               	btfsc	status,2,c
  4029  001D62  D00B               	goto	l533
  4030  001D64  503F               	movf	___ftadd@exp2,w,c
  4031  001D66  5C40               	subwf	___ftadd@exp1,w,c
  4032  001D68  B0D8               	btfsc	status,0,c
  4033  001D6A  D00E               	goto	l1711
  4034  001D6C  5040               	movf	___ftadd@exp1,w,c
  4035  001D6E  0800               	sublw	0
  4036  001D70  243F               	addwf	___ftadd@exp2,w,c
  4037  001D72  6E3B               	movwf	??___ftadd& (0+255),c
  4038  001D74  0E18               	movlw	24
  4039  001D76  643B               	cpfsgt	??___ftadd,c
  4040  001D78  D007               	goto	l1711
  4041  001D7A                     l533:
  4042  001D7A  C038  F035         	movff	___ftadd@f2,?___ftadd
  4043  001D7E  C039  F036         	movff	___ftadd@f2+1,?___ftadd+1
  4044  001D82  C03A  F037         	movff	___ftadd@f2+2,?___ftadd+2
  4045  001D86  D0B8               	goto	l534
  4046  001D88                     l1711:
  4047  001D88  503F               	movf	___ftadd@exp2,w,c
  4048  001D8A  B4D8               	btfsc	status,2,c
  4049  001D8C  D00B               	goto	l537
  4050  001D8E  5040               	movf	___ftadd@exp1,w,c
  4051  001D90  5C3F               	subwf	___ftadd@exp2,w,c
  4052  001D92  B0D8               	btfsc	status,0,c
  4053  001D94  D00E               	goto	l1717
  4054  001D96  503F               	movf	___ftadd@exp2,w,c
  4055  001D98  0800               	sublw	0
  4056  001D9A  2440               	addwf	___ftadd@exp1,w,c
  4057  001D9C  6E3B               	movwf	??___ftadd& (0+255),c
  4058  001D9E  0E18               	movlw	24
  4059  001DA0  643B               	cpfsgt	??___ftadd,c
  4060  001DA2  D007               	goto	l1717
  4061  001DA4                     l537:
  4062  001DA4  C035  F035         	movff	___ftadd@f1,?___ftadd
  4063  001DA8  C036  F036         	movff	___ftadd@f1+1,?___ftadd+1
  4064  001DAC  C037  F037         	movff	___ftadd@f1+2,?___ftadd+2
  4065  001DB0  D0A3               	goto	l534
  4066  001DB2                     l1717:
  4067  001DB2  0E06               	movlw	6
  4068  001DB4  6E3E               	movwf	___ftadd@sign,c
  4069  001DB6  AE37               	btfss	___ftadd@f1+2,7,c
  4070  001DB8  D002               	goto	l1723
  4071  001DBA  8E3E               	bsf	___ftadd@sign,7,c
  4072  001DBC  D000               	goto	l1723
  4073  001DBE                     l1723:
  4074  001DBE  BE3A               	btfsc	___ftadd@f2+2,7,c
  4075  001DC0  8C3E               	bsf	___ftadd@sign,6,c
  4076  001DC2  8E36               	bsf	___ftadd@f1+1,7,c
  4077  001DC4  0EFF               	movlw	255
  4078  001DC6  1635               	andwf	___ftadd@f1,f,c
  4079  001DC8  0EFF               	movlw	255
  4080  001DCA  1636               	andwf	___ftadd@f1+1,f,c
  4081  001DCC  0E00               	movlw	0
  4082  001DCE  1637               	andwf	___ftadd@f1+2,f,c
  4083  001DD0  8E39               	bsf	___ftadd@f2+1,7,c
  4084  001DD2  0EFF               	movlw	255
  4085  001DD4  1638               	andwf	___ftadd@f2,f,c
  4086  001DD6  0EFF               	movlw	255
  4087  001DD8  1639               	andwf	___ftadd@f2+1,f,c
  4088  001DDA  0E00               	movlw	0
  4089  001DDC  163A               	andwf	___ftadd@f2+2,f,c
  4090  001DDE  503F               	movf	___ftadd@exp2,w,c
  4091  001DE0  5C40               	subwf	___ftadd@exp1,w,c
  4092  001DE2  B0D8               	btfsc	status,0,c
  4093  001DE4  D01E               	goto	l1743
  4094  001DE6                     l1733:
  4095  001DE6  90D8               	bcf	status,0,c
  4096  001DE8  3638               	rlcf	___ftadd@f2,f,c
  4097  001DEA  3639               	rlcf	___ftadd@f2+1,f,c
  4098  001DEC  363A               	rlcf	___ftadd@f2+2,f,c
  4099  001DEE  063F               	decf	___ftadd@exp2,f,c
  4100  001DF0  5040               	movf	___ftadd@exp1,w,c
  4101  001DF2  183F               	xorwf	___ftadd@exp2,w,c
  4102  001DF4  B4D8               	btfsc	status,2,c
  4103  001DF6  D00F               	goto	l1741
  4104  001DF8  063E               	decf	___ftadd@sign,f,c
  4105  001DFA  C03E  F03B         	movff	___ftadd@sign,??___ftadd
  4106  001DFE  0E07               	movlw	7
  4107  001E00  163B               	andwf	??___ftadd,f,c
  4108  001E02  B4D8               	btfsc	status,2,c
  4109  001E04  D008               	goto	l1741
  4110  001E06  D7EF               	goto	l1733
  4111  001E08  D006               	goto	l1741
  4112  001E0A                     l1739:
  4113  001E0A  90D8               	bcf	status,0,c
  4114  001E0C  3237               	rrcf	___ftadd@f1+2,f,c
  4115  001E0E  3236               	rrcf	___ftadd@f1+1,f,c
  4116  001E10  3235               	rrcf	___ftadd@f1,f,c
  4117  001E12  2A40               	incf	___ftadd@exp1,f,c
  4118  001E14  D000               	goto	l1741
  4119  001E16                     l1741:
  4120  001E16  503F               	movf	___ftadd@exp2,w,c
  4121  001E18  1840               	xorwf	___ftadd@exp1,w,c
  4122  001E1A  B4D8               	btfsc	status,2,c
  4123  001E1C  D024               	goto	l548
  4124  001E1E  D7F5               	goto	l1739
  4125  001E20  D022               	goto	l548
  4126  001E22                     l1743:
  4127  001E22  5040               	movf	___ftadd@exp1,w,c
  4128  001E24  5C3F               	subwf	___ftadd@exp2,w,c
  4129  001E26  B0D8               	btfsc	status,0,c
  4130  001E28  D01E               	goto	l548
  4131  001E2A                     l1745:
  4132  001E2A  90D8               	bcf	status,0,c
  4133  001E2C  3635               	rlcf	___ftadd@f1,f,c
  4134  001E2E  3636               	rlcf	___ftadd@f1+1,f,c
  4135  001E30  3637               	rlcf	___ftadd@f1+2,f,c
  4136  001E32  0640               	decf	___ftadd@exp1,f,c
  4137  001E34  5040               	movf	___ftadd@exp1,w,c
  4138  001E36  183F               	xorwf	___ftadd@exp2,w,c
  4139  001E38  B4D8               	btfsc	status,2,c
  4140  001E3A  D00F               	goto	l1753
  4141  001E3C  063E               	decf	___ftadd@sign,f,c
  4142  001E3E  C03E  F03B         	movff	___ftadd@sign,??___ftadd
  4143  001E42  0E07               	movlw	7
  4144  001E44  163B               	andwf	??___ftadd,f,c
  4145  001E46  B4D8               	btfsc	status,2,c
  4146  001E48  D008               	goto	l1753
  4147  001E4A  D7EF               	goto	l1745
  4148  001E4C  D006               	goto	l1753
  4149  001E4E                     l1751:
  4150  001E4E  90D8               	bcf	status,0,c
  4151  001E50  323A               	rrcf	___ftadd@f2+2,f,c
  4152  001E52  3239               	rrcf	___ftadd@f2+1,f,c
  4153  001E54  3238               	rrcf	___ftadd@f2,f,c
  4154  001E56  2A3F               	incf	___ftadd@exp2,f,c
  4155  001E58  D000               	goto	l1753
  4156  001E5A                     l1753:
  4157  001E5A  503F               	movf	___ftadd@exp2,w,c
  4158  001E5C  1840               	xorwf	___ftadd@exp1,w,c
  4159  001E5E  B4D8               	btfsc	status,2,c
  4160  001E60  D002               	goto	l548
  4161  001E62  D7F5               	goto	l1751
  4162  001E64  D000               	goto	l548
  4163  001E66                     l548:
  4164  001E66  AE3E               	btfss	___ftadd@sign,7,c
  4165  001E68  D00C               	goto	l557
  4166  001E6A  0EFF               	movlw	255
  4167  001E6C  1A35               	xorwf	___ftadd@f1,f,c
  4168  001E6E  0EFF               	movlw	255
  4169  001E70  1A36               	xorwf	___ftadd@f1+1,f,c
  4170  001E72  0EFF               	movlw	255
  4171  001E74  1A37               	xorwf	___ftadd@f1+2,f,c
  4172  001E76  0E01               	movlw	1
  4173  001E78  2635               	addwf	___ftadd@f1,f,c
  4174  001E7A  0E00               	movlw	0
  4175  001E7C  2236               	addwfc	___ftadd@f1+1,f,c
  4176  001E7E  0E00               	movlw	0
  4177  001E80  2237               	addwfc	___ftadd@f1+2,f,c
  4178  001E82                     l557:
  4179  001E82  AC3E               	btfss	___ftadd@sign,6,c
  4180  001E84  D00D               	goto	l1759
  4181  001E86  0EFF               	movlw	255
  4182  001E88  1A38               	xorwf	___ftadd@f2,f,c
  4183  001E8A  0EFF               	movlw	255
  4184  001E8C  1A39               	xorwf	___ftadd@f2+1,f,c
  4185  001E8E  0EFF               	movlw	255
  4186  001E90  1A3A               	xorwf	___ftadd@f2+2,f,c
  4187  001E92  0E01               	movlw	1
  4188  001E94  2638               	addwf	___ftadd@f2,f,c
  4189  001E96  0E00               	movlw	0
  4190  001E98  2239               	addwfc	___ftadd@f2+1,f,c
  4191  001E9A  0E00               	movlw	0
  4192  001E9C  223A               	addwfc	___ftadd@f2+2,f,c
  4193  001E9E  D000               	goto	l1759
  4194  001EA0                     l1759:
  4195  001EA0  0E00               	movlw	0
  4196  001EA2  6E3E               	movwf	___ftadd@sign,c
  4197  001EA4  5035               	movf	___ftadd@f1,w,c
  4198  001EA6  2638               	addwf	___ftadd@f2,f,c
  4199  001EA8  5036               	movf	___ftadd@f1+1,w,c
  4200  001EAA  2239               	addwfc	___ftadd@f2+1,f,c
  4201  001EAC  5037               	movf	___ftadd@f1+2,w,c
  4202  001EAE  223A               	addwfc	___ftadd@f2+2,f,c
  4203  001EB0  AE3A               	btfss	___ftadd@f2+2,7,c
  4204  001EB2  D00F               	goto	l1769
  4205  001EB4  0EFF               	movlw	255
  4206  001EB6  1A38               	xorwf	___ftadd@f2,f,c
  4207  001EB8  0EFF               	movlw	255
  4208  001EBA  1A39               	xorwf	___ftadd@f2+1,f,c
  4209  001EBC  0EFF               	movlw	255
  4210  001EBE  1A3A               	xorwf	___ftadd@f2+2,f,c
  4211  001EC0  0E01               	movlw	1
  4212  001EC2  2638               	addwf	___ftadd@f2,f,c
  4213  001EC4  0E00               	movlw	0
  4214  001EC6  2239               	addwfc	___ftadd@f2+1,f,c
  4215  001EC8  0E00               	movlw	0
  4216  001ECA  223A               	addwfc	___ftadd@f2+2,f,c
  4217  001ECC  0E01               	movlw	1
  4218  001ECE  6E3E               	movwf	___ftadd@sign,c
  4219  001ED0  D000               	goto	l1769
  4220  001ED2                     l1769:
  4221  001ED2  C038  F001         	movff	___ftadd@f2,___ftpack@arg
  4222  001ED6  C039  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4223  001EDA  C03A  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4224  001EDE  C040  F004         	movff	___ftadd@exp1,___ftpack@exp
  4225  001EE2  C03E  F005         	movff	___ftadd@sign,___ftpack@sign
  4226  001EE6  EC5B  F012         	call	___ftpack	;wreg free
  4227  001EEA  C001  F035         	movff	?___ftpack,?___ftadd
  4228  001EEE  C002  F036         	movff	?___ftpack+1,?___ftadd+1
  4229  001EF2  C003  F037         	movff	?___ftpack+2,?___ftadd+2
  4230  001EF6  D000               	goto	l534
  4231  001EF8                     l534:
  4232  001EF8  0012               	return		;funcret
  4233  001EFA                     __end_of___ftadd:
  4234                           	opt stack 0
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           prodh	equ	0xFF4
  4240                           prodl	equ	0xFF3
  4241                           wreg	equ	0xFE8
  4242                           postinc2	equ	0xFDE
  4243                           postdec2	equ	0xFDD
  4244                           fsr2h	equ	0xFDA
  4245                           fsr2l	equ	0xFD9
  4246                           status	equ	0xFD8
  4247                           
  4248 ;; *************** function ___ftneg *****************
  4249 ;; Defined at:
  4250 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  f1              3    0[COMRAM] float 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  3    0[COMRAM] float 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4264 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;Total ram usage:        3 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_printf
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text16
  4278  002A3A                     __ptext16:
  4279                           	opt stack 0
  4280  002A3A                     ___ftneg:
  4281                           	opt stack 29
  4282                           
  4283                           ;incstack = 0
  4284  002A3A  5001               	movf	___ftneg@f1,w,c
  4285  002A3C  1002               	iorwf	___ftneg@f1+1,w,c
  4286  002A3E  1003               	iorwf	___ftneg@f1+2,w,c
  4287  002A40  B4D8               	btfsc	status,2,c
  4288  002A42  D006               	goto	l607
  4289  002A44  0E00               	movlw	0
  4290  002A46  1A01               	xorwf	___ftneg@f1,f,c
  4291  002A48  0E00               	movlw	0
  4292  002A4A  1A02               	xorwf	___ftneg@f1+1,f,c
  4293  002A4C  0E80               	movlw	128
  4294  002A4E  1A03               	xorwf	___ftneg@f1+2,f,c
  4295  002A50                     l607:
  4296  002A50  C001  F001         	movff	___ftneg@f1,?___ftneg
  4297  002A54  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4298  002A58  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4299  002A5C  0012               	return		;funcret
  4300  002A5E                     __end_of___ftneg:
  4301                           	opt stack 0
  4302                           tblptru	equ	0xFF8
  4303                           tblptrh	equ	0xFF7
  4304                           tblptrl	equ	0xFF6
  4305                           tablat	equ	0xFF5
  4306                           prodh	equ	0xFF4
  4307                           prodl	equ	0xFF3
  4308                           wreg	equ	0xFE8
  4309                           postinc2	equ	0xFDE
  4310                           postdec2	equ	0xFDD
  4311                           fsr2h	equ	0xFDA
  4312                           fsr2l	equ	0xFD9
  4313                           status	equ	0xFD8
  4314                           
  4315 ;; *************** function ___ftge *****************
  4316 ;; Defined at:
  4317 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  ff1             3    0[COMRAM] float 
  4320 ;;  ff2             3    3[COMRAM] float 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;		None
  4323 ;; Return value:  Size  Location     Type
  4324 ;;		None               void
  4325 ;; Registers used:
  4326 ;;		wreg, status,2, status,0
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4332 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;Total ram usage:        9 bytes
  4337 ;; Hardware stack levels used:    1
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_printf
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text17
  4346  002612                     __ptext17:
  4347                           	opt stack 0
  4348  002612                     ___ftge:
  4349                           	opt stack 29
  4350                           
  4351                           ;incstack = 0
  4352  002612  AE03               	btfss	___ftge@ff1+2,7,c
  4353  002614  D017               	goto	l2211
  4354  002616  C001  F007         	movff	___ftge@ff1,??___ftge
  4355  00261A  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4356  00261E  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4357  002622  1E07               	comf	??___ftge,f,c
  4358  002624  1E08               	comf	??___ftge+1,f,c
  4359  002626  1E09               	comf	??___ftge+2,f,c
  4360  002628  2A07               	incf	??___ftge,f,c
  4361  00262A  0E00               	movlw	0
  4362  00262C  2208               	addwfc	??___ftge+1,f,c
  4363  00262E  2209               	addwfc	??___ftge+2,f,c
  4364  002630  0E00               	movlw	0
  4365  002632  2407               	addwf	??___ftge,w,c
  4366  002634  6E01               	movwf	___ftge@ff1,c
  4367  002636  0E00               	movlw	0
  4368  002638  2008               	addwfc	??___ftge+1,w,c
  4369  00263A  6E02               	movwf	___ftge@ff1+1,c
  4370  00263C  0E80               	movlw	128
  4371  00263E  2009               	addwfc	??___ftge+2,w,c
  4372  002640  6E03               	movwf	___ftge@ff1+2,c
  4373  002642  D000               	goto	l2211
  4374  002644                     l2211:
  4375  002644  AE06               	btfss	___ftge@ff2+2,7,c
  4376  002646  D017               	goto	l2215
  4377  002648  C004  F007         	movff	___ftge@ff2,??___ftge
  4378  00264C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4379  002650  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4380  002654  1E07               	comf	??___ftge,f,c
  4381  002656  1E08               	comf	??___ftge+1,f,c
  4382  002658  1E09               	comf	??___ftge+2,f,c
  4383  00265A  2A07               	incf	??___ftge,f,c
  4384  00265C  0E00               	movlw	0
  4385  00265E  2208               	addwfc	??___ftge+1,f,c
  4386  002660  2209               	addwfc	??___ftge+2,f,c
  4387  002662  0E00               	movlw	0
  4388  002664  2407               	addwf	??___ftge,w,c
  4389  002666  6E04               	movwf	___ftge@ff2,c
  4390  002668  0E00               	movlw	0
  4391  00266A  2008               	addwfc	??___ftge+1,w,c
  4392  00266C  6E05               	movwf	___ftge@ff2+1,c
  4393  00266E  0E80               	movlw	128
  4394  002670  2009               	addwfc	??___ftge+2,w,c
  4395  002672  6E06               	movwf	___ftge@ff2+2,c
  4396  002674  D000               	goto	l2215
  4397  002676                     l2215:
  4398  002676  0E00               	movlw	0
  4399  002678  1A01               	xorwf	___ftge@ff1,f,c
  4400  00267A  0E00               	movlw	0
  4401  00267C  1A02               	xorwf	___ftge@ff1+1,f,c
  4402  00267E  0E80               	movlw	128
  4403  002680  1A03               	xorwf	___ftge@ff1+2,f,c
  4404  002682  0E00               	movlw	0
  4405  002684  1A04               	xorwf	___ftge@ff2,f,c
  4406  002686  0E00               	movlw	0
  4407  002688  1A05               	xorwf	___ftge@ff2+1,f,c
  4408  00268A  0E80               	movlw	128
  4409  00268C  1A06               	xorwf	___ftge@ff2+2,f,c
  4410  00268E  5004               	movf	___ftge@ff2,w,c
  4411  002690  5C01               	subwf	___ftge@ff1,w,c
  4412  002692  5005               	movf	___ftge@ff2+1,w,c
  4413  002694  5802               	subwfb	___ftge@ff1+1,w,c
  4414  002696  5006               	movf	___ftge@ff2+2,w,c
  4415  002698  5803               	subwfb	___ftge@ff1+2,w,c
  4416  00269A  B0D8               	btfsc	status,0,c
  4417  00269C  D002               	goto	l2221
  4418  00269E  90D8               	bcf	status,0,c
  4419  0026A0  D002               	goto	l591
  4420  0026A2                     l2221:
  4421  0026A2  80D8               	bsf	status,0,c
  4422  0026A4  D000               	goto	l591
  4423  0026A6                     l591:
  4424  0026A6  0012               	return		;funcret
  4425  0026A8                     __end_of___ftge:
  4426                           	opt stack 0
  4427                           tblptru	equ	0xFF8
  4428                           tblptrh	equ	0xFF7
  4429                           tblptrl	equ	0xFF6
  4430                           tablat	equ	0xFF5
  4431                           prodh	equ	0xFF4
  4432                           prodl	equ	0xFF3
  4433                           wreg	equ	0xFE8
  4434                           postinc2	equ	0xFDE
  4435                           postdec2	equ	0xFDD
  4436                           fsr2h	equ	0xFDA
  4437                           fsr2l	equ	0xFD9
  4438                           status	equ	0xFD8
  4439                           
  4440 ;; *************** function _init_UART *****************
  4441 ;; Defined at:
  4442 ;;		line 12 in file "lab1p3.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;		None
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;		None               void
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;Total ram usage:        0 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    1
  4463 ;; This function calls:
  4464 ;;		_OpenUSART
  4465 ;; This function is called by:
  4466 ;;		_main
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text18
  4471  002A5E                     __ptext18:
  4472                           	opt stack 0
  4473  002A5E                     _init_UART:
  4474                           	opt stack 29
  4475                           
  4476                           ;lab1p3.c: 13: OpenUSART (0b01111111 & 0b10111111 &
  4477                           ;lab1p3.c: 14: 0b11111110 & 0b11111101 & 0b11111111 &
  4478                           ;lab1p3.c: 15: 0b11111111, 25);
  4479                           
  4480                           ;incstack = 0
  4481  002A5E  0E00               	movlw	0
  4482  002A60  6E02               	movwf	OpenUSART@spbrg+1,c
  4483  002A62  0E19               	movlw	25
  4484  002A64  6E01               	movwf	OpenUSART@spbrg,c
  4485  002A66  0E3C               	movlw	60
  4486  002A68  EC4E  F014         	call	_OpenUSART
  4487                           
  4488                           ;lab1p3.c: 16: OSCCON = 0x60;
  4489  002A6C  0E60               	movlw	96
  4490  002A6E  6ED3               	movwf	4051,c	;volatile
  4491  002A70  0012               	return		;funcret
  4492  002A72                     __end_of_init_UART:
  4493                           	opt stack 0
  4494                           tblptru	equ	0xFF8
  4495                           tblptrh	equ	0xFF7
  4496                           tblptrl	equ	0xFF6
  4497                           tablat	equ	0xFF5
  4498                           prodh	equ	0xFF4
  4499                           prodl	equ	0xFF3
  4500                           wreg	equ	0xFE8
  4501                           postinc2	equ	0xFDE
  4502                           postdec2	equ	0xFDD
  4503                           fsr2h	equ	0xFDA
  4504                           fsr2l	equ	0xFD9
  4505                           status	equ	0xFD8
  4506                           
  4507 ;; *************** function _OpenUSART *****************
  4508 ;; Defined at:
  4509 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;  config          1    wreg     unsigned char 
  4512 ;;  spbrg           2    0[COMRAM] unsigned int 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  config          1    2[COMRAM] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;		None               void
  4517 ;; Registers used:
  4518 ;;		wreg, status,2
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;Total ram usage:        3 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		_init_UART
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text19
  4538  00289C                     __ptext19:
  4539                           	opt stack 0
  4540  00289C                     _OpenUSART:
  4541                           	opt stack 29
  4542                           
  4543                           ;incstack = 0
  4544                           ;OpenUSART@config stored from wreg
  4545  00289C  6E03               	movwf	OpenUSART@config,c
  4546  00289E  0E00               	movlw	0
  4547  0028A0  6EAC               	movwf	4012,c	;volatile
  4548  0028A2  0E00               	movlw	0
  4549  0028A4  6EAB               	movwf	4011,c	;volatile
  4550  0028A6  A003               	btfss	OpenUSART@config,0,c
  4551  0028A8  D002               	goto	l1907
  4552  0028AA  88AC               	bsf	4012,4,c	;volatile
  4553  0028AC  D000               	goto	l1907
  4554  0028AE                     l1907:
  4555  0028AE  A203               	btfss	OpenUSART@config,1,c
  4556  0028B0  D003               	goto	l1911
  4557  0028B2  8CAC               	bsf	4012,6,c	;volatile
  4558  0028B4  8CAB               	bsf	4011,6,c	;volatile
  4559  0028B6  D000               	goto	l1911
  4560  0028B8                     l1911:
  4561  0028B8  A403               	btfss	OpenUSART@config,2,c
  4562  0028BA  D002               	goto	l1915
  4563  0028BC  8EAC               	bsf	4012,7,c	;volatile
  4564  0028BE  D000               	goto	l1915
  4565  0028C0                     l1915:
  4566  0028C0  A603               	btfss	OpenUSART@config,3,c
  4567  0028C2  D002               	goto	l156
  4568  0028C4  88AB               	bsf	4011,4,c	;volatile
  4569  0028C6  D002               	goto	l1919
  4570  0028C8                     l156:
  4571  0028C8  8AAB               	bsf	4011,5,c	;volatile
  4572  0028CA  D000               	goto	l1919
  4573  0028CC                     l1919:
  4574  0028CC  B803               	btfsc	OpenUSART@config,4,c
  4575  0028CE  84AC               	bsf	4012,2,c	;volatile
  4576  0028D0  989E               	bcf	3998,4,c	;volatile
  4577  0028D2  AA03               	btfss	OpenUSART@config,5,c
  4578  0028D4  D002               	goto	l1927
  4579  0028D6  86AB               	bsf	4011,3,c	;volatile
  4580  0028D8  D000               	goto	l1927
  4581  0028DA                     l1927:
  4582  0028DA  AC03               	btfss	OpenUSART@config,6,c
  4583  0028DC  D002               	goto	l160
  4584  0028DE  8A9D               	bsf	3997,5,c	;volatile
  4585  0028E0  D001               	goto	l161
  4586  0028E2                     l160:
  4587  0028E2  9A9D               	bcf	3997,5,c	;volatile
  4588  0028E4                     l161:
  4589  0028E4  9A9E               	bcf	3998,5,c	;volatile
  4590  0028E6  AE03               	btfss	OpenUSART@config,7,c
  4591  0028E8  D002               	goto	l162
  4592  0028EA  889D               	bsf	3997,4,c	;volatile
  4593  0028EC  D001               	goto	l163
  4594  0028EE                     l162:
  4595  0028EE  989D               	bcf	3997,4,c	;volatile
  4596  0028F0                     l163:
  4597  0028F0  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4598  0028F4  5002               	movf	OpenUSART@spbrg+1,w,c
  4599  0028F6  6EB0               	movwf	4016,c	;volatile
  4600  0028F8  8AAC               	bsf	4012,5,c	;volatile
  4601  0028FA  8EAB               	bsf	4011,7,c	;volatile
  4602  0028FC  9C94               	bcf	3988,6,c	;volatile
  4603  0028FE  8E94               	bsf	3988,7,c	;volatile
  4604  002900  B8AC               	btfsc	4012,4,c	;volatile
  4605  002902  BEAC               	btfsc	4012,7,c	;volatile
  4606  002904  D002               	goto	l165
  4607  002906  8C94               	bsf	3988,6,c	;volatile
  4608  002908  D000               	goto	l165
  4609  00290A                     l165:
  4610  00290A  0012               	return		;funcret
  4611  00290C                     __end_of_OpenUSART:
  4612                           	opt stack 0
  4613                           tblptru	equ	0xFF8
  4614                           tblptrh	equ	0xFF7
  4615                           tblptrl	equ	0xFF6
  4616                           tablat	equ	0xFF5
  4617                           prodh	equ	0xFF4
  4618                           prodl	equ	0xFF3
  4619                           wreg	equ	0xFE8
  4620                           postinc2	equ	0xFDE
  4621                           postdec2	equ	0xFDD
  4622                           fsr2h	equ	0xFDA
  4623                           fsr2l	equ	0xFD9
  4624                           status	equ	0xFD8
  4625                           
  4626 ;; *************** function _Read_Ch_Volt *****************
  4627 ;; Defined at:
  4628 ;;		line 42 in file "lab1p3.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  ch_num          1    wreg     unsigned char 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  ch_num          1   50[COMRAM] unsigned char 
  4633 ;;  Volt            3   45[COMRAM] float 
  4634 ;;  ADC_Result      2   48[COMRAM] int 
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  3   42[COMRAM] float 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4644 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;Total ram usage:        9 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    2
  4651 ;; This function calls:
  4652 ;;		_Get_Full_ADC
  4653 ;;		___awtoft
  4654 ;;		___ftdiv
  4655 ;;		___ftmul
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text20
  4662  0027B6                     __ptext20:
  4663                           	opt stack 0
  4664  0027B6                     _Read_Ch_Volt:
  4665                           	opt stack 28
  4666                           
  4667                           ;incstack = 0
  4668                           ;Read_Ch_Volt@ch_num stored from wreg
  4669  0027B6  6E33               	movwf	Read_Ch_Volt@ch_num,c
  4670                           
  4671                           ;lab1p3.c: 44: ADCON0 = ch_num * 0x4 + 1;
  4672  0027B8  5033               	movf	Read_Ch_Volt@ch_num,w,c
  4673  0027BA  0D04               	mullw	4
  4674  0027BC  28F3               	incf	prodl,w,c
  4675  0027BE  6EC2               	movwf	4034,c	;volatile
  4676                           
  4677                           ;lab1p3.c: 45: int ADC_Result = Get_Full_ADC();
  4678  0027C0  EC0A  F015         	call	_Get_Full_ADC	;wreg free
  4679  0027C4  C001  F031         	movff	?_Get_Full_ADC,Read_Ch_Volt@ADC_Result
  4680  0027C8  C002  F032         	movff	?_Get_Full_ADC+1,Read_Ch_Volt@ADC_Result+1
  4681                           
  4682                           ;lab1p3.c: 46: float Volt = ADC_Result / 1024.0 * 5.0;
  4683  0027CC  0E00               	movlw	0
  4684  0027CE  6E10               	movwf	___ftdiv@f2,c
  4685  0027D0  0E80               	movlw	128
  4686  0027D2  6E11               	movwf	___ftdiv@f2+1,c
  4687  0027D4  0E44               	movlw	68
  4688  0027D6  6E12               	movwf	___ftdiv@f2+2,c
  4689  0027D8  C031  F009         	movff	Read_Ch_Volt@ADC_Result,___awtoft@c
  4690  0027DC  C032  F00A         	movff	Read_Ch_Volt@ADC_Result+1,___awtoft@c+1
  4691  0027E0  ECD8  F014         	call	___awtoft	;wreg free
  4692  0027E4  C009  F00D         	movff	?___awtoft,___ftdiv@f1
  4693  0027E8  C00A  F00E         	movff	?___awtoft+1,___ftdiv@f1+1
  4694  0027EC  C00B  F00F         	movff	?___awtoft+2,___ftdiv@f1+2
  4695  0027F0  ECEA  F011         	call	___ftdiv	;wreg free
  4696  0027F4  C00D  F01C         	movff	?___ftdiv,___ftmul@f1
  4697  0027F8  C00E  F01D         	movff	?___ftdiv+1,___ftmul@f1+1
  4698  0027FC  C00F  F01E         	movff	?___ftdiv+2,___ftmul@f1+2
  4699  002800  0E00               	movlw	0
  4700  002802  6E1F               	movwf	___ftmul@f2,c
  4701  002804  0EA0               	movlw	160
  4702  002806  6E20               	movwf	___ftmul@f2+1,c
  4703  002808  0E40               	movlw	64
  4704  00280A  6E21               	movwf	___ftmul@f2+2,c
  4705  00280C  EC8A  F010         	call	___ftmul	;wreg free
  4706  002810  C01C  F02E         	movff	?___ftmul,Read_Ch_Volt@Volt
  4707  002814  C01D  F02F         	movff	?___ftmul+1,Read_Ch_Volt@Volt+1
  4708  002818  C01E  F030         	movff	?___ftmul+2,Read_Ch_Volt@Volt+2
  4709                           
  4710                           ;lab1p3.c: 47: return (Volt);
  4711  00281C  C02E  F02B         	movff	Read_Ch_Volt@Volt,?_Read_Ch_Volt
  4712  002820  C02F  F02C         	movff	Read_Ch_Volt@Volt+1,?_Read_Ch_Volt+1
  4713  002824  C030  F02D         	movff	Read_Ch_Volt@Volt+2,?_Read_Ch_Volt+2
  4714  002828  D000               	goto	l43
  4715  00282A                     l43:
  4716  00282A  0012               	return		;funcret
  4717  00282C                     __end_of_Read_Ch_Volt:
  4718                           	opt stack 0
  4719                           tblptru	equ	0xFF8
  4720                           tblptrh	equ	0xFF7
  4721                           tblptrl	equ	0xFF6
  4722                           tablat	equ	0xFF5
  4723                           prodh	equ	0xFF4
  4724                           prodl	equ	0xFF3
  4725                           wreg	equ	0xFE8
  4726                           postinc2	equ	0xFDE
  4727                           postdec2	equ	0xFDD
  4728                           fsr2h	equ	0xFDA
  4729                           fsr2l	equ	0xFD9
  4730                           status	equ	0xFD8
  4731                           
  4732 ;; *************** function ___ftmul *****************
  4733 ;; Defined at:
  4734 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  f1              3   27[COMRAM] float 
  4737 ;;  f2              3   30[COMRAM] float 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  4740 ;;  sign            1   41[COMRAM] unsigned char 
  4741 ;;  cntr            1   40[COMRAM] unsigned char 
  4742 ;;  exp             1   36[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  3   27[COMRAM] float 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4752 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;Total ram usage:       15 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    1
  4759 ;; This function calls:
  4760 ;;		___ftpack
  4761 ;; This function is called by:
  4762 ;;		_Read_Ch_Volt
  4763 ;;		_fround
  4764 ;;		_scale
  4765 ;;		_printf
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text21
  4770  002114                     __ptext21:
  4771                           	opt stack 0
  4772  002114                     ___ftmul:
  4773                           	opt stack 27
  4774                           
  4775                           ;incstack = 0
  4776  002114  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  4777  002118  6A23               	clrf	(??___ftmul+1)& (0+255),c
  4778  00211A  6A24               	clrf	(??___ftmul+2)& (0+255),c
  4779  00211C  341D               	rlcf	___ftmul@f1+1,w,c
  4780  00211E  3622               	rlcf	??___ftmul& (0+255),f,c
  4781  002120  E301               	bnc	u1641
  4782  002122  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  4783  002124                     u1641:
  4784  002124  5022               	movf	??___ftmul,w,c
  4785  002126  6E25               	movwf	___ftmul@exp,c
  4786  002128  5025               	movf	___ftmul@exp,w,c
  4787  00212A  A4D8               	btfss	status,2,c
  4788  00212C  D002               	goto	l1779
  4789  00212E  D00E               	goto	l1781
  4790  002130  D06C               	goto	l597
  4791  002132                     l1779:
  4792  002132  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  4793  002136  6A23               	clrf	(??___ftmul+1)& (0+255),c
  4794  002138  6A24               	clrf	(??___ftmul+2)& (0+255),c
  4795  00213A  3420               	rlcf	___ftmul@f2+1,w,c
  4796  00213C  3622               	rlcf	??___ftmul& (0+255),f,c
  4797  00213E  E301               	bnc	u1661
  4798  002140  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  4799  002142                     u1661:
  4800  002142  5022               	movf	??___ftmul,w,c
  4801  002144  6E2A               	movwf	___ftmul@sign,c
  4802  002146  502A               	movf	___ftmul@sign,w,c
  4803  002148  A4D8               	btfss	status,2,c
  4804  00214A  D007               	goto	l1785
  4805  00214C                     l1781:
  4806  00214C  0E00               	movlw	0
  4807  00214E  6E1C               	movwf	?___ftmul,c
  4808  002150  0E00               	movlw	0
  4809  002152  6E1D               	movwf	?___ftmul+1,c
  4810  002154  0E00               	movlw	0
  4811  002156  6E1E               	movwf	?___ftmul+2,c
  4812  002158  D058               	goto	l597
  4813  00215A                     l1785:
  4814  00215A  502A               	movf	___ftmul@sign,w,c
  4815  00215C  0F7B               	addlw	123
  4816  00215E  2625               	addwf	___ftmul@exp,f,c
  4817  002160  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  4818  002164  5021               	movf	___ftmul@f2+2,w,c
  4819  002166  1A2A               	xorwf	___ftmul@sign,f,c
  4820  002168  0E80               	movlw	128
  4821  00216A  162A               	andwf	___ftmul@sign,f,c
  4822  00216C  8E1D               	bsf	___ftmul@f1+1,7,c
  4823  00216E  8E20               	bsf	___ftmul@f2+1,7,c
  4824  002170  0EFF               	movlw	255
  4825  002172  161F               	andwf	___ftmul@f2,f,c
  4826  002174  0EFF               	movlw	255
  4827  002176  1620               	andwf	___ftmul@f2+1,f,c
  4828  002178  0E00               	movlw	0
  4829  00217A  1621               	andwf	___ftmul@f2+2,f,c
  4830  00217C  0E00               	movlw	0
  4831  00217E  6E26               	movwf	___ftmul@f3_as_product,c
  4832  002180  0E00               	movlw	0
  4833  002182  6E27               	movwf	___ftmul@f3_as_product+1,c
  4834  002184  0E00               	movlw	0
  4835  002186  6E28               	movwf	___ftmul@f3_as_product+2,c
  4836  002188  0E07               	movlw	7
  4837  00218A  6E29               	movwf	___ftmul@cntr,c
  4838  00218C  D000               	goto	l1799
  4839  00218E                     l1799:
  4840  00218E  A01C               	btfss	___ftmul@f1,0,c
  4841  002190  D007               	goto	l1803
  4842  002192  501F               	movf	___ftmul@f2,w,c
  4843  002194  2626               	addwf	___ftmul@f3_as_product,f,c
  4844  002196  5020               	movf	___ftmul@f2+1,w,c
  4845  002198  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  4846  00219A  5021               	movf	___ftmul@f2+2,w,c
  4847  00219C  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  4848  00219E  D000               	goto	l1803
  4849  0021A0                     l1803:
  4850  0021A0  90D8               	bcf	status,0,c
  4851  0021A2  321E               	rrcf	___ftmul@f1+2,f,c
  4852  0021A4  321D               	rrcf	___ftmul@f1+1,f,c
  4853  0021A6  321C               	rrcf	___ftmul@f1,f,c
  4854  0021A8  90D8               	bcf	status,0,c
  4855  0021AA  361F               	rlcf	___ftmul@f2,f,c
  4856  0021AC  3620               	rlcf	___ftmul@f2+1,f,c
  4857  0021AE  3621               	rlcf	___ftmul@f2+2,f,c
  4858  0021B0  2E29               	decfsz	___ftmul@cntr,f,c
  4859  0021B2  D7ED               	goto	l1799
  4860  0021B4  D000               	goto	l1807
  4861  0021B6                     l1807:
  4862  0021B6  0E09               	movlw	9
  4863  0021B8  6E29               	movwf	___ftmul@cntr,c
  4864  0021BA  D000               	goto	l1809
  4865  0021BC                     l1809:
  4866  0021BC  A01C               	btfss	___ftmul@f1,0,c
  4867  0021BE  D007               	goto	l1813
  4868  0021C0  501F               	movf	___ftmul@f2,w,c
  4869  0021C2  2626               	addwf	___ftmul@f3_as_product,f,c
  4870  0021C4  5020               	movf	___ftmul@f2+1,w,c
  4871  0021C6  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  4872  0021C8  5021               	movf	___ftmul@f2+2,w,c
  4873  0021CA  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  4874  0021CC  D000               	goto	l1813
  4875  0021CE                     l1813:
  4876  0021CE  90D8               	bcf	status,0,c
  4877  0021D0  321E               	rrcf	___ftmul@f1+2,f,c
  4878  0021D2  321D               	rrcf	___ftmul@f1+1,f,c
  4879  0021D4  321C               	rrcf	___ftmul@f1,f,c
  4880  0021D6  90D8               	bcf	status,0,c
  4881  0021D8  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  4882  0021DA  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  4883  0021DC  3226               	rrcf	___ftmul@f3_as_product,f,c
  4884  0021DE  2E29               	decfsz	___ftmul@cntr,f,c
  4885  0021E0  D7ED               	goto	l1809
  4886  0021E2  D000               	goto	l1817
  4887  0021E4                     l1817:
  4888  0021E4  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4889  0021E8  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4890  0021EC  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4891  0021F0  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  4892  0021F4  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  4893  0021F8  EC5B  F012         	call	___ftpack	;wreg free
  4894  0021FC  C001  F01C         	movff	?___ftpack,?___ftmul
  4895  002200  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  4896  002204  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  4897  002208  D000               	goto	l597
  4898  00220A                     l597:
  4899  00220A  0012               	return		;funcret
  4900  00220C                     __end_of___ftmul:
  4901                           	opt stack 0
  4902                           tblptru	equ	0xFF8
  4903                           tblptrh	equ	0xFF7
  4904                           tblptrl	equ	0xFF6
  4905                           tablat	equ	0xFF5
  4906                           prodh	equ	0xFF4
  4907                           prodl	equ	0xFF3
  4908                           wreg	equ	0xFE8
  4909                           postinc2	equ	0xFDE
  4910                           postdec2	equ	0xFDD
  4911                           fsr2h	equ	0xFDA
  4912                           fsr2l	equ	0xFD9
  4913                           status	equ	0xFD8
  4914                           
  4915 ;; *************** function ___ftdiv *****************
  4916 ;; Defined at:
  4917 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  f1              3   12[COMRAM] float 
  4920 ;;  f2              3   15[COMRAM] float 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  f3              3   22[COMRAM] float 
  4923 ;;  sign            1   26[COMRAM] unsigned char 
  4924 ;;  exp             1   25[COMRAM] unsigned char 
  4925 ;;  cntr            1   21[COMRAM] unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  3   12[COMRAM] float 
  4928 ;; Registers used:
  4929 ;;		wreg, status,2, status,0, cstack
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4935 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;Total ram usage:       15 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:    1
  4942 ;; This function calls:
  4943 ;;		___ftpack
  4944 ;; This function is called by:
  4945 ;;		_Read_Ch_Volt
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text22
  4950  0023D4                     __ptext22:
  4951                           	opt stack 0
  4952  0023D4                     ___ftdiv:
  4953                           	opt stack 28
  4954                           
  4955                           ;incstack = 0
  4956  0023D4  C00F  F013         	movff	___ftdiv@f1+2,??___ftdiv
  4957  0023D8  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  4958  0023DA  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  4959  0023DC  340E               	rlcf	___ftdiv@f1+1,w,c
  4960  0023DE  3613               	rlcf	??___ftdiv& (0+255),f,c
  4961  0023E0  E301               	bnc	u2171
  4962  0023E2  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  4963  0023E4                     u2171:
  4964  0023E4  5013               	movf	??___ftdiv,w,c
  4965  0023E6  6E1A               	movwf	___ftdiv@exp,c
  4966  0023E8  501A               	movf	___ftdiv@exp,w,c
  4967  0023EA  A4D8               	btfss	status,2,c
  4968  0023EC  D002               	goto	l2147
  4969  0023EE  D00E               	goto	l2149
  4970  0023F0  D061               	goto	l565
  4971  0023F2                     l2147:
  4972  0023F2  C012  F013         	movff	___ftdiv@f2+2,??___ftdiv
  4973  0023F6  6A14               	clrf	(??___ftdiv+1)& (0+255),c
  4974  0023F8  6A15               	clrf	(??___ftdiv+2)& (0+255),c
  4975  0023FA  3411               	rlcf	___ftdiv@f2+1,w,c
  4976  0023FC  3613               	rlcf	??___ftdiv& (0+255),f,c
  4977  0023FE  E301               	bnc	u2191
  4978  002400  8014               	bsf	(??___ftdiv+1)& (0+255),0,c
  4979  002402                     u2191:
  4980  002402  5013               	movf	??___ftdiv,w,c
  4981  002404  6E1B               	movwf	___ftdiv@sign,c
  4982  002406  501B               	movf	___ftdiv@sign,w,c
  4983  002408  A4D8               	btfss	status,2,c
  4984  00240A  D007               	goto	l2153
  4985  00240C                     l2149:
  4986  00240C  0E00               	movlw	0
  4987  00240E  6E0D               	movwf	?___ftdiv,c
  4988  002410  0E00               	movlw	0
  4989  002412  6E0E               	movwf	?___ftdiv+1,c
  4990  002414  0E00               	movlw	0
  4991  002416  6E0F               	movwf	?___ftdiv+2,c
  4992  002418  D04D               	goto	l565
  4993  00241A                     l2153:
  4994  00241A  0E00               	movlw	0
  4995  00241C  6E17               	movwf	___ftdiv@f3,c
  4996  00241E  0E00               	movlw	0
  4997  002420  6E18               	movwf	___ftdiv@f3+1,c
  4998  002422  0E00               	movlw	0
  4999  002424  6E19               	movwf	___ftdiv@f3+2,c
  5000  002426  501B               	movf	___ftdiv@sign,w,c
  5001  002428  0F89               	addlw	137
  5002  00242A  5E1A               	subwf	___ftdiv@exp,f,c
  5003  00242C  C00F  F01B         	movff	___ftdiv@f1+2,___ftdiv@sign
  5004  002430  5012               	movf	___ftdiv@f2+2,w,c
  5005  002432  1A1B               	xorwf	___ftdiv@sign,f,c
  5006  002434  0E80               	movlw	128
  5007  002436  161B               	andwf	___ftdiv@sign,f,c
  5008  002438  8E0E               	bsf	___ftdiv@f1+1,7,c
  5009  00243A  0EFF               	movlw	255
  5010  00243C  160D               	andwf	___ftdiv@f1,f,c
  5011  00243E  0EFF               	movlw	255
  5012  002440  160E               	andwf	___ftdiv@f1+1,f,c
  5013  002442  0E00               	movlw	0
  5014  002444  160F               	andwf	___ftdiv@f1+2,f,c
  5015  002446  8E11               	bsf	___ftdiv@f2+1,7,c
  5016  002448  0EFF               	movlw	255
  5017  00244A  1610               	andwf	___ftdiv@f2,f,c
  5018  00244C  0EFF               	movlw	255
  5019  00244E  1611               	andwf	___ftdiv@f2+1,f,c
  5020  002450  0E00               	movlw	0
  5021  002452  1612               	andwf	___ftdiv@f2+2,f,c
  5022  002454  0E18               	movlw	24
  5023  002456  6E16               	movwf	___ftdiv@cntr,c
  5024  002458  D000               	goto	l2173
  5025  00245A                     l2173:
  5026  00245A  90D8               	bcf	status,0,c
  5027  00245C  3617               	rlcf	___ftdiv@f3,f,c
  5028  00245E  3618               	rlcf	___ftdiv@f3+1,f,c
  5029  002460  3619               	rlcf	___ftdiv@f3+2,f,c
  5030  002462  5010               	movf	___ftdiv@f2,w,c
  5031  002464  5C0D               	subwf	___ftdiv@f1,w,c
  5032  002466  5011               	movf	___ftdiv@f2+1,w,c
  5033  002468  580E               	subwfb	___ftdiv@f1+1,w,c
  5034  00246A  5012               	movf	___ftdiv@f2+2,w,c
  5035  00246C  580F               	subwfb	___ftdiv@f1+2,w,c
  5036  00246E  A0D8               	btfss	status,0,c
  5037  002470  D007               	goto	l568
  5038  002472  5010               	movf	___ftdiv@f2,w,c
  5039  002474  5E0D               	subwf	___ftdiv@f1,f,c
  5040  002476  5011               	movf	___ftdiv@f2+1,w,c
  5041  002478  5A0E               	subwfb	___ftdiv@f1+1,f,c
  5042  00247A  5012               	movf	___ftdiv@f2+2,w,c
  5043  00247C  5A0F               	subwfb	___ftdiv@f1+2,f,c
  5044  00247E  8017               	bsf	___ftdiv@f3,0,c
  5045  002480                     l568:
  5046  002480  90D8               	bcf	status,0,c
  5047  002482  360D               	rlcf	___ftdiv@f1,f,c
  5048  002484  360E               	rlcf	___ftdiv@f1+1,f,c
  5049  002486  360F               	rlcf	___ftdiv@f1+2,f,c
  5050  002488  2E16               	decfsz	___ftdiv@cntr,f,c
  5051  00248A  D7E7               	goto	l2173
  5052  00248C  D000               	goto	l2183
  5053  00248E                     l2183:
  5054  00248E  C017  F001         	movff	___ftdiv@f3,___ftpack@arg
  5055  002492  C018  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5056  002496  C019  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5057  00249A  C01A  F004         	movff	___ftdiv@exp,___ftpack@exp
  5058  00249E  C01B  F005         	movff	___ftdiv@sign,___ftpack@sign
  5059  0024A2  EC5B  F012         	call	___ftpack	;wreg free
  5060  0024A6  C001  F00D         	movff	?___ftpack,?___ftdiv
  5061  0024AA  C002  F00E         	movff	?___ftpack+1,?___ftdiv+1
  5062  0024AE  C003  F00F         	movff	?___ftpack+2,?___ftdiv+2
  5063  0024B2  D000               	goto	l565
  5064  0024B4                     l565:
  5065  0024B4  0012               	return		;funcret
  5066  0024B6                     __end_of___ftdiv:
  5067                           	opt stack 0
  5068                           tblptru	equ	0xFF8
  5069                           tblptrh	equ	0xFF7
  5070                           tblptrl	equ	0xFF6
  5071                           tablat	equ	0xFF5
  5072                           prodh	equ	0xFF4
  5073                           prodl	equ	0xFF3
  5074                           wreg	equ	0xFE8
  5075                           postinc2	equ	0xFDE
  5076                           postdec2	equ	0xFDD
  5077                           fsr2h	equ	0xFDA
  5078                           fsr2l	equ	0xFD9
  5079                           status	equ	0xFD8
  5080                           
  5081 ;; *************** function ___awtoft *****************
  5082 ;; Defined at:
  5083 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  c               2    8[COMRAM] int 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  sign            1   11[COMRAM] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  3    8[COMRAM] float 
  5090 ;; Registers used:
  5091 ;;		wreg, status,2, status,0, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5097 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;Total ram usage:        4 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    1
  5104 ;; This function calls:
  5105 ;;		___ftpack
  5106 ;; This function is called by:
  5107 ;;		_Read_Ch_Volt
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text23
  5112  0029B0                     __ptext23:
  5113                           	opt stack 0
  5114  0029B0                     ___awtoft:
  5115                           	opt stack 28
  5116                           
  5117                           ;incstack = 0
  5118  0029B0  0E00               	movlw	0
  5119  0029B2  6E0C               	movwf	___awtoft@sign,c
  5120  0029B4  AE0A               	btfss	___awtoft@c+1,7,c
  5121  0029B6  D007               	goto	l2203
  5122  0029B8  6C09               	negf	___awtoft@c,c
  5123  0029BA  1E0A               	comf	___awtoft@c+1,f,c
  5124  0029BC  B0D8               	btfsc	status,0,c
  5125  0029BE  2A0A               	incf	___awtoft@c+1,f,c
  5126  0029C0  0E01               	movlw	1
  5127  0029C2  6E0C               	movwf	___awtoft@sign,c
  5128  0029C4  D000               	goto	l2203
  5129  0029C6                     l2203:
  5130  0029C6  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5131  0029CA  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5132  0029CE  6A03               	clrf	___ftpack@arg+2,c
  5133  0029D0  0E8E               	movlw	142
  5134  0029D2  6E04               	movwf	___ftpack@exp,c
  5135  0029D4  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5136  0029D8  EC5B  F012         	call	___ftpack	;wreg free
  5137  0029DC  C001  F009         	movff	?___ftpack,?___awtoft
  5138  0029E0  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5139  0029E4  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5140  0029E8  D000               	goto	l386
  5141  0029EA                     l386:
  5142  0029EA  0012               	return		;funcret
  5143  0029EC                     __end_of___awtoft:
  5144                           	opt stack 0
  5145                           tblptru	equ	0xFF8
  5146                           tblptrh	equ	0xFF7
  5147                           tblptrl	equ	0xFF6
  5148                           tablat	equ	0xFF5
  5149                           prodh	equ	0xFF4
  5150                           prodl	equ	0xFF3
  5151                           wreg	equ	0xFE8
  5152                           postinc2	equ	0xFDE
  5153                           postdec2	equ	0xFDD
  5154                           fsr2h	equ	0xFDA
  5155                           fsr2l	equ	0xFD9
  5156                           status	equ	0xFD8
  5157                           
  5158 ;; *************** function ___ftpack *****************
  5159 ;; Defined at:
  5160 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  arg             3    0[COMRAM] unsigned um
  5163 ;;  exp             1    3[COMRAM] unsigned char 
  5164 ;;  sign            1    4[COMRAM] unsigned char 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  3    0[COMRAM] float 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5176 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;Total ram usage:        8 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		___awtoft
  5186 ;;		___ftadd
  5187 ;;		___ftdiv
  5188 ;;		___ftmul
  5189 ;;		___lltoft
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text24
  5194  0024B6                     __ptext24:
  5195                           	opt stack 0
  5196  0024B6                     ___ftpack:
  5197                           	opt stack 27
  5198                           
  5199                           ;incstack = 0
  5200  0024B6  5004               	movf	___ftpack@exp,w,c
  5201  0024B8  B4D8               	btfsc	status,2,c
  5202  0024BA  D005               	goto	l1665
  5203  0024BC  5001               	movf	___ftpack@arg,w,c
  5204  0024BE  1002               	iorwf	___ftpack@arg+1,w,c
  5205  0024C0  1003               	iorwf	___ftpack@arg+2,w,c
  5206  0024C2  A4D8               	btfss	status,2,c
  5207  0024C4  D00E               	goto	l1671
  5208  0024C6                     l1665:
  5209  0024C6  0E00               	movlw	0
  5210  0024C8  6E01               	movwf	?___ftpack,c
  5211  0024CA  0E00               	movlw	0
  5212  0024CC  6E02               	movwf	?___ftpack+1,c
  5213  0024CE  0E00               	movlw	0
  5214  0024D0  6E03               	movwf	?___ftpack+2,c
  5215  0024D2  D053               	goto	l493
  5216  0024D4  D006               	goto	l1671
  5217  0024D6                     l1669:
  5218  0024D6  2A04               	incf	___ftpack@exp,f,c
  5219  0024D8  90D8               	bcf	status,0,c
  5220  0024DA  3203               	rrcf	___ftpack@arg+2,f,c
  5221  0024DC  3202               	rrcf	___ftpack@arg+1,f,c
  5222  0024DE  3201               	rrcf	___ftpack@arg,f,c
  5223  0024E0  D000               	goto	l1671
  5224  0024E2                     l1671:
  5225  0024E2  0E00               	movlw	0
  5226  0024E4  1401               	andwf	___ftpack@arg,w,c
  5227  0024E6  6E06               	movwf	??___ftpack& (0+255),c
  5228  0024E8  0E00               	movlw	0
  5229  0024EA  1402               	andwf	___ftpack@arg+1,w,c
  5230  0024EC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5231  0024EE  0EFE               	movlw	254
  5232  0024F0  1403               	andwf	___ftpack@arg+2,w,c
  5233  0024F2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5234  0024F4  5006               	movf	??___ftpack,w,c
  5235  0024F6  1007               	iorwf	??___ftpack+1,w,c
  5236  0024F8  1008               	iorwf	??___ftpack+2,w,c
  5237  0024FA  B4D8               	btfsc	status,2,c
  5238  0024FC  D00E               	goto	l1677
  5239  0024FE  D7EB               	goto	l1669
  5240  002500  D00C               	goto	l1677
  5241  002502                     l1673:
  5242  002502  2A04               	incf	___ftpack@exp,f,c
  5243  002504  0E01               	movlw	1
  5244  002506  2601               	addwf	___ftpack@arg,f,c
  5245  002508  0E00               	movlw	0
  5246  00250A  2202               	addwfc	___ftpack@arg+1,f,c
  5247  00250C  0E00               	movlw	0
  5248  00250E  2203               	addwfc	___ftpack@arg+2,f,c
  5249  002510  90D8               	bcf	status,0,c
  5250  002512  3203               	rrcf	___ftpack@arg+2,f,c
  5251  002514  3202               	rrcf	___ftpack@arg+1,f,c
  5252  002516  3201               	rrcf	___ftpack@arg,f,c
  5253  002518  D000               	goto	l1677
  5254  00251A                     l1677:
  5255  00251A  0E00               	movlw	0
  5256  00251C  1401               	andwf	___ftpack@arg,w,c
  5257  00251E  6E06               	movwf	??___ftpack& (0+255),c
  5258  002520  0E00               	movlw	0
  5259  002522  1402               	andwf	___ftpack@arg+1,w,c
  5260  002524  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5261  002526  0EFF               	movlw	255
  5262  002528  1403               	andwf	___ftpack@arg+2,w,c
  5263  00252A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5264  00252C  5006               	movf	??___ftpack,w,c
  5265  00252E  1007               	iorwf	??___ftpack+1,w,c
  5266  002530  1008               	iorwf	??___ftpack+2,w,c
  5267  002532  B4D8               	btfsc	status,2,c
  5268  002534  D008               	goto	l1681
  5269  002536  D7E5               	goto	l1673
  5270  002538  D006               	goto	l1681
  5271  00253A                     l1679:
  5272  00253A  0604               	decf	___ftpack@exp,f,c
  5273  00253C  90D8               	bcf	status,0,c
  5274  00253E  3601               	rlcf	___ftpack@arg,f,c
  5275  002540  3602               	rlcf	___ftpack@arg+1,f,c
  5276  002542  3603               	rlcf	___ftpack@arg+2,f,c
  5277  002544  D000               	goto	l1681
  5278  002546                     l1681:
  5279  002546  BE02               	btfsc	___ftpack@arg+1,7,c
  5280  002548  D004               	goto	l504
  5281  00254A  0E02               	movlw	2
  5282  00254C  6004               	cpfslt	___ftpack@exp,c
  5283  00254E  D7F5               	goto	l1679
  5284  002550  D000               	goto	l504
  5285  002552                     l504:
  5286  002552  B004               	btfsc	___ftpack@exp,0,c
  5287  002554  D002               	goto	l1687
  5288  002556  9E02               	bcf	___ftpack@arg+1,7,c
  5289  002558  D000               	goto	l1687
  5290  00255A                     l1687:
  5291  00255A  90D8               	bcf	status,0,c
  5292  00255C  3204               	rrcf	___ftpack@exp,f,c
  5293  00255E  5004               	movf	___ftpack@exp,w,c
  5294  002560  1203               	iorwf	___ftpack@arg+2,f,c
  5295  002562  5005               	movf	___ftpack@sign,w,c
  5296  002564  B4D8               	btfsc	status,2,c
  5297  002566  D002               	goto	l1693
  5298  002568  8E03               	bsf	___ftpack@arg+2,7,c
  5299  00256A  D000               	goto	l1693
  5300  00256C                     l1693:
  5301  00256C  C001  F001         	movff	___ftpack@arg,?___ftpack
  5302  002570  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5303  002574  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5304  002578  D000               	goto	l493
  5305  00257A                     l493:
  5306  00257A  0012               	return		;funcret
  5307  00257C                     __end_of___ftpack:
  5308                           	opt stack 0
  5309                           tblptru	equ	0xFF8
  5310                           tblptrh	equ	0xFF7
  5311                           tblptrl	equ	0xFF6
  5312                           tablat	equ	0xFF5
  5313                           prodh	equ	0xFF4
  5314                           prodl	equ	0xFF3
  5315                           wreg	equ	0xFE8
  5316                           postinc2	equ	0xFDE
  5317                           postdec2	equ	0xFDD
  5318                           fsr2h	equ	0xFDA
  5319                           fsr2l	equ	0xFD9
  5320                           status	equ	0xFD8
  5321                           
  5322 ;; *************** function _Get_Full_ADC *****************
  5323 ;; Defined at:
  5324 ;;		line 34 in file "lab1p3.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  result          2    4[COMRAM] int 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  2    0[COMRAM] unsigned int 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;Total ram usage:        6 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_Read_Ch_Volt
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text25
  5352  002A14                     __ptext25:
  5353                           	opt stack 0
  5354  002A14                     _Get_Full_ADC:
  5355                           	opt stack 29
  5356                           
  5357                           ;lab1p3.c: 36: int result;
  5358                           ;lab1p3.c: 37: ADCON0bits.GO=1;
  5359                           
  5360                           ;incstack = 0
  5361  002A14  82C2               	bsf	4034,1,c	;volatile
  5362                           
  5363                           ;lab1p3.c: 38: while(ADCON0bits.DONE==1);
  5364  002A16  D000               	goto	l37
  5365  002A18                     l37:
  5366  002A18  B2C2               	btfsc	4034,1,c	;volatile
  5367  002A1A  D7FE               	goto	l37
  5368                           
  5369                           ;lab1p3.c: 39: result = (ADRESH * 0x100) + ADRESL;
  5370  002A1C  50C4               	movf	4036,w,c	;volatile
  5371  002A1E  6E04               	movwf	(??_Get_Full_ADC+1)& (0+255),c
  5372  002A20  6A03               	clrf	??_Get_Full_ADC& (0+255),c
  5373  002A22  50C3               	movf	4035,w,c	;volatile
  5374  002A24  2403               	addwf	??_Get_Full_ADC,w,c
  5375  002A26  6E05               	movwf	Get_Full_ADC@result,c
  5376  002A28  0E00               	movlw	0
  5377  002A2A  2004               	addwfc	??_Get_Full_ADC+1,w,c
  5378  002A2C  6E06               	movwf	Get_Full_ADC@result+1,c
  5379                           
  5380                           ;lab1p3.c: 40: return result;
  5381  002A2E  C005  F001         	movff	Get_Full_ADC@result,?_Get_Full_ADC
  5382  002A32  C006  F002         	movff	Get_Full_ADC@result+1,?_Get_Full_ADC+1
  5383  002A36  D000               	goto	l40
  5384  002A38                     l40:
  5385  002A38  0012               	return		;funcret
  5386  002A3A                     __end_of_Get_Full_ADC:
  5387                           	opt stack 0
  5388                           tblptru	equ	0xFF8
  5389                           tblptrh	equ	0xFF7
  5390                           tblptrl	equ	0xFF6
  5391                           tablat	equ	0xFF5
  5392                           prodh	equ	0xFF4
  5393                           prodl	equ	0xFF3
  5394                           wreg	equ	0xFE8
  5395                           postinc2	equ	0xFDE
  5396                           postdec2	equ	0xFDD
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _Init_ADC *****************
  5402 ;; Defined at:
  5403 ;;		line 28 in file "lab1p3.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;		None               void
  5410 ;; Registers used:
  5411 ;;		wreg, status,2
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:        0 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_main
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text26
  5431  002A82                     __ptext26:
  5432                           	opt stack 0
  5433  002A82                     _Init_ADC:
  5434                           	opt stack 30
  5435                           
  5436                           ;lab1p3.c: 30: ADCON0=0x01;
  5437                           
  5438                           ;incstack = 0
  5439  002A82  0E01               	movlw	1
  5440  002A84  6EC2               	movwf	4034,c	;volatile
  5441                           
  5442                           ;lab1p3.c: 31: ADCON1=0x0a;
  5443  002A86  0E0A               	movlw	10
  5444  002A88  6EC1               	movwf	4033,c	;volatile
  5445                           
  5446                           ;lab1p3.c: 32: ADCON2=0xA9;
  5447  002A8A  0EA9               	movlw	169
  5448  002A8C  6EC0               	movwf	4032,c	;volatile
  5449  002A8E  0012               	return		;funcret
  5450  002A90                     __end_of_Init_ADC:
  5451                           	opt stack 0
  5452                           tblptru	equ	0xFF8
  5453                           tblptrh	equ	0xFF7
  5454                           tblptrl	equ	0xFF6
  5455                           tablat	equ	0xFF5
  5456                           prodh	equ	0xFF4
  5457                           prodl	equ	0xFF3
  5458                           wreg	equ	0xFE8
  5459                           postinc2	equ	0xFDE
  5460                           postdec2	equ	0xFDD
  5461                           fsr2h	equ	0xFDA
  5462                           fsr2l	equ	0xFD9
  5463                           status	equ	0xFD8
  5464                           tblptru	equ	0xFF8
  5465                           tblptrh	equ	0xFF7
  5466                           tblptrl	equ	0xFF6
  5467                           tablat	equ	0xFF5
  5468                           prodh	equ	0xFF4
  5469                           prodl	equ	0xFF3
  5470                           wreg	equ	0xFE8
  5471                           postinc2	equ	0xFDE
  5472                           postdec2	equ	0xFDD
  5473                           fsr2h	equ	0xFDA
  5474                           fsr2l	equ	0xFD9
  5475                           status	equ	0xFD8
  5476                           
  5477                           	psect	rparam
  5478  0000                     tblptru	equ	0xFF8
  5479                           tblptrh	equ	0xFF7
  5480                           tblptrl	equ	0xFF6
  5481                           tablat	equ	0xFF5
  5482                           prodh	equ	0xFF4
  5483                           prodl	equ	0xFF3
  5484                           wreg	equ	0xFE8
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8


Data Sizes:
    Strings     115
    Constant    118
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    107     107
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_5(CODE[34]), STR_4(CODE[21]), STR_3(CODE[20]), STR_2(CODE[20]), 
		 -> STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _init_UART->_OpenUSART
    _Read_Ch_Volt->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   44800
                                            104 COMRAM     3     3      0
                           _Init_ADC
                       _Read_Ch_Volt
                          _init_UART
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   36477
                                             70 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8696
                                             42 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8498
                                             42 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1250
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1360
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     411
                                             49 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3131
                                             64 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2878
                                             52 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Read_Ch_Volt                                         9     6      3    7935
                                             42 COMRAM     9     6      3
                       _Get_Full_ADC
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3742
                                             27 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2212
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    1890
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _Get_Full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_ADC
   _Read_Ch_Volt
     _Get_Full_ADC
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     6B      6B       1       84.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Feb 02 23:36:06 2022

                     l40 2A38                       l43 282A                       l37 2A18  
                     l76 1AF0                       l69 1D34             ___awdiv@sign 000C  
    ___wmul@multiplicand 0011             ___ftadd@exp1 0040             ___ftadd@exp2 003F  
           ___ftadd@sign 003E                      l121 156C                      l132 1710  
                    l160 28E2                      l161 28E4                      l162 28EE  
                    l163 28F0                      l156 28C8                      l165 290A  
                    l504 2552                      l168 2A12                      l361 2610  
                    l452 2112                      l533 1D7A                      l461 2102  
                    l534 1EF8                      l614 29AE                      l374 27B4  
                    l607 2A50                      l537 1DA4                      l386 29EA  
                    l618 22F0                      l548 1E66                      l493 257A  
                    l565 24B4                      l557 1E82                      l573 2008  
                    l582 1FF8                      l591 26A6                      l575 1F70  
                    l568 2480                      l576 1F98                      l657 2722  
                    l667 288A                      l597 220A                      l687 296A  
           ___awmod@sign 0006                      wreg 000FE8             __CFG_LVP$OFF 000000  
           ___ftdiv@cntr 0016             ___ftdiv@sign 001B             __CFG_WDT$OFF 000000  
                   l2003 18E6                     l2021 1ACC                     l2031 1F18  
                   l2015 1A1A                     l2007 18F6                     l2203 29C6  
                   l2211 2644                     l2131 20D4                     l2115 20A0  
                   l2107 206E                     l2221 26A2                     l2301 283E  
                   l2133 20DA                     l2037 1F36                     l2215 2676  
                   l2303 284C                     l2127 20C4                     l2119 20B0  
                   l2071 1FCA                     l2153 241A                     l2305 2854  
                   l2137 20EE                     l2073 1FD0                     l2147 23F2  
                   l2235 222A                     l2315 2912                     l2139 20FC  
                   l2067 1FBA                     l2059 1FA6                     l2411 1360  
                   l2173 245A                     l2149 240C                     l2253 2284  
                   l2309 287A                     l2317 2920                     l2093 202A  
                   l2077 1FE4                     l2405 1332                     l2183 248E  
                   l1711 1D88                     l2191 2984                     l2271 22DE  
                   l2263 22AE                     l2087 201A                     l2079 1FF2  
                   l2423 1444                     l2415 13A2                     l2351 113C  
                   l2343 1106                     l2265 22BC                     l2257 2294  
                   l2281 26CA                     l2441 14A4                     l2433 1484  
                   l2425 1448                     l2417 13D0                     l2409 1356  
                   l2345 1112                     l1803 21A0                     l1723 1DBE  
                   l2259 229A                     l2267 22C6                     l2283 26D8  
                   l2419 13DE                     l2339 10F6                     l1813 21CE  
                   l1741 1E16                     l1733 1DE6                     l1717 1DB2  
                   l2293 2712                     l2285 26E0                     l2453 1548  
                   l2437 1488                     l2429 1454                     l2381 1220  
                   l2365 118E                     l2349 111A                     l1671 24E2  
                   l1807 21B6                     l1911 28B8                     l1751 1E4E  
                   l1743 1E22                     l2455 1556                     l2447 152E  
                   l1681 2546                     l1673 2502                     l1665 24C6  
                   l1817 21E4                     l1809 21BC                     l1753 1E5A  
                   l1745 1E2A                     l1841 25BA                     l2481 16CC  
                   l2465 158C                     l2449 153A                     l2393 12AA  
                   l1915 28C0                     l1907 28AE                     l1739 1E0A  
                   l1843 25C4                     l1835 25A4                     l2475 16B2  
                   l2459 1572                     l2395 12BA                     l2483 16D8  
                   l2491 22FC                     l1693 256C                     l1677 251A  
                   l1669 24D6                     l1781 214C                     l1861 2606  
                   l1853 25EA                     l1845 25CC                     l1829 2592  
                   l2477 16BE                     l2469 15DC                     l2397 12EA  
                   l2389 1284                     l1687 255A                     l1679 253A  
                   l1927 28DA                     l1919 28CC                     l1759 1EA0  
                   l2399 12FA                     l2487 16F4                     l1785 215A  
                   l1769 1ED2                     l1857 25F6                     l1881 2766  
                   l1873 274A                     l1953 2A76                     l1779 2132  
                   l1883 2770                     l1955 2A7C                     l1885 2778  
                   l1893 279A                     l1877 2758                     l1799 218E  
                   l1983 1CF4                     l1975 1C30                     l1897 27AA  
                   l1889 278E                     l1997 183E                     STR_1 10AE  
                   STR_2 10C2                     STR_3 10D6                     STR_4 1099  
                   STR_5 1077                     u2011 1F0A                     u2031 1F28  
                   u2300 2248                     u1431 1D46                     u1441 1D5A  
                   u2305 2240                     u2171 23E4                     u2191 2402  
                   u1641 2124                     u2281 221C                     u1661 2142  
                   u2630 1566                     u2470 11C6                     u2475 11BC  
           printf@tmpval 0061                     _TRMT 007D61                     _main 22F2  
           ___ftpack@arg 0001             ___ftpack@exp 0004                     fsr2h 000FDA  
                   fsr2l 000FD9                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___ftmul@cntr 0029             ___param_bank 000010  
           ___ftmul@sign 002A            ?_Read_Ch_Volt 002B     __end_of_Get_Full_ADC 2A3A  
           ___fttol@exp1 0040             ___fttol@lval 003C                    ?_main 0001  
        __end_of___awdiv 2612          __end_of___ftadd 1EFA          __end_of___awmod 27B6  
        __end_of___ftdiv 24B6          __end_of___ftneg 2A5E          __end_of___lldiv 2734  
        __end_of___ftmul 220C          ___awdiv@divisor 0009          __end_of___llmod 289C  
        __end_of___ftsub 29B0          __end_of___fttol 22F2          ___awdiv@counter 000B  
                  _RCSTA 000FAB                    _SPBRG 000FAF                    _TXREG 000FAD  
                  _TXSTA 000FAC             ___lltoft@exp 0011            ___awtoft@sign 000C  
        __end_of_dpowers 1029                    _scale 1712            ___ftpack@sign 0005  
                  _putch 2A72           __CFG_BOREN$OFF 000000                    tablat 000FF5  
                  status 000FD8          __initialization 2A90           ??_Read_Ch_Volt 002E  
           __end_of_main 23D4         __end_of_Init_ADC 2A90                   ??_main 0069  
          ___fttol@sign1 003B            __activetblptr 000002     __size_of__tdiv_to_l_ 0110  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
       ___llmod@dividend 0001                   ?_scale 002B                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0007         __end_of___awtoft 29EC  
                 ?_putch 0001         __end_of___ftpack 257C         __end_of___lltoft 296C  
                 _OSCCON 000FD3                   _SPBRGH 000FB0       Get_Full_ADC@result 0005  
       __end_of__powers_ 1077       __size_of_OpenUSART 0070                   ___ftge 2612  
                 ___wmul 29EC                ??___awdiv 000B                ??___ftadd 003B  
              ??___awmod 0005                ??___ftdiv 0013                ??___ftneg 0004  
              ??___lldiv 0009                ??___ftmul 0022                ??___llmod 0009  
              ??___ftsub 0047                ??___fttol 0036                   _fround 1AF2  
       ___awdiv@quotient 000D          ___awmod@divisor 0003          ___awmod@counter 0005  
                 _printf 10EC    ___ftmul@f3_as_product 0026             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001               __accesstop 0080  __end_of__initialization 2A90  
             ___ftadd@f1 0035               ___ftadd@f2 0038               ___ftge@ff1 0001  
             ___ftge@ff2 0004            ___rparam_used 000001               ___ftdiv@f1 000D  
             ___ftdiv@f2 0010               ___ftdiv@f3 0017    __size_of_Get_Full_ADC 0026  
             ___ftneg@f1 0001               ___awtoft@c 0009               ___ftmul@f1 001C  
             ___ftmul@f2 001F               ___ftsub@f1 0041               ___ftsub@f2 0044  
             ___fttol@f1 0032           __pcstackCOMRAM 0001               ___lltoft@c 0009  
          __end_of_scale 1AF2            __end_of_putch 2A82               __div_to_l_ 200A  
      __end_of_OpenUSART 290C     __end_of_Read_Ch_Volt 282C          __div_to_l_@exp1 000C  
        __div_to_l_@cntr 000B                  ??_scale 002E          __div_to_l_@quot 0007  
           _Get_Full_ADC 2A14                  ??_putch 0001                ?_Init_ADC 0001  
     __size_of_init_UART 0014            __div_to_l_@f1 0001            __div_to_l_@f2 0004  
                ?___ftge 0001                  ?___wmul 000F                  ?_fround 002B  
              ?___awtoft 0009                ?___ftpack 0001                  ?_printf 0047  
              ?___lltoft 0009               ??_Init_ADC 0001        __end_of__npowers_ 1050  
                __Hparam 0000               _scale$1008 002E                  __Lparam 0000  
        __size_of___ftge 0096                  ___awdiv 257C                  ___ftadd 1D36  
                ___awmod 2734                  ___ftdiv 23D4                  ___ftneg 2A3A  
                ___lldiv 26A8          __size_of___wmul 0028                  ___ftmul 2114  
                ___llmod 282C                  ___ftsub 296C                  ___fttol 220C  
           __psmallconst 1000                  __pcinit 2A90               ??___awtoft 000C  
             ??___ftpack 0006          __size_of_fround 0244                  __ramtop 1000  
             ??___lltoft 000D                  __ptext0 22F2                  __ptext1 10EC  
                __ptext2 1712                  __ptext3 2A72                  __ptext4 1AF2  
                __ptext5 29EC                  __ptext6 2734                  __ptext7 257C  
                __ptext8 1EFA                  __ptext9 200A          __size_of_printf 0626  
      __end_of_init_UART 2A72              ?__div_to_l_ 0001                  _dpowers 1001  
       ___awmod@dividend 0001         Read_Ch_Volt@Volt 002E     end_of_initialization 2A90  
          __Lmediumconst 0000          ___lldiv@divisor 0005          ___lldiv@counter 000D  
              _RCSTAbits 000FAB                  printf@c 0068                  printf@f 0047  
                postdec2 000FDD                  postinc2 000FDE           __tdiv_to_l_@f1 0001  
         __tdiv_to_l_@f2 0004            ??__tdiv_to_l_ 0007    __size_of_Read_Ch_Volt 0076  
              _TRISCbits 000F94              ___ftdiv@exp 001A                _TXSTAbits 000FAC  
    __size_of__div_to_l_ 010A              ___ftmul@exp 0025             _Read_Ch_Volt 27B6  
         __end_of___ftge 26A8           __end_of___wmul 2A14           __end_of_fround 1D36  
         __end_of_printf 1712      start_initialization 2A90      __end_of__tdiv_to_l_ 200A  
              _OpenUSART 289C          ___llmod@divisor 0005         __CFG_OSC$INTIO67 000000  
      __size_of_Init_ADC 000E          ___llmod@counter 0009                 ??___ftge 0007  
               ??___wmul 0013                 ??_fround 002E                 ??_printf 004C  
             fround@prec 0034        __size_of___awtoft 003C        __size_of___ftpack 00C6  
      __size_of___lltoft 0060               ?_OpenUSART 0001                 ?___awdiv 0007  
               ?___ftadd 0035                 ?___awmod 0001                 ?___ftdiv 000D  
               ?___ftneg 0001                 ?___lldiv 0001                 ?___ftmul 001C  
               ?___llmod 0001                 ?___ftsub 0041                __npowers_ 1029  
               ?___fttol 0032              __tdiv_to_l_ 1EFA             ??__div_to_l_ 0007  
            __smallconst 1000                _init_UART 2A5E           __size_of_scale 03E0  
         __size_of_putch 0010           ___wmul@product 0013                 _PIE1bits 000F9D  
               _PIR1bits 000F9E       __end_of__div_to_l_ 2114               _ADCON0bits 000FC2  
      ___wmul@multiplier 000F               printf@flag 0057               printf@fval 0065  
             printf@prec 0059               ?_init_UART 0001       Read_Ch_Volt@ch_num 0033  
               _Init_ADC 2A82              ??_OpenUSART 0003          OpenUSART@config 0003  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 0096  
       __size_of___ftadd 01C4         __size_of___awmod 0082         __size_of___ftdiv 00E2  
       __size_of___ftneg 0024         __size_of___lldiv 008C         __size_of___ftmul 00F8  
       __size_of___llmod 0070         __size_of___ftsub 0044         __size_of___fttol 00E6  
               ___awtoft 29B0                 ___ftpack 24B6   Read_Ch_Volt@ADC_Result 0031  
            _fround$1006 0031              _fround$1007 002E                 ___lltoft 290C  
               __ptext10 290C                 __ptext11 282C                 __ptext20 27B6  
               __ptext12 26A8                 __ptext21 2114                 __ptext13 220C  
               __ptext22 23D4                 __ptext14 296C                 __ptext23 29B0  
               __ptext15 1D36                 __ptext24 24B6                 __ptext16 2A3A  
               __ptext25 2A14                 __ptext17 2612                 __ptext26 2A82  
               __ptext18 2A5E                 __ptext19 289C                 __powers_ 1050  
          ?_Get_Full_ADC 0001            __size_of_main 00E2                 main@Volt 0069  
              printf@exp 005F                printf@val 005B           OpenUSART@spbrg 0001  
            ??_init_UART 0004           ??_Get_Full_ADC 0003                 scale@scl 0031  
       __tdiv_to_l_@exp1 000F         __tdiv_to_l_@cntr 000E         __tdiv_to_l_@quot 000A  
       ___lldiv@dividend 0001                 printf@ap 0055             ?__tdiv_to_l_ 0001  
            _printf$1009 0052         ___lldiv@quotient 0009  
